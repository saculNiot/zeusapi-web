{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/relationship/CreateRelationshipABAC.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { FillForm } from \"../../utils/components\";\nimport { FormLabel, Button as ChakraButton, Text, Stack, Spinner } from \"@chakra-ui/react\";\nimport { Form, Input, message, Radio, Select, Space } from \"antd\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { RoleRepo } from \"../../services/api/repositories/role_repo\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { ClientRepo } from \"../../services/api/repositories/client_repo\";\nimport { RelationshipRepo } from \"../../services/api/repositories/relationship_repo\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nexport const CreateRelationshipABAC = () => {\n  _s();\n\n  let location = useLocation();\n  let history = useHistory();\n  let clientRepo = new ClientRepo();\n  let roleRepo = new RoleRepo();\n  let relationshipRepo = new RelationshipRepo();\n  const locationState = location.state;\n  const [form] = Form.useForm();\n  const [_roleList, setRoleList] = useState([]);\n  const [_clientList, setClientList] = useState([]);\n  const [_isRoleListLoading, setRoleListLoading] = useState(true);\n  const [_isClientListLoading, setClientListLoading] = useState(true);\n\n  async function getClients() {\n    let apiResult = await clientRepo.getAllClients({\n      history: history\n    });\n\n    if (apiResult.isSuccess) {\n      if (apiResult.data.length > 0) apiResult.data.forEach(element => {\n        setClientList(prevState => {\n          return [...prevState, element];\n        });\n      });\n    }\n\n    setClientListLoading(false);\n  }\n\n  async function getRoles() {\n    let apiResult = await roleRepo.getAllRoles({\n      history: history\n    });\n\n    if (apiResult.isSuccess) {\n      if (apiResult.data.length > 0) apiResult.data.forEach(element => {\n        setRoleList(prevState => {\n          return [...prevState, element];\n        });\n      });\n    }\n\n    setRoleListLoading(false);\n  }\n\n  const proceedToCreatePage = value => {\n    if (value === RoutePath.create_client || value === RoutePath.create_role) history.replace(value);\n  };\n\n  const children = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      children: \"Client\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"client\",\n        rules: [{\n          required: true,\n          message: \"Please select a client\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Select a client\",\n          onChange: proceedToCreatePage,\n          style: {\n            width: \"300px\"\n          },\n          allowClear: true,\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: RoutePath.create_client,\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              color: \"gray.500\",\n              children: [\" \", \"Click here to create a new client\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 7\n          }, this), _clientList.map(item => {\n            return /*#__PURE__*/_jsxDEV(Option, {\n              value: item.clientId,\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 9\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), _isClientListLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: \"Or Client's Attribute\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form.List, {\n      name: \"clientAttribute\",\n      children: (fields, {\n        add,\n        remove\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [fields.map(({\n          key,\n          name,\n          ...restField\n        }) => /*#__PURE__*/_jsxDEV(Space, {\n          style: {\n            display: \"flex\",\n            marginBottom: 8\n          },\n          align: \"baseline\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...restField,\n            name: [name, \"key\"],\n            rules: [{\n              required: true,\n              message: \"Missing attribute key\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Attribute Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...restField,\n            name: [name, \"value\"],\n            rules: [{\n              required: true,\n              message: \"Missing attribute value\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Attribute value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {\n            onClick: () => remove(name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 9\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 8\n        }, this)), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(ChakraButton, {\n            variant: \"outline\",\n            onClick: () => add(),\n            leftIcon: /*#__PURE__*/_jsxDEV(PlusOutlined, {\n              color: \"blue.400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              color: \"blue.400\",\n              children: \"Add Attribute\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n      children: \"Role\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"role\",\n        rules: [{\n          required: true,\n          message: \"Please select a role\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Select a role\",\n          onChange: proceedToCreatePage,\n          style: {\n            width: \"300px\"\n          },\n          allowClear: true,\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: RoutePath.create_role,\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              color: \"gray.500\",\n              children: \"Click here to create a new role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 7\n          }, this), _roleList.map(item => {\n            return /*#__PURE__*/_jsxDEV(Option, {\n              value: item.roleId,\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 9\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 5\n      }, this), _isRoleListLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: \"Or Role's Attribute\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form.List, {\n      name: \"roleAttribute\",\n      children: (fields, {\n        add,\n        remove\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [fields.map(({\n          key,\n          name,\n          ...restField\n        }) => /*#__PURE__*/_jsxDEV(Space, {\n          style: {\n            display: \"flex\",\n            marginBottom: 8\n          },\n          align: \"baseline\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...restField,\n            name: [name, \"key\"],\n            rules: [{\n              required: true,\n              message: \"Missing attribute key\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Attribute Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...restField,\n            name: [name, \"value\"],\n            rules: [{\n              required: true,\n              message: \"Missing attribute value\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Attribute value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {\n            onClick: () => remove(name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 9\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 8\n        }, this)), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(ChakraButton, {\n            variant: \"outline\",\n            onClick: () => add(),\n            leftIcon: /*#__PURE__*/_jsxDEV(PlusOutlined, {\n              color: \"blue.400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              color: \"blue.400\",\n              children: \"Add Attribute\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n      children: \"Permission\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"permission\",\n      rules: [{\n        required: true,\n        message: \"Please choose the permission of the client!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: \"owner\",\n          children: \"Owner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: \"editor\",\n          children: \"Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: \"viewer\",\n          children: \"Viewer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n\n  const onSubmit = async values => {\n    console.log(values[\"client\"]);\n    let userId = await LocalStorage.getUserID();\n    let apiResult = await relationshipRepo.saveRelationship({\n      history: history,\n      clientRoleRelId: locationState !== undefined ? locationState.clientRoleRelId : null,\n      createdById: userId !== null && userId !== void 0 ? userId : \"\",\n      client: values[\"client\"],\n      role: values[\"role\"],\n      permission: values[\"permission\"]\n    });\n\n    if (apiResult.isSuccess) {\n      message.success(\"Relationship has created\");\n      locationState !== undefined ? history.replace(RoutePath.dashboard) : form.resetFields();\n    } else {\n      message.error(\"Fail to save\");\n    }\n  };\n\n  useEffect(() => {\n    getClients();\n    getRoles();\n    return () => {// setRoleData(new Role({}));\n    };\n  }, []); // Set Initial Values Using State in antd form\n\n  useEffect(() => {\n    form.resetFields();\n  }, [_clientList, _roleList]);\n  return /*#__PURE__*/_jsxDEV(FillForm, {\n    formComponents: children,\n    title: \"Attribute-Based client role relationship details\",\n    subtitle: \"Please fill in the relationship\",\n    initialValue: {},\n    form: form,\n    onSubmit: onSubmit,\n    isFormLoading: false,\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CreateRelationshipABAC, \"9mnpC8+9Y4O3SXdgV0SIv5EHT0E=\", false, function () {\n  return [useLocation, useHistory, Form.useForm];\n});\n\n_c = CreateRelationshipABAC;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRelationshipABAC\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/relationship/CreateRelationshipABAC.tsx"],"names":["React","useEffect","useState","FillForm","FormLabel","Button","ChakraButton","Text","Stack","Spinner","Form","Input","message","Radio","Select","Space","LocalStorage","RoleRepo","useHistory","useLocation","RoutePath","ClientRepo","RelationshipRepo","MinusCircleOutlined","PlusOutlined","Option","CreateRelationshipABAC","location","history","clientRepo","roleRepo","relationshipRepo","locationState","state","form","useForm","_roleList","setRoleList","_clientList","setClientList","_isRoleListLoading","setRoleListLoading","_isClientListLoading","setClientListLoading","getClients","apiResult","getAllClients","isSuccess","data","length","forEach","element","prevState","getRoles","getAllRoles","proceedToCreatePage","value","create_client","create_role","replace","children","required","width","map","item","clientId","name","fields","add","remove","key","restField","display","marginBottom","roleId","onSubmit","values","console","log","userId","getUserID","saveRelationship","clientRoleRelId","undefined","createdById","client","role","permission","success","dashboard","resetFields","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SACCC,SADD,EAECC,MAAM,IAAIC,YAFX,EAGCC,IAHD,EAICC,KAJD,EAKCC,OALD,QAQO,kBARP;AASA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,KAA/B,EAAsCC,MAAtC,EAA8CC,KAA9C,QAA2D,MAA3D;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,QAAT,QAAyB,2CAAzB;AAEA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,UAAT,QAA2B,6CAA3B;AAEA,SAASC,gBAAT,QAAiC,mDAAjC;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,mBAAlD;;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaX,MAAnB;AAEA,OAAO,MAAMY,sBAAqC,GAAG,MAAM;AAAA;;AAC1D,MAAIC,QAAQ,GAAGR,WAAW,EAA1B;AACA,MAAIS,OAAO,GAAGV,UAAU,EAAxB;AAEA,MAAIW,UAAU,GAAG,IAAIR,UAAJ,EAAjB;AACA,MAAIS,QAAQ,GAAG,IAAIb,QAAJ,EAAf;AACA,MAAIc,gBAAgB,GAAG,IAAIT,gBAAJ,EAAvB;AAEA,QAAMU,aAAkB,GAAGL,QAAQ,CAACM,KAApC;AACA,QAAM,CAACC,IAAD,IAASxB,IAAI,CAACyB,OAAL,EAAf;AAEA,QAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BnC,QAAQ,CAAc,EAAd,CAAzC;AACA,QAAM,CAACoC,WAAD,EAAcC,aAAd,IAA+BrC,QAAQ,CAAgB,EAAhB,CAA7C;AACA,QAAM,CAACsC,kBAAD,EAAqBC,kBAArB,IAA2CvC,QAAQ,CAAU,IAAV,CAAzD;AACA,QAAM,CAACwC,oBAAD,EAAuBC,oBAAvB,IACLzC,QAAQ,CAAU,IAAV,CADT;;AAGA,iBAAe0C,UAAf,GAA4B;AAC3B,QAAIC,SAAS,GAAG,MAAMhB,UAAU,CAACiB,aAAX,CAAyB;AAC9ClB,MAAAA,OAAO,EAAEA;AADqC,KAAzB,CAAtB;;AAIA,QAAIiB,SAAS,CAACE,SAAd,EAAyB;AACxB,UAAIF,SAAS,CAACG,IAAV,CAAeC,MAAf,GAAwB,CAA5B,EACCJ,SAAS,CAACG,IAAV,CAAeE,OAAf,CAAwBC,OAAD,IAAqB;AAC3CZ,QAAAA,aAAa,CAAEa,SAAD,IAAe;AAC5B,iBAAO,CAAC,GAAGA,SAAJ,EAAeD,OAAf,CAAP;AACA,SAFY,CAAb;AAGA,OAJD;AAKD;;AACDR,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACA;;AAED,iBAAeU,QAAf,GAA0B;AACzB,QAAIR,SAAS,GAAG,MAAMf,QAAQ,CAACwB,WAAT,CAAqB;AAC1C1B,MAAAA,OAAO,EAAEA;AADiC,KAArB,CAAtB;;AAIA,QAAIiB,SAAS,CAACE,SAAd,EAAyB;AACxB,UAAIF,SAAS,CAACG,IAAV,CAAeC,MAAf,GAAwB,CAA5B,EACCJ,SAAS,CAACG,IAAV,CAAeE,OAAf,CAAwBC,OAAD,IAAqB;AAC3Cd,QAAAA,WAAW,CAAEe,SAAD,IAAe;AAC1B,iBAAO,CAAC,GAAGA,SAAJ,EAAeD,OAAf,CAAP;AACA,SAFU,CAAX;AAGA,OAJD;AAKD;;AACDV,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACA;;AAED,QAAMc,mBAAmB,GAAIC,KAAD,IAAmB;AAC9C,QACCA,KAAK,KAAKpC,SAAS,CAACqC,aAApB,IACAD,KAAK,KAAKpC,SAAS,CAACsC,WAFrB,EAIC9B,OAAO,CAAC+B,OAAR,CAAgBH,KAAhB;AACD,GAND;;AAQA,QAAMI,QAAQ,gBACb;AAAA,4BACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE,KAAlB;AAAyB,MAAA,OAAO,EAAE,CAAlC;AAAA,8BACC,QAAC,IAAD,CAAM,IAAN;AACC,QAAA,IAAI,EAAC,QADN;AAEC,QAAA,KAAK,EAAE,CACN;AACCC,UAAAA,QAAQ,EAAE,IADX;AAECjD,UAAAA,OAAO,EAAE;AAFV,SADM,CAFR;AAAA,+BASC,QAAC,MAAD;AACC,UAAA,WAAW,EAAC,iBADb;AAEC,UAAA,QAAQ,EAAE2C,mBAFX;AAGC,UAAA,KAAK,EAAE;AAAEO,YAAAA,KAAK,EAAE;AAAT,WAHR;AAIC,UAAA,UAAU,MAJX;AAAA,kCAMC,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAE1C,SAAS,CAACqC,aAAzB;AAAA,mCACC,QAAC,IAAD;AAAM,cAAA,KAAK,EAAE,UAAb;AAAA,yBACE,GADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBAND,EAYEnB,WAAW,CAACyB,GAAZ,CAAiBC,IAAD,IAAU;AAC1B,gCACC,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAEA,IAAI,CAACC,QAApB;AAAA,wBACED,IAAI,CAACE;AADP;AAAA;AAAA;AAAA;AAAA,oBADD;AAKA,WANA,CAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AATD;AAAA;AAAA;AAAA;AAAA,cADD,EA+BExB,oBAAoB,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAiB,qCA/BvC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAmCC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCD,eAoCC,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,iBAAhB;AAAA,gBACE,CAACyB,MAAD,EAAS;AAAEC,QAAAA,GAAF;AAAOC,QAAAA;AAAP,OAAT,kBACA;AAAA,mBACEF,MAAM,CAACJ,GAAP,CAAW,CAAC;AAAEO,UAAAA,GAAF;AAAOJ,UAAAA,IAAP;AAAa,aAAGK;AAAhB,SAAD,kBACX,QAAC,KAAD;AAEC,UAAA,KAAK,EAAE;AACNC,YAAAA,OAAO,EAAE,MADH;AAENC,YAAAA,YAAY,EAAE;AAFR,WAFR;AAMC,UAAA,KAAK,EAAC,UANP;AAAA,kCAQC,QAAC,IAAD,CAAM,IAAN,OACKF,SADL;AAEC,YAAA,IAAI,EAAE,CAACL,IAAD,EAAO,KAAP,CAFP;AAGC,YAAA,KAAK,EAAE,CACN;AACCL,cAAAA,QAAQ,EAAE,IADX;AAECjD,cAAAA,OAAO,EAAE;AAFV,aADM,CAHR;AAAA,mCAUC,QAAC,KAAD;AAAO,cAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAVD;AAAA;AAAA;AAAA;AAAA,kBARD,eAoBC,QAAC,IAAD,CAAM,IAAN,OACK2D,SADL;AAEC,YAAA,IAAI,EAAE,CAACL,IAAD,EAAO,OAAP,CAFP;AAGC,YAAA,KAAK,EAAE,CACN;AACCL,cAAAA,QAAQ,EAAE,IADX;AAECjD,cAAAA,OAAO,EAAE;AAFV,aADM,CAHR;AAAA,mCAUC,QAAC,KAAD;AAAO,cAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAVD;AAAA;AAAA;AAAA;AAAA,kBApBD,eAgCC,QAAC,mBAAD;AACC,YAAA,OAAO,EAAE,MAAMyD,MAAM,CAACH,IAAD;AADtB;AAAA;AAAA;AAAA;AAAA,kBAhCD;AAAA,WACMI,GADN;AAAA;AAAA;AAAA;AAAA,gBADA,CADF,eAuCC,QAAC,IAAD,CAAM,IAAN;AAAA,iCACC,QAAC,YAAD;AACC,YAAA,OAAO,EAAC,SADT;AAEC,YAAA,OAAO,EAAE,MAAMF,GAAG,EAFnB;AAGC,YAAA,QAAQ,eAAE,QAAC,YAAD;AAAc,cAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,oBAHX;AAAA,mCAKC,QAAC,IAAD;AAAM,cAAA,KAAK,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAvCD;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YApCD,eAyFC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzFD,eA0FC,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE,KAAlB;AAAyB,MAAA,OAAO,EAAE,CAAlC;AAAA,8BACC,QAAC,IAAD,CAAM,IAAN;AACC,QAAA,IAAI,EAAC,MADN;AAEC,QAAA,KAAK,EAAE,CACN;AACCP,UAAAA,QAAQ,EAAE,IADX;AAECjD,UAAAA,OAAO,EAAE;AAFV,SADM,CAFR;AAAA,+BASC,QAAC,MAAD;AACC,UAAA,WAAW,EAAC,eADb;AAEC,UAAA,QAAQ,EAAE2C,mBAFX;AAGC,UAAA,KAAK,EAAE;AAAEO,YAAAA,KAAK,EAAE;AAAT,WAHR;AAIC,UAAA,UAAU,MAJX;AAAA,kCAMC,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAE1C,SAAS,CAACsC,WAAzB;AAAA,mCACC,QAAC,IAAD;AAAM,cAAA,KAAK,EAAE,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBAND,EAWEtB,SAAS,CAAC2B,GAAV,CAAeC,IAAD,IAAU;AACxB,gCACC,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAEA,IAAI,CAACU,MAApB;AAAA,wBAA6BV,IAAI,CAACE;AAAlC;AAAA;AAAA;AAAA;AAAA,oBADD;AAGA,WAJA,CAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AATD;AAAA;AAAA;AAAA;AAAA,cADD,EA4BE1B,kBAAkB,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAiB,qCA5BrC;AAAA;AAAA;AAAA;AAAA;AAAA,YA1FD,eAwHC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxHD,eAyHC,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,eAAhB;AAAA,gBACE,CAAC2B,MAAD,EAAS;AAAEC,QAAAA,GAAF;AAAOC,QAAAA;AAAP,OAAT,kBACA;AAAA,mBACEF,MAAM,CAACJ,GAAP,CAAW,CAAC;AAAEO,UAAAA,GAAF;AAAOJ,UAAAA,IAAP;AAAa,aAAGK;AAAhB,SAAD,kBACX,QAAC,KAAD;AAEC,UAAA,KAAK,EAAE;AACNC,YAAAA,OAAO,EAAE,MADH;AAENC,YAAAA,YAAY,EAAE;AAFR,WAFR;AAMC,UAAA,KAAK,EAAC,UANP;AAAA,kCAQC,QAAC,IAAD,CAAM,IAAN,OACKF,SADL;AAEC,YAAA,IAAI,EAAE,CAACL,IAAD,EAAO,KAAP,CAFP;AAGC,YAAA,KAAK,EAAE,CACN;AACCL,cAAAA,QAAQ,EAAE,IADX;AAECjD,cAAAA,OAAO,EAAE;AAFV,aADM,CAHR;AAAA,mCAUC,QAAC,KAAD;AAAO,cAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAVD;AAAA;AAAA;AAAA;AAAA,kBARD,eAoBC,QAAC,IAAD,CAAM,IAAN,OACK2D,SADL;AAEC,YAAA,IAAI,EAAE,CAACL,IAAD,EAAO,OAAP,CAFP;AAGC,YAAA,KAAK,EAAE,CACN;AACCL,cAAAA,QAAQ,EAAE,IADX;AAECjD,cAAAA,OAAO,EAAE;AAFV,aADM,CAHR;AAAA,mCAUC,QAAC,KAAD;AAAO,cAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAVD;AAAA;AAAA;AAAA;AAAA,kBApBD,eAgCC,QAAC,mBAAD;AACC,YAAA,OAAO,EAAE,MAAMyD,MAAM,CAACH,IAAD;AADtB;AAAA;AAAA;AAAA;AAAA,kBAhCD;AAAA,WACMI,GADN;AAAA;AAAA;AAAA;AAAA,gBADA,CADF,eAuCC,QAAC,IAAD,CAAM,IAAN;AAAA,iCACC,QAAC,YAAD;AACC,YAAA,OAAO,EAAC,SADT;AAEC,YAAA,OAAO,EAAE,MAAMF,GAAG,EAFnB;AAGC,YAAA,QAAQ,eAAE,QAAC,YAAD;AAAc,cAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,oBAHX;AAAA,mCAKC,QAAC,IAAD;AAAM,cAAA,KAAK,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAvCD;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAzHD,eA8KC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9KD,eA+KC,QAAC,IAAD,CAAM,IAAN;AACC,MAAA,IAAI,EAAC,YADN;AAEC,MAAA,KAAK,EAAE,CACN;AACCP,QAAAA,QAAQ,EAAE,IADX;AAECjD,QAAAA,OAAO,EAAE;AAFV,OADM,CAFR;AAAA,6BASC,QAAC,KAAD,CAAO,KAAP;AAAA,gCACC,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,KAAK,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,KAAK,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,KAAK,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AATD;AAAA;AAAA;AAAA;AAAA,YA/KD;AAAA,kBADD;;AAkMA,QAAM+D,QAAQ,GAAG,MAAOC,MAAP,IAAuB;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAAC,QAAD,CAAlB;AACA,QAAIG,MAAM,GAAG,MAAM/D,YAAY,CAACgE,SAAb,EAAnB;AACA,QAAInC,SAAS,GAAG,MAAMd,gBAAgB,CAACkD,gBAAjB,CAAkC;AACvDrD,MAAAA,OAAO,EAAEA,OAD8C;AAEvDsD,MAAAA,eAAe,EACdlD,aAAa,KAAKmD,SAAlB,GACGnD,aAAa,CAACkD,eADjB,GAEG,IALmD;AAMvDE,MAAAA,WAAW,EAAEL,MAAF,aAAEA,MAAF,cAAEA,MAAF,GAAY,EANgC;AAOvDM,MAAAA,MAAM,EAAET,MAAM,CAAC,QAAD,CAPyC;AAQvDU,MAAAA,IAAI,EAAEV,MAAM,CAAC,MAAD,CAR2C;AASvDW,MAAAA,UAAU,EAAEX,MAAM,CAAC,YAAD;AATqC,KAAlC,CAAtB;;AAWA,QAAI/B,SAAS,CAACE,SAAd,EAAyB;AACxBnC,MAAAA,OAAO,CAAC4E,OAAR,CAAgB,0BAAhB;AACAxD,MAAAA,aAAa,KAAKmD,SAAlB,GACGvD,OAAO,CAAC+B,OAAR,CAAgBvC,SAAS,CAACqE,SAA1B,CADH,GAEGvD,IAAI,CAACwD,WAAL,EAFH;AAGA,KALD,MAKO;AACN9E,MAAAA,OAAO,CAAC+E,KAAR,CAAc,cAAd;AACA;AACD,GAtBD;;AAwBA1F,EAAAA,SAAS,CAAC,MAAM;AACf2C,IAAAA,UAAU;AACVS,IAAAA,QAAQ;AAER,WAAO,MAAM,CACZ;AACA,KAFD;AAGA,GAPQ,EAON,EAPM,CAAT,CAnR0D,CA4R1D;;AACApD,EAAAA,SAAS,CAAC,MAAM;AACfiC,IAAAA,IAAI,CAACwD,WAAL;AACA,GAFQ,EAEN,CAACpD,WAAD,EAAcF,SAAd,CAFM,CAAT;AAIA,sBACC,QAAC,QAAD;AACC,IAAA,cAAc,EAAEwB,QADjB;AAEC,IAAA,KAAK,EAAE,kDAFR;AAGC,IAAA,QAAQ,EAAE,iCAHX;AAIC,IAAA,YAAY,EAAE,EAJf;AAKC,IAAA,IAAI,EAAE1B,IALP;AAMC,IAAA,QAAQ,EAAEyC,QANX;AAOC,IAAA,aAAa,EAAE,KAPhB;AAAA,cASE;AATF;AAAA;AAAA;AAAA;AAAA,UADD;AAaA,CA9SM;;GAAMjD,sB;UACGP,W,EACDD,U,EAOCR,IAAI,CAACyB,O;;;KATRT,sB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FillForm } from \"../../utils/components\";\nimport {\n\tFormLabel,\n\tButton as ChakraButton,\n\tText,\n\tStack,\n\tSpinner,\n\tButton,\n\tLink,\n} from \"@chakra-ui/react\";\nimport { Form, Input, message, Radio, Select, Space } from \"antd\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { RoleRepo } from \"../../services/api/repositories/role_repo\";\nimport { Role } from \"../../services/api/models/role_model\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { ClientRepo } from \"../../services/api/repositories/client_repo\";\nimport { Client } from \"../../services/api/models/client_model\";\nimport { RelationshipRepo } from \"../../services/api/repositories/relationship_repo\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\n\nconst { Option } = Select;\n\nexport const CreateRelationshipABAC: React.FC<any> = () => {\n\tlet location = useLocation();\n\tlet history = useHistory();\n\n\tlet clientRepo = new ClientRepo();\n\tlet roleRepo = new RoleRepo();\n\tlet relationshipRepo = new RelationshipRepo();\n\n\tconst locationState: any = location.state;\n\tconst [form] = Form.useForm();\n\n\tconst [_roleList, setRoleList] = useState<Array<Role>>([]);\n\tconst [_clientList, setClientList] = useState<Array<Client>>([]);\n\tconst [_isRoleListLoading, setRoleListLoading] = useState<boolean>(true);\n\tconst [_isClientListLoading, setClientListLoading] =\n\t\tuseState<boolean>(true);\n\n\tasync function getClients() {\n\t\tlet apiResult = await clientRepo.getAllClients({\n\t\t\thistory: history,\n\t\t});\n\n\t\tif (apiResult.isSuccess) {\n\t\t\tif (apiResult.data.length > 0)\n\t\t\t\tapiResult.data.forEach((element: Client) => {\n\t\t\t\t\tsetClientList((prevState) => {\n\t\t\t\t\t\treturn [...prevState, element];\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t\tsetClientListLoading(false);\n\t}\n\n\tasync function getRoles() {\n\t\tlet apiResult = await roleRepo.getAllRoles({\n\t\t\thistory: history,\n\t\t});\n\n\t\tif (apiResult.isSuccess) {\n\t\t\tif (apiResult.data.length > 0)\n\t\t\t\tapiResult.data.forEach((element: Client) => {\n\t\t\t\t\tsetRoleList((prevState) => {\n\t\t\t\t\t\treturn [...prevState, element];\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t\tsetRoleListLoading(false);\n\t}\n\n\tconst proceedToCreatePage = (value: string) => {\n\t\tif (\n\t\t\tvalue === RoutePath.create_client ||\n\t\t\tvalue === RoutePath.create_role\n\t\t)\n\t\t\thistory.replace(value);\n\t};\n\n\tconst children = (\n\t\t<>\n\t\t\t<FormLabel>Client</FormLabel>\n\t\t\t<Stack direction={\"row\"} spacing={4}>\n\t\t\t\t<Form.Item\n\t\t\t\t\tname=\"client\"\n\t\t\t\t\trules={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tmessage: \"Please select a client\",\n\t\t\t\t\t\t},\n\t\t\t\t\t]}\n\t\t\t\t>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tplaceholder=\"Select a client\"\n\t\t\t\t\t\tonChange={proceedToCreatePage}\n\t\t\t\t\t\tstyle={{ width: \"300px\" }}\n\t\t\t\t\t\tallowClear\n\t\t\t\t\t>\n\t\t\t\t\t\t<Option value={RoutePath.create_client}>\n\t\t\t\t\t\t\t<Text color={\"gray.500\"}>\n\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\tClick here to create a new client\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t{_clientList.map((item) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Option value={item.clientId}>\n\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Select>\n\t\t\t\t</Form.Item>\n\t\t\t\t{_isClientListLoading ? <Spinner /> : <></>}\n\t\t\t</Stack>\n\t\t\t<Text>Or Client's Attribute</Text>\n\t\t\t<Form.List name=\"clientAttribute\">\n\t\t\t\t{(fields, { add, remove }) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{fields.map(({ key, name, ...restField }) => (\n\t\t\t\t\t\t\t<Space\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\tmarginBottom: 8,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\talign=\"baseline\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t{...restField}\n\t\t\t\t\t\t\t\t\tname={[name, \"key\"]}\n\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\tmessage: \"Missing attribute key\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Input placeholder=\"Attribute Value\" />\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t{...restField}\n\t\t\t\t\t\t\t\t\tname={[name, \"value\"]}\n\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\tmessage: \"Missing attribute value\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Input placeholder=\"Attribute value\" />\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t<MinusCircleOutlined\n\t\t\t\t\t\t\t\t\tonClick={() => remove(name)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Space>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t<ChakraButton\n\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\tonClick={() => add()}\n\t\t\t\t\t\t\t\tleftIcon={<PlusOutlined color=\"blue.400\" />}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Text color=\"blue.400\">Add Attribute</Text>\n\t\t\t\t\t\t\t</ChakraButton>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Form.List>\n\t\t\t<FormLabel>Role</FormLabel>\n\t\t\t<Stack direction={\"row\"} spacing={4}>\n\t\t\t\t<Form.Item\n\t\t\t\t\tname=\"role\"\n\t\t\t\t\trules={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tmessage: \"Please select a role\",\n\t\t\t\t\t\t},\n\t\t\t\t\t]}\n\t\t\t\t>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tplaceholder=\"Select a role\"\n\t\t\t\t\t\tonChange={proceedToCreatePage}\n\t\t\t\t\t\tstyle={{ width: \"300px\" }}\n\t\t\t\t\t\tallowClear\n\t\t\t\t\t>\n\t\t\t\t\t\t<Option value={RoutePath.create_role}>\n\t\t\t\t\t\t\t<Text color={\"gray.500\"}>\n\t\t\t\t\t\t\t\tClick here to create a new role\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t{_roleList.map((item) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Option value={item.roleId}>{item.name}</Option>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Select>\n\t\t\t\t</Form.Item>\n\t\t\t\t{_isRoleListLoading ? <Spinner /> : <></>}\n\t\t\t</Stack>\n\t\t\t<Text>Or Role's Attribute</Text>\n\t\t\t<Form.List name=\"roleAttribute\">\n\t\t\t\t{(fields, { add, remove }) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{fields.map(({ key, name, ...restField }) => (\n\t\t\t\t\t\t\t<Space\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\tmarginBottom: 8,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\talign=\"baseline\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t{...restField}\n\t\t\t\t\t\t\t\t\tname={[name, \"key\"]}\n\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\tmessage: \"Missing attribute key\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Input placeholder=\"Attribute Value\" />\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t{...restField}\n\t\t\t\t\t\t\t\t\tname={[name, \"value\"]}\n\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\tmessage: \"Missing attribute value\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Input placeholder=\"Attribute value\" />\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t<MinusCircleOutlined\n\t\t\t\t\t\t\t\t\tonClick={() => remove(name)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Space>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t<ChakraButton\n\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\tonClick={() => add()}\n\t\t\t\t\t\t\t\tleftIcon={<PlusOutlined color=\"blue.400\" />}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Text color=\"blue.400\">Add Attribute</Text>\n\t\t\t\t\t\t\t</ChakraButton>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Form.List>\n\t\t\t<FormLabel>Permission</FormLabel>\n\t\t\t<Form.Item\n\t\t\t\tname=\"permission\"\n\t\t\t\trules={[\n\t\t\t\t\t{\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"Please choose the permission of the client!\",\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Radio.Group>\n\t\t\t\t\t<Radio.Button value=\"owner\">Owner</Radio.Button>\n\t\t\t\t\t<Radio.Button value=\"editor\">Editor</Radio.Button>\n\t\t\t\t\t<Radio.Button value=\"viewer\">Viewer</Radio.Button>\n\t\t\t\t</Radio.Group>\n\t\t\t</Form.Item>\n\t\t</>\n\t);\n\n\tconst onSubmit = async (values: any) => {\n\t\tconsole.log(values[\"client\"]);\n\t\tlet userId = await LocalStorage.getUserID();\n\t\tlet apiResult = await relationshipRepo.saveRelationship({\n\t\t\thistory: history,\n\t\t\tclientRoleRelId:\n\t\t\t\tlocationState !== undefined\n\t\t\t\t\t? locationState.clientRoleRelId\n\t\t\t\t\t: null,\n\t\t\tcreatedById: userId ?? \"\",\n\t\t\tclient: values[\"client\"],\n\t\t\trole: values[\"role\"],\n\t\t\tpermission: values[\"permission\"],\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tmessage.success(\"Relationship has created\");\n\t\t\tlocationState !== undefined\n\t\t\t\t? history.replace(RoutePath.dashboard)\n\t\t\t\t: form.resetFields();\n\t\t} else {\n\t\t\tmessage.error(\"Fail to save\");\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tgetClients();\n\t\tgetRoles();\n\n\t\treturn () => {\n\t\t\t// setRoleData(new Role({}));\n\t\t};\n\t}, []);\n\n\t// Set Initial Values Using State in antd form\n\tuseEffect(() => {\n\t\tform.resetFields();\n\t}, [_clientList, _roleList]);\n\n\treturn (\n\t\t<FillForm\n\t\t\tformComponents={children}\n\t\t\ttitle={\"Attribute-Based client role relationship details\"}\n\t\t\tsubtitle={\"Please fill in the relationship\"}\n\t\t\tinitialValue={{}}\n\t\t\tform={form}\n\t\t\tonSubmit={onSubmit}\n\t\t\tisFormLoading={false}\n\t\t>\n\t\t\t{\" \"}\n\t\t</FillForm>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}