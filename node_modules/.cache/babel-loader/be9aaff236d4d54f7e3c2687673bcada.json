{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/support/Contact.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { Layout, Row, Col, Form, Input, Card } from \"antd\";\nimport \"./Contact.less\";\nimport { BackHeader, EmailField, FormButton } from \"../../utils/components\";\nimport { SupportRepo } from \"../../services/api/repositories/support_repo\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 22,\n      offset: 0\n    },\n    sm: {\n      span: 14,\n      offset: 6\n    }\n  }\n};\n/* eslint-disable no-template-curly-in-string */\n\nconst validateMessages = {\n  required: \"${label} is required!\",\n  types: {\n    email: \"${label} is not a valid email!\",\n    number: \"${label} is not a valid number!\"\n  },\n  number: {\n    range: \"${label} must be between ${min} and ${max}\"\n  }\n};\nexport const Contact = () => {\n  _s();\n\n  let supportRepo = new SupportRepo(); // Get current sign in User\n\n  const user = useContext(AuthContext); // Create form reference\n\n  const [form] = Form.useForm();\n  const [isLoading, setLoading] = useState(false);\n\n  const onFinish = async values => {\n    setLoading(true);\n    let apiResult = await supportRepo.saveTicket({\n      userId: user === null || user === void 0 ? void 0 : user.uid,\n      name: values[\"name\"],\n      email: values[\"email\"],\n      ticketType: \"support\",\n      issueDesc: values[\"message\"]\n    });\n\n    if (apiResult.isSuccess) {\n      alert(\"Message sent success!\");\n      setLoading(false); // Reset Form\n\n      form.resetFields();\n    } else {\n      alert(apiResult.message);\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    className: \"layout\",\n    style: {\n      overflow: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      children: /*#__PURE__*/_jsxDEV(BackHeader, {\n        title: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      className: \"contact_content\",\n      style: {\n        backgroundColor: \"white\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"contact_row\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 8,\n          className: \"contact_col\",\n          span: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 8,\n          className: \"contact_col\",\n          span: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Form, { ...layout,\n              name: \"contact_form\",\n              onFinish: onFinish,\n              validateMessages: validateMessages,\n              form: form,\n              children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"name\",\n                label: \"Name\",\n                rules: [{\n                  required: true\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(EmailField, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"message\",\n                label: \"Messages\",\n                children: /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                wrapperCol: { ...layout.wrapperCol,\n                  offset: 6\n                },\n                children: /*#__PURE__*/_jsxDEV(FormButton, {\n                  title: \"Submit\",\n                  isLoading: isLoading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 8,\n          className: \"contact_col\",\n          span: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Contact, \"lpYdHhbVI1LSBTTdGX584DApBms=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/support/Contact.tsx"],"names":["React","useContext","useState","Layout","Row","Col","Form","Input","Card","BackHeader","EmailField","FormButton","SupportRepo","AuthContext","layout","labelCol","span","wrapperCol","tailFormItemLayout","xs","offset","sm","validateMessages","required","types","email","number","range","Contact","supportRepo","user","form","useForm","isLoading","setLoading","onFinish","values","apiResult","saveTicket","userId","uid","name","ticketType","issueDesc","isSuccess","alert","resetFields","message","overflow","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,KAAjC,EAAwCC,IAAxC,QAAoD,MAApD;AACA,OAAO,gBAAP;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,UAAjC,QAAmD,wBAAnD;AACA,SAASC,WAAT,QAA4B,8CAA5B;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR,GADC;AAEXC,EAAAA,UAAU,EAAE;AAAED,IAAAA,IAAI,EAAE;AAAR;AAFD,CAAf;AAKA,MAAME,kBAAkB,GAAG;AACvBD,EAAAA,UAAU,EAAE;AACRE,IAAAA,EAAE,EAAE;AACAH,MAAAA,IAAI,EAAE,EADN;AAEAI,MAAAA,MAAM,EAAE;AAFR,KADI;AAKRC,IAAAA,EAAE,EAAE;AACAL,MAAAA,IAAI,EAAE,EADN;AAEAI,MAAAA,MAAM,EAAE;AAFR;AALI;AADW,CAA3B;AAaA;;AACA,MAAME,gBAAgB,GAAG;AACrBC,EAAAA,QAAQ,EAAE,uBADW;AAErBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,gCADJ;AAEHC,IAAAA,MAAM,EAAE;AAFL,GAFc;AAMrBA,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH;AANa,CAAzB;AAWA,OAAO,MAAMC,OAAsB,GAAG,MAAM;AAAA;;AACxC,MAAIC,WAAW,GAAG,IAAIjB,WAAJ,EAAlB,CADwC,CAGxC;;AACA,QAAMkB,IAAI,GAAG7B,UAAU,CAACY,WAAD,CAAvB,CAJwC,CAKxC;;AACA,QAAM,CAACkB,IAAD,IAASzB,IAAI,CAAC0B,OAAL,EAAf;AAEA,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BhC,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMiC,QAAQ,GAAG,MAAOC,MAAP,IAAuB;AACpCF,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,QAAIG,SAAS,GAAG,MAAMR,WAAW,CAACS,UAAZ,CAAuB;AACzCC,MAAAA,MAAM,EAAET,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEU,GAD2B;AAEzCC,MAAAA,IAAI,EAAEL,MAAM,CAAC,MAAD,CAF6B;AAGzCX,MAAAA,KAAK,EAAEW,MAAM,CAAC,OAAD,CAH4B;AAIzCM,MAAAA,UAAU,EAAE,SAJ6B;AAKzCC,MAAAA,SAAS,EAAEP,MAAM,CAAC,SAAD;AALwB,KAAvB,CAAtB;;AAQA,QAAIC,SAAS,CAACO,SAAd,EAAyB;AACrBC,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACAX,MAAAA,UAAU,CAAC,KAAD,CAAV,CAFqB,CAGrB;;AACAH,MAAAA,IAAI,CAACe,WAAL;AACH,KALD,MAKO;AACHD,MAAAA,KAAK,CAACR,SAAS,CAACU,OAAX,CAAL;AACAb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GApBD;;AAsBA,sBACI,QAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAAEc,MAAAA,QAAQ,EAAE;AAAZ,KAAlC;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAA/B;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,KAAK,EAAE;AAAEA,QAAAA,eAAe,EAAE;AAAnB,OAA3C;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,EAAE,EAAE,CAAjB;AAAoB,UAAA,SAAS,EAAC,aAA9B;AAA4C,UAAA,IAAI,EAAE;AAAlD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,EAAE,EAAE,CAAjB;AAAoB,UAAA,SAAS,EAAC,aAA9B;AAA4C,UAAA,IAAI,EAAE,CAAlD;AAAA,iCACI,QAAC,IAAD;AAAA,mCACI,QAAC,IAAD,OACQnC,MADR;AAEI,cAAA,IAAI,EAAC,cAFT;AAGI,cAAA,QAAQ,EAAEqB,QAHd;AAII,cAAA,gBAAgB,EAAEb,gBAJtB;AAKI,cAAA,IAAI,EAAES,IALV;AAAA,sCAOI,QAAC,IAAD,CAAM,IAAN;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,KAAK,EAAC,MAFV;AAGI,gBAAA,KAAK,EAAE,CAAC;AAAER,kBAAAA,QAAQ,EAAE;AAAZ,iBAAD,CAHX;AAAA,uCAKI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAcI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,sBAdJ,eAgBI,QAAC,IAAD,CAAM,IAAN;AAAW,gBAAA,IAAI,EAAC,SAAhB;AAA0B,gBAAA,KAAK,EAAC,UAAhC;AAAA,uCACI,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAhBJ,eAmBI,QAAC,IAAD,CAAM,IAAN;AACI,gBAAA,UAAU,EAAE,EACR,GAAGT,MAAM,CAACG,UADF;AAERG,kBAAAA,MAAM,EAAE;AAFA,iBADhB;AAAA,uCAMI,QAAC,UAAD;AACI,kBAAA,KAAK,EAAC,QADV;AAEI,kBAAA,SAAS,EAAEa;AAFf;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,sBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAqCI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,EAAE,EAAE,CAAjB;AAAoB,UAAA,SAAS,EAAC,aAA9B;AAA4C,UAAA,IAAI,EAAE;AAAlD;AAAA;AAAA;AAAA;AAAA,gBArCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgDH,CAhFM;;GAAML,O;UAMMtB,IAAI,CAAC0B,O;;;KANXJ,O","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Form, Input, Card } from \"antd\";\nimport \"./Contact.less\";\nimport { BackHeader, EmailField, FormButton } from \"../../utils/components\";\nimport { SupportRepo } from \"../../services/api/repositories/support_repo\";\nimport { AuthContext } from \"../../utils/AuthContext\";\n\nconst layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 14 },\n};\n\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 22,\n            offset: 0,\n        },\n        sm: {\n            span: 14,\n            offset: 6,\n        },\n    },\n};\n\n/* eslint-disable no-template-curly-in-string */\nconst validateMessages = {\n    required: \"${label} is required!\",\n    types: {\n        email: \"${label} is not a valid email!\",\n        number: \"${label} is not a valid number!\",\n    },\n    number: {\n        range: \"${label} must be between ${min} and ${max}\",\n    },\n};\n\nexport const Contact: React.FC<any> = () => {\n    let supportRepo = new SupportRepo();\n\n    // Get current sign in User\n    const user = useContext(AuthContext);\n    // Create form reference\n    const [form] = Form.useForm();\n\n    const [isLoading, setLoading] = useState(false);\n\n    const onFinish = async (values: any) => {\n        setLoading(true);\n\n        let apiResult = await supportRepo.saveTicket({\n            userId: user?.uid,\n            name: values[\"name\"],\n            email: values[\"email\"],\n            ticketType: \"support\",\n            issueDesc: values[\"message\"]\n        });\n\n        if (apiResult.isSuccess) {\n            alert(\"Message sent success!\");\n            setLoading(false);\n            // Reset Form\n            form.resetFields();\n        } else {\n            alert(apiResult.message);\n            setLoading(false);\n        }\n    };\n\n    return (\n        <Layout className=\"layout\" style={{ overflow: \"auto\" }}>\n            <div className=\"navbar\" style={{ backgroundColor: \"#fff\" }}>\n                <BackHeader title=\"Contact\" />\n            </div>\n            <Layout className=\"contact_content\" style={{ backgroundColor: \"white\" }}>\n                <Row className=\"contact_row\">\n                    <Col xs={24} xl={8} className=\"contact_col\" span={8} />\n                    <Col xs={24} xl={8} className=\"contact_col\" span={8}>\n                        <Card>\n                            <Form\n                                {...layout}\n                                name=\"contact_form\"\n                                onFinish={onFinish}\n                                validateMessages={validateMessages}\n                                form={form}\n                            >\n                                <Form.Item\n                                    name=\"name\"\n                                    label=\"Name\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <Input />\n                                </Form.Item>\n                                <EmailField />\n\n                                <Form.Item name=\"message\" label=\"Messages\">\n                                    <Input.TextArea />\n                                </Form.Item>\n                                <Form.Item\n                                    wrapperCol={{\n                                        ...layout.wrapperCol,\n                                        offset: 6,\n                                    }}\n                                >\n                                    <FormButton\n                                        title=\"Submit\"\n                                        isLoading={isLoading}\n                                    />\n                                </Form.Item>\n                            </Form>\n                        </Card>\n                    </Col>\n                    <Col xs={24} xl={8} className=\"contact_col\" span={8} />\n                </Row>\n            </Layout>\n        </Layout>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}