{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/accesslog/AccessLogList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Layout, Row, Col, Space, Skeleton, Table } from \"antd\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { Box, Button, Flex, Spacer, Stack } from \"@chakra-ui/react\";\nimport Title from \"antd/lib/typography/Title\";\nimport { AccessLogRepo } from \"../../services/api/repositories/accesslog_repo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AccessLogList = () => {\n  _s();\n\n  let accessLogRepo = new AccessLogRepo();\n  let location = useLocation();\n  let history = useHistory();\n  const locationState = location.state; // Handle the state of each option in Menu bar\n\n  const [_viewTitle, setViewTitle] = useState(\"Clients\");\n  const [_viewList, setViewList] = useState([]);\n  const [_listLoading, setListLoading] = useState(true);\n\n  async function getClient() {\n    setViewList([]);\n    let userId = await LocalStorage.getUserID();\n    let apiResult = await accessLogRepo.getAccessLog({\n      history: history\n    });\n\n    if (apiResult.isSuccess) {\n      if (apiResult.data[0] !== undefined) {\n        setViewList(apiResult.data.map((item, index) => {\n          var _item$createdDateTime;\n\n          return {\n            index: index + 1,\n            key: item.requestId,\n            client: item.client === null ? \"N/A\" : item.client,\n            role: item.role === null ? \"N/A\" : item.role,\n            relationship: item.relationship === null ? \"N/A\" : item.relationship,\n            api: item.api,\n            createdDateTime: new Date((_item$createdDateTime = item.createdDateTime) !== null && _item$createdDateTime !== void 0 ? _item$createdDateTime : \"\").toLocaleString()\n          };\n        }));\n      }\n    }\n\n    setListLoading(false);\n  }\n\n  useEffect(() => {\n    getClient();\n    return () => {\n      setViewTitle(\"\");\n      setViewList([]);\n      setListLoading(true);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"dashboard_row\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 6,\n          className: \"dashboard_col\",\n          span: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 12,\n          className: \"dashboard_col\",\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(Flex, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                p: \"4\",\n                children: /*#__PURE__*/_jsxDEV(Title, {\n                  level: 4,\n                  children: \"Access Log\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n              active: true,\n              loading: _listLoading,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                dataSource: _viewList,\n                columns: [{\n                  title: \"Index\",\n                  dataIndex: \"index\",\n                  key: \"index\"\n                }, {\n                  title: \"client\",\n                  key: \"client\",\n                  render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n                    size: \"middle\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      backgroundColor: \"orange\",\n                      color: \"white\",\n                      onClick: () => {\n                        console.log(record);\n                      },\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 14\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 13\n                  }, this)\n                }, {\n                  title: \"Client ID\",\n                  dataIndex: \"client\",\n                  key: \"client\"\n                }, {\n                  title: \"Role ID\",\n                  dataIndex: \"role\",\n                  key: \"role\"\n                }, {\n                  title: \"Relationship ID\",\n                  dataIndex: \"relationship\",\n                  key: \"relationship\"\n                }, {\n                  title: \"API name\",\n                  dataIndex: \"api\",\n                  key: \"api\"\n                }, {\n                  title: \"Created Date\",\n                  dataIndex: \"createdDateTime\",\n                  key: \"createdDateTime\"\n                }]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 12,\n          className: \"dashboard_col\",\n          span: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(AccessLogList, \"i4jvoWtCNlpHh6sxwxqaDQ115O4=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = AccessLogList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccessLogList\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/accesslog/AccessLogList.tsx"],"names":["React","useEffect","useState","useHistory","useLocation","Layout","Row","Col","Space","Skeleton","Table","LocalStorage","Box","Button","Flex","Spacer","Stack","Title","AccessLogRepo","AccessLogList","accessLogRepo","location","history","locationState","state","_viewTitle","setViewTitle","_viewList","setViewList","_listLoading","setListLoading","getClient","userId","getUserID","apiResult","getAccessLog","isSuccess","data","undefined","map","item","index","key","requestId","client","role","relationship","api","createdDateTime","Date","toLocaleString","title","dataIndex","render","text","record","console","log"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Space, message, Skeleton, Table } from \"antd\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { User } from \"../../services/api/models/user_model\";\nimport { ClientRepo } from \"../../services/api/repositories/client_repo\";\nimport { Client } from \"../../services/api/models/client_model\";\nimport { RoleRepo } from \"../../services/api/repositories/role_repo\";\nimport { RelationshipRepo } from \"../../services/api/repositories/relationship_repo\";\nimport { Role } from \"../../services/api/models/role_model\";\nimport { Relationship } from \"../../services/api/models/relationship_model\";\nimport { Box, Button, Flex, Spacer, Stack } from \"@chakra-ui/react\";\nimport Title from \"antd/lib/typography/Title\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { AccessLogRepo } from \"../../services/api/repositories/accesslog_repo\";\nimport { AccessLog } from \"../../services/api/models/accesslog_model\";\n\nexport const AccessLogList: React.FC<any> = () => {\n\tlet accessLogRepo = new AccessLogRepo();\n\n\tlet location = useLocation();\n\tlet history = useHistory();\n\tconst locationState: any = location.state;\n\n\t// Handle the state of each option in Menu bar\n\n\tconst [_viewTitle, setViewTitle] = useState<string>(\"Clients\");\n\n\tconst [_viewList, setViewList] = useState<Array<Relationship>>([]);\n\n\tconst [_listLoading, setListLoading] = useState<boolean>(true);\n\n\tasync function getClient() {\n\t\tsetViewList([]);\n        let userId = await LocalStorage.getUserID();\n\t\tlet apiResult = await accessLogRepo.getAccessLog({\n\t\t\thistory: history,\n\t\t});\n\n\t\tif (apiResult.isSuccess) {\n\t\t\tif (apiResult.data[0] !== undefined) {\n\t\t\t\tsetViewList(\n\t\t\t\t\tapiResult.data.map((item: AccessLog, index: number) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tindex: index + 1,\n\t\t\t\t\t\t\tkey: item.requestId,\n\t\t\t\t\t\t\tclient: item.client === null ? \"N/A\" : item.client,\n\t\t\t\t\t\t\trole: item.role === null ? \"N/A\" : item.role,\n\t\t\t\t\t\t\trelationship:\n\t\t\t\t\t\t\t\titem.relationship === null\n\t\t\t\t\t\t\t\t\t? \"N/A\"\n\t\t\t\t\t\t\t\t\t: item.relationship,\n\t\t\t\t\t\t\tapi: item.api,\n\t\t\t\t\t\t\tcreatedDateTime: new Date(\n\t\t\t\t\t\t\t\titem.createdDateTime ?? \"\"\n\t\t\t\t\t\t\t).toLocaleString(),\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\tuseEffect(() => {\n\t\tgetClient();\n\n\t\treturn () => {\n\t\t\tsetViewTitle(\"\");\n\t\t\tsetViewList([]);\n\t\t\tsetListLoading(true);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Layout>\n\t\t\t\t<Row className=\"dashboard_row\">\n\t\t\t\t\t<Col xs={24} xl={6} className=\"dashboard_col\" span={6} />\n\t\t\t\t\t<Col xs={24} xl={12} className=\"dashboard_col\" span={12}>\n\t\t\t\t\t\t<Stack spacing={4}>\n\t\t\t\t\t\t\t<Flex>\n\t\t\t\t\t\t\t\t<Box p=\"4\">\n\t\t\t\t\t\t\t\t\t<Title level={4}>Access Log</Title>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t<Skeleton active loading={_listLoading}>\n\t\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\t\tdataSource={_viewList}\n\t\t\t\t\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Index\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"index\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"index\",\n\t\t\t\t\t\t\t\t\t\t},\n                                        {\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"client\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"client\",\n\t\t\t\t\t\t\t\t\t\t\trender: (text, record) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Space size=\"middle\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"orange\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={\"white\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(record);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</Space>\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Client ID\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"client\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"client\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Role ID\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"role\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"role\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Relationship ID\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex:\n\t\t\t\t\t\t\t\t\t\t\t\t\"relationship\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"relationship\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"API name\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"api\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"api\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Created Date\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"createdDateTime\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"createdDateTime\",\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Skeleton>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={24} xl={12} className=\"dashboard_col\" span={6} />\n\t\t\t\t</Row>\n\t\t\t</Layout>\n\t\t</>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}