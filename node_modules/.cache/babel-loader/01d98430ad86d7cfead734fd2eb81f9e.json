{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/relationship/CreateRelationship.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { FillForm } from \"../../utils/components\";\nimport { FormLabel, Text, Stack, Spinner } from \"@chakra-ui/react\";\nimport { Form, message, Radio, Select } from \"antd\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { RoleRepo } from \"../../services/api/repositories/role_repo\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { ClientRepo } from \"../../services/api/repositories/client_repo\";\nimport { RelationshipRepo } from \"../../services/api/repositories/relationship_repo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nexport const CreateRelationship = () => {\n  _s();\n\n  let location = useLocation();\n  let history = useHistory();\n  let clientRepo = new ClientRepo();\n  let roleRepo = new RoleRepo();\n  let relationshipRepo = new RelationshipRepo();\n  const locationState = location.state;\n  const [form] = Form.useForm();\n  const [_roleList, setRoleList] = useState([]);\n  const [_clientList, setClientList] = useState([]);\n  const [_isFormLoading, setFormLoading] = useState(true);\n  const [_isRoleListLoading, setRoleListLoading] = useState(true);\n  const [_isClientListLoading, setClientListLoading] = useState(true);\n\n  async function getClients() {\n    let userId = await LocalStorage.getUserID();\n    let apiResult = await clientRepo.getAllClients({\n      userId: userId\n    });\n\n    if (apiResult.isSuccess) {\n      if (apiResult.data.length > 0) apiResult.data.forEach(element => {\n        setClientList(prevState => {\n          return [...prevState, element];\n        });\n      });\n    }\n\n    setClientListLoading(false);\n  }\n\n  async function getRoles() {\n    let userId = await LocalStorage.getUserID();\n    let apiResult = await roleRepo.getAllRoles({\n      userId: userId\n    });\n\n    if (apiResult.isSuccess) {\n      if (apiResult.data.length > 0) apiResult.data.forEach(element => {\n        setRoleList(prevState => {\n          return [...prevState, element];\n        });\n      });\n    }\n\n    setRoleListLoading(false);\n  }\n\n  const proceedToCreatePage = value => {\n    if (value === RoutePath.create_client || value === RoutePath.create_role) history.replace(value);\n  };\n\n  const children = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      children: \"Client\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"client\",\n      rules: [{\n        required: true,\n        message: \"Please select a client\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 4,\n        width: \"50%\",\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Select a client\",\n          onChange: proceedToCreatePage,\n          allowClear: true,\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: RoutePath.create_client,\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              color: \"gray.500\",\n              children: [\" \", \"Click here to create a new client\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 7\n          }, this), _clientList.map(item => {\n            return /*#__PURE__*/_jsxDEV(Option, {\n              value: item.clientId,\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 9\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 6\n        }, this), _isClientListLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n      children: \"Role\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"role\",\n      rules: [{\n        required: true,\n        message: \"Please select a role\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 4,\n        width: \"50%\",\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Select a role\",\n          onChange: proceedToCreatePage,\n          allowClear: true,\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: RoutePath.create_role,\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              color: \"gray.500\",\n              children: \"Click here to create a new role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 7\n          }, this), _roleList.map(item => {\n            return /*#__PURE__*/_jsxDEV(Option, {\n              value: item.roleId,\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 9\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 6\n        }, this), _isRoleListLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 28\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n      children: \"Permission\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"permission\",\n      rules: [{\n        required: true,\n        message: \"Please choose the permission of the client!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: \"owner\",\n          children: \"Owner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: \"editor\",\n          children: \"Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: \"viewer\",\n          children: \"Viewer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n\n  const onSubmit = async values => {\n    console.log(values[\"client\"]);\n    let userId = await LocalStorage.getUserID();\n    let apiResult = await relationshipRepo.saveRelationship({\n      clientRoleRelId: locationState !== undefined ? locationState.roleId : null,\n      createdById: userId !== null && userId !== void 0 ? userId : \"\",\n      client: values[\"client\"],\n      role: values[\"role\"],\n      permission: values[\"permission\"]\n    });\n\n    if (apiResult.isSuccess) {\n      message.success(\"Relationship has created\");\n      locationState !== undefined ? history.replace(RoutePath.dashboard) : form.resetFields();\n    } else {\n      message.error(\"Fail to save\");\n    }\n  };\n\n  useEffect(() => {\n    async function initState() {\n      if (locationState !== undefined) {\n        let apiResult = await roleRepo.getRoleById({\n          roleId: locationState.roleId\n        });\n\n        if (apiResult.isSuccess) {// setRoleData(\n          // \tnew Role({\n          // \t\tname: apiResult.data[0].name,\n          // \t})\n          // );\n        }\n      }\n\n      setFormLoading(false);\n    }\n\n    initState();\n    getClients();\n    getRoles();\n    return () => {// setRoleData(new Role({}));\n    };\n  }, []); // Set Initial Values Using State in antd form\n\n  useEffect(() => {\n    form.resetFields();\n  }, [_clientList, _roleList]);\n  return /*#__PURE__*/_jsxDEV(FillForm, {\n    formComponents: children,\n    title: \"Client role relationship details\",\n    subtitle: \"Please fill in the relationship\",\n    initialValue: {},\n    form: form,\n    onSubmit: onSubmit,\n    isFormLoading: _isFormLoading,\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CreateRelationship, \"6lxM2yFaHFgV69qqI0SUK+RhfHA=\", false, function () {\n  return [useLocation, useHistory, Form.useForm];\n});\n\n_c = CreateRelationship;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRelationship\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/relationship/CreateRelationship.tsx"],"names":["React","useEffect","useState","FillForm","FormLabel","Text","Stack","Spinner","Form","message","Radio","Select","LocalStorage","RoleRepo","useHistory","useLocation","RoutePath","ClientRepo","RelationshipRepo","Option","CreateRelationship","location","history","clientRepo","roleRepo","relationshipRepo","locationState","state","form","useForm","_roleList","setRoleList","_clientList","setClientList","_isFormLoading","setFormLoading","_isRoleListLoading","setRoleListLoading","_isClientListLoading","setClientListLoading","getClients","userId","getUserID","apiResult","getAllClients","isSuccess","data","length","forEach","element","prevState","getRoles","getAllRoles","proceedToCreatePage","value","create_client","create_role","replace","children","required","map","item","clientId","name","roleId","onSubmit","values","console","log","saveRelationship","clientRoleRelId","undefined","createdById","client","role","permission","success","dashboard","resetFields","error","initState","getRoleById"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FillForm } from \"../../utils/components\";\nimport {\n\tFormLabel,\n\tButton as ChakraButton,\n\tText,\n\tStack,\n\tSpinner,\n\tButton,\n\tLink,\n} from \"@chakra-ui/react\";\nimport { Form, Input, message, Radio, Select } from \"antd\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { RoleRepo } from \"../../services/api/repositories/role_repo\";\nimport { Role } from \"../../services/api/models/role_model\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { ClientRepo } from \"../../services/api/repositories/client_repo\";\nimport { Client } from \"../../services/api/models/client_model\";\nimport { RelationshipRepo } from \"../../services/api/repositories/relationship_repo\";\n\nconst { Option } = Select;\n\nexport const CreateRelationship: React.FC<any> = () => {\n\tlet location = useLocation();\n\tlet history = useHistory();\n\n\tlet clientRepo = new ClientRepo();\n\tlet roleRepo = new RoleRepo();\n\tlet relationshipRepo = new RelationshipRepo();\n\n\tconst locationState: any = location.state;\n\tconst [form] = Form.useForm();\n\n\tconst [_roleList, setRoleList] = useState<Array<Role>>([]);\n\tconst [_clientList, setClientList] = useState<Array<Client>>([]);\n\tconst [_isFormLoading, setFormLoading] = useState<boolean>(true);\n\tconst [_isRoleListLoading, setRoleListLoading] = useState<boolean>(true);\n\tconst [_isClientListLoading, setClientListLoading] =\n\t\tuseState<boolean>(true);\n\n\tasync function getClients() {\n\t\tlet userId = await LocalStorage.getUserID();\n\t\tlet apiResult = await clientRepo.getAllClients({\n\t\t\tuserId: userId!,\n\t\t});\n\n\t\tif (apiResult.isSuccess) {\n\t\t\tif (apiResult.data.length > 0)\n\t\t\t\tapiResult.data.forEach((element: Client) => {\n\t\t\t\t\tsetClientList((prevState) => {\n\t\t\t\t\t\treturn [...prevState, element];\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t\tsetClientListLoading(false);\n\t}\n\n\tasync function getRoles() {\n\t\tlet userId = await LocalStorage.getUserID();\n\t\tlet apiResult = await roleRepo.getAllRoles({\n\t\t\tuserId: userId!,\n\t\t});\n\n\t\tif (apiResult.isSuccess) {\n\t\t\tif (apiResult.data.length > 0)\n\t\t\t\tapiResult.data.forEach((element: Client) => {\n\t\t\t\t\tsetRoleList((prevState) => {\n\t\t\t\t\t\treturn [...prevState, element];\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t\tsetRoleListLoading(false);\n\t}\n\n\tconst proceedToCreatePage = (value: string) => {\n\t\tif (\n\t\t\tvalue === RoutePath.create_client ||\n\t\t\tvalue === RoutePath.create_role\n\t\t)\n\t\t\thistory.replace(value);\n\t};\n\n\tconst children = (\n\t\t<>\n\t\t\t<FormLabel>Client</FormLabel>\n\t\t\t<Form.Item\n\t\t\t\tname=\"client\"\n\t\t\t\trules={[\n\t\t\t\t\t{\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"Please select a client\",\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Stack direction={\"row\"} spacing={4} width={\"50%\"}>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tplaceholder=\"Select a client\"\n\t\t\t\t\t\tonChange={proceedToCreatePage}\n\t\t\t\t\t\tallowClear\n\t\t\t\t\t>\n\t\t\t\t\t\t<Option value={RoutePath.create_client}>\n\t\t\t\t\t\t\t<Text color={\"gray.500\"}>\n\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\tClick here to create a new client\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t{_clientList.map((item) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Option value={item.clientId}>\n\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Select>\n\t\t\t\t\t{_isClientListLoading ? <Spinner /> : <></>}\n\t\t\t\t</Stack>\n\t\t\t</Form.Item>\n\t\t\t<FormLabel>Role</FormLabel>\n\t\t\t<Form.Item\n\t\t\t\tname=\"role\"\n\t\t\t\trules={[\n\t\t\t\t\t{\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"Please select a role\",\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Stack direction={\"row\"} spacing={4} width={\"50%\"}>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tplaceholder=\"Select a role\"\n\t\t\t\t\t\tonChange={proceedToCreatePage}\n\t\t\t\t\t\tallowClear\n\t\t\t\t\t>\n\t\t\t\t\t\t<Option value={RoutePath.create_role}>\n\t\t\t\t\t\t\t<Text color={\"gray.500\"}>\n\t\t\t\t\t\t\t\tClick here to create a new role\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t{_roleList.map((item) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Option value={item.roleId}>{item.name}</Option>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Select>\n\t\t\t\t\t{_isRoleListLoading ? <Spinner /> : <></>}\n\t\t\t\t</Stack>\n\t\t\t</Form.Item>\n\t\t\t<FormLabel>Permission</FormLabel>\n\t\t\t<Form.Item\n\t\t\t\tname=\"permission\"\n\t\t\t\trules={[\n\t\t\t\t\t{\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"Please choose the permission of the client!\",\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Radio.Group>\n\t\t\t\t\t<Radio.Button value=\"owner\">Owner</Radio.Button>\n\t\t\t\t\t<Radio.Button value=\"editor\">Editor</Radio.Button>\n\t\t\t\t\t<Radio.Button value=\"viewer\">Viewer</Radio.Button>\n\t\t\t\t</Radio.Group>\n\t\t\t</Form.Item>\n\t\t</>\n\t);\n\n\tconst onSubmit = async (values: any) => {\n\t\tconsole.log(values[\"client\"])\n\t\tlet userId = await LocalStorage.getUserID();\n\t\tlet apiResult = await relationshipRepo.saveRelationship({\n\t\t\tclientRoleRelId: locationState !== undefined ? locationState.roleId : null,\n\t\t\tcreatedById: userId ?? \"\",\n\t\t\tclient:values[\"client\"],\n\t\t\trole:values[\"role\"],\n\t\t\tpermission:values[\"permission\"]\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tmessage.success(\"Relationship has created\");\n\t\t\tlocationState !== undefined\n\t\t\t\t? history.replace(RoutePath.dashboard)\n\t\t\t\t: form.resetFields();\n\t\t} else {\n\t\t\tmessage.error(\"Fail to save\");\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tasync function initState() {\n\t\t\tif (locationState !== undefined) {\n\t\t\t\tlet apiResult = await roleRepo.getRoleById({\n\t\t\t\t\troleId: locationState.roleId!,\n\t\t\t\t});\n\t\t\t\tif (apiResult.isSuccess) {\n\t\t\t\t\t// setRoleData(\n\t\t\t\t\t// \tnew Role({\n\t\t\t\t\t// \t\tname: apiResult.data[0].name,\n\t\t\t\t\t// \t})\n\t\t\t\t\t// );\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetFormLoading(false);\n\t\t}\n\n\t\tinitState();\n\t\tgetClients();\n\t\tgetRoles();\n\t\treturn () => {\n\t\t\t// setRoleData(new Role({}));\n\t\t};\n\t}, []);\n\n\t// Set Initial Values Using State in antd form\n\tuseEffect(() => {\n\t\tform.resetFields();\n\t}, [_clientList, _roleList]);\n\n\treturn (\n\t\t<FillForm\n\t\t\tformComponents={children}\n\t\t\ttitle={\"Client role relationship details\"}\n\t\t\tsubtitle={\"Please fill in the relationship\"}\n\t\t\tinitialValue={{}}\n\t\t\tform={form}\n\t\t\tonSubmit={onSubmit}\n\t\t\tisFormLoading={_isFormLoading}\n\t\t>\n\t\t\t{\" \"}\n\t\t</FillForm>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}