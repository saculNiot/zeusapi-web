{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/profile/UserProfile.tsx\",\n    _s = $RefreshSig$();\n\nimport { Card, Col, Form, Input, Layout, Radio, Row } from \"antd\";\nimport { ConfigProvider } from \"antd-country-phone-input\";\nimport \"antd-country-phone-input/dist/index.css\";\nimport mixpanel from \"mixpanel-browser\";\nimport React, { useEffect, useState } from \"react\";\nimport { formatPhoneNumberIntl } from \"react-phone-number-input\";\nimport { useHistory } from \"react-router-dom\";\nimport en from \"world_countries_lists/data/en/world.json\";\nimport { User } from \"../../services/api/models/user_model\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { BackHeader, FormButton, FormPhoneInput } from \"../../utils/components\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport \"./UserProfile.less\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\nexport const UserProfile = () => {\n  _s();\n\n  var _userData$nickname, _userData$phoneNo, _userData$acctType, _userData$orgName;\n\n  let userRepo = new UserRepo();\n  let history = useHistory(); // Is btn loading flag\n\n  const [isLoading, setLoading] = useState(false); // Is card loading flag\n\n  const [isCardLoading, setCardLoading] = useState(true);\n  const [userData, setUserData] = useState(new User({}));\n\n  const onFinish = async values => {\n    let userId = await LocalStorage.getUserID();\n    setLoading(true);\n    let apiResult = await userRepo.saveUser({\n      purpose: \"update\",\n      userId: userId,\n      nickname: values[\"nickname\"],\n      phoneNo: formatPhoneNumberIntl(values[\"phone_number\"]),\n      acctType: values[\"account_type\"],\n      orgName: values[\"organisation_name\"]\n    });\n\n    if (apiResult.isSuccess) {\n      alert(\"Update Success\");\n      mixpanel.people.set({\n        Nickname: values[\"nickname\"],\n        PhoneNo: formatPhoneNumberIntl(values[\"phone_number\"]),\n        AcctType: values[\"account_type\"],\n        OrgName: values[\"organisation_name\"]\n      });\n      history.replace(RoutePath.home);\n      setLoading(false);\n    } else {\n      alert(apiResult.message);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"user profile\");\n\n    async function fetchData() {\n      let userId = await LocalStorage.getUserID();\n      let apiResult = await userRepo.getUserById({\n        userId: userId\n      });\n\n      if (apiResult.isSuccess) {\n        setUserData(apiResult.data[0]);\n      } else {\n        alert(apiResult.message);\n      }\n\n      setCardLoading(false);\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    className: \"layout\",\n    style: {\n      overflow: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      children: /*#__PURE__*/_jsxDEV(BackHeader, {\n        title: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      className: \"profile_content\",\n      style: {\n        backgroundColor: \"white\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"user_profile_row\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 8,\n          className: \"user_profile_col\",\n          span: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 8,\n          className: \"user_profile_col\",\n          span: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            loading: isCardLoading,\n            children: /*#__PURE__*/_jsxDEV(ConfigProvider, {\n              locale: en,\n              children: /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n                name: \"register\",\n                className: \"user_profile_form\",\n                initialValues: {\n                  nickname: (_userData$nickname = userData.nickname) !== null && _userData$nickname !== void 0 ? _userData$nickname : \"\",\n                  phone_number: (_userData$phoneNo = userData.phoneNo) !== null && _userData$phoneNo !== void 0 ? _userData$phoneNo : \"\",\n                  account_type: (_userData$acctType = userData.acctType) !== null && _userData$acctType !== void 0 ? _userData$acctType : \"\",\n                  organisation_name: (_userData$orgName = userData.orgName) !== null && _userData$orgName !== void 0 ? _userData$orgName : \"\"\n                },\n                onFinish: onFinish,\n                children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"nickname\",\n                  label: \"Nickname\",\n                  tooltip: \"What do you want others to call you?\",\n                  rules: [{\n                    required: true,\n                    message: \"Please input your nickname!\",\n                    whitespace: true\n                  }],\n                  children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormPhoneInput, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                  label: \"Type\",\n                  name: \"account_type\",\n                  rules: [{\n                    required: true,\n                    message: \"Please choose your account type!\"\n                  }],\n                  children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Radio.Button, {\n                      value: \"institute\",\n                      children: \"Institute\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n                      value: \"company\",\n                      children: \"Company\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                  label: \"Org Name\",\n                  name: \"organisation_name\",\n                  tooltip: \"Please input your Company/Institution name\",\n                  rules: [{\n                    required: true,\n                    message: \"Please input your Company/Institution name!\"\n                  }],\n                  children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n                  children: /*#__PURE__*/_jsxDEV(FormButton, {\n                    title: \"Update\",\n                    isLoading: isLoading\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 8,\n          className: \"user_profile_col\",\n          span: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserProfile, \"c3aacjR3xg+8+3wBZQ70c776wW4=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/profile/UserProfile.tsx"],"names":["Card","Col","Form","Input","Layout","Radio","Row","ConfigProvider","mixpanel","React","useEffect","useState","formatPhoneNumberIntl","useHistory","en","User","UserRepo","BackHeader","FormButton","FormPhoneInput","LocalStorage","RoutePath","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","UserProfile","userRepo","history","isLoading","setLoading","isCardLoading","setCardLoading","userData","setUserData","onFinish","values","userId","getUserID","apiResult","saveUser","purpose","nickname","phoneNo","acctType","orgName","isSuccess","alert","people","set","Nickname","PhoneNo","AcctType","OrgName","replace","home","message","console","log","fetchData","getUserById","data","overflow","backgroundColor","phone_number","account_type","organisation_name","required","whitespace"],"mappings":"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","sourcesContent":["import {\n    Card, Col,\n    Form, Input, Layout, Radio, Row\n} from \"antd\";\nimport { ConfigProvider } from \"antd-country-phone-input\";\nimport \"antd-country-phone-input/dist/index.css\";\nimport mixpanel from \"mixpanel-browser\";\nimport React, { useEffect, useState } from \"react\";\nimport { formatPhoneNumberIntl } from \"react-phone-number-input\";\nimport { useHistory } from \"react-router-dom\";\nimport en from \"world_countries_lists/data/en/world.json\";\nimport { User } from \"../../services/api/models/user_model\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport {\n    BackHeader, FormButton,\n    FormPhoneInput\n} from \"../../utils/components\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport \"./UserProfile.less\";\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n    },\n};\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 24,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\nexport const UserProfile: React.FC<any> = () => {\n    let userRepo = new UserRepo();\n\n    let history = useHistory();\n\n    // Is btn loading flag\n    const [isLoading, setLoading] = useState(false);\n\n    // Is card loading flag\n    const [isCardLoading, setCardLoading] = useState(true);\n\n    const [userData, setUserData] = useState(new User({}));\n\n\n    const onFinish = async (values: any) => {\n        let userId = await LocalStorage.getUserID();\n        setLoading(true);\n\n        let apiResult = await userRepo.saveUser({\n            purpose: \"update\",\n            userId: userId!,\n            nickname: values[\"nickname\"],\n            phoneNo: formatPhoneNumberIntl(values[\"phone_number\"]),\n            acctType: values[\"account_type\"],\n            orgName: values[\"organisation_name\"],\n        });\n\n        if (apiResult.isSuccess) {\n            alert(\"Update Success\");\n            mixpanel.people.set({\n                Nickname: values[\"nickname\"],\n                PhoneNo: formatPhoneNumberIntl(values[\"phone_number\"]),\n                AcctType: values[\"account_type\"],\n                OrgName: values[\"organisation_name\"],\n            });\n            history.replace(RoutePath.home);\n            setLoading(false);\n        } else {\n            alert(apiResult.message);\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        console.log(\"user profile\");\n        async function fetchData() {\n            let userId = await LocalStorage.getUserID();\n            let apiResult = await userRepo.getUserById({\n                userId: userId!,\n            });\n            if (apiResult.isSuccess) {\n                setUserData(apiResult.data[0]);\n            } else {\n                alert(apiResult.message);\n            }\n            setCardLoading(false);\n        }\n        fetchData();\n    }, []);\n\n    return (\n        <Layout className=\"layout\" style={{ overflow: \"auto\" }}>\n            <div className=\"navbar\" style={{ backgroundColor: \"#fff\" }}>\n                <BackHeader title=\"Profile\" />\n            </div>\n            <Layout className=\"profile_content\" style={{ backgroundColor: \"white\" }}>\n                <Row className=\"user_profile_row\">\n                    <Col xs={24} xl={8} className=\"user_profile_col\" span={8} />\n                    <Col xs={24} xl={8} className=\"user_profile_col\" span={8}>\n                        <Card loading={isCardLoading}>\n                            <ConfigProvider locale={en}>\n                                <Form\n                                    {...formItemLayout}\n                                    name=\"register\"\n                                    className=\"user_profile_form\"\n                                    initialValues={{\n                                        nickname: userData.nickname ?? \"\",\n                                        phone_number: userData.phoneNo ?? \"\",\n                                        account_type: userData.acctType ?? \"\",\n                                        organisation_name:\n                                            userData.orgName ?? \"\",\n                                    }}\n                                    onFinish={onFinish}\n                                >\n                                    <Form.Item\n                                        name=\"nickname\"\n                                        label=\"Nickname\"\n                                        tooltip=\"What do you want others to call you?\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message:\n                                                    \"Please input your nickname!\",\n                                                whitespace: true,\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <FormPhoneInput />\n                                    <Form.Item\n                                        label=\"Type\"\n                                        name=\"account_type\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message:\n                                                    \"Please choose your account type!\",\n                                            },\n                                        ]}\n                                    >\n                                        <Radio.Group>\n                                            <Radio.Button value=\"institute\">\n                                                Institute\n                                            </Radio.Button>\n                                            <Radio.Button value=\"company\">\n                                                Company\n                                            </Radio.Button>\n                                        </Radio.Group>\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Org Name\"\n                                        name=\"organisation_name\"\n                                        tooltip=\"Please input your Company/Institution name\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message:\n                                                    \"Please input your Company/Institution name!\",\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item {...tailFormItemLayout}>\n                                        <FormButton\n                                            title=\"Update\"\n                                            isLoading={isLoading}\n                                        />\n                                    </Form.Item>\n                                </Form>\n                            </ConfigProvider>\n                        </Card>\n                    </Col>\n                    <Col xs={24} xl={8} className=\"user_profile_col\" span={8} />\n                </Row>\n            </Layout>\n        </Layout>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}