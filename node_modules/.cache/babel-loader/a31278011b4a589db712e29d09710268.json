{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/client/ClientList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Layout, Row, Col, Space, message, Skeleton, Table } from \"antd\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { ClientRepo } from \"../../services/api/repositories/client_repo\";\nimport { RoleRepo } from \"../../services/api/repositories/role_repo\";\nimport { RelationshipRepo } from \"../../services/api/repositories/relationship_repo\";\nimport { Button, Flex, Stack } from \"@chakra-ui/react\";\nimport Title from \"antd/lib/typography/Title\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ClientList = () => {\n  _s();\n\n  let clientRepo = new ClientRepo();\n  let userRepo = new UserRepo();\n  let roleRepo = new RoleRepo();\n  let relationshipRepo = new RelationshipRepo();\n  let location = useLocation();\n  let history = useHistory();\n  const locationState = location.state; // Get current sign in User\n\n  const user = useContext(AuthContext); // Handle the state of each option in Menu bar\n\n  const [_viewTitle, setViewTitle] = useState(\"Clients\");\n  const [_viewList, setViewList] = useState([]);\n  const [_listLoading, setListLoading] = useState(true);\n\n  async function getClient() {\n    setViewList([]);\n    let apiResult = await clientRepo.getClientById({\n      clientId: locationState.clientId\n    });\n\n    if (apiResult.isSuccess) {\n      if (apiResult.data[0].roles !== undefined) {\n        setViewList(apiResult.data[0].roles.map((item, index) => {\n          var _item$createdDateTime;\n\n          console.log(index);\n          return {\n            index: index + 1,\n            key: item.clientRoleRelId,\n            ame: item.role[0].name,\n            permission: item.permission,\n            createdDateTime: new Date((_item$createdDateTime = item.createdDateTime) !== null && _item$createdDateTime !== void 0 ? _item$createdDateTime : \"\").toLocaleString()\n          };\n        }));\n      }\n    }\n\n    setListLoading(false);\n  }\n\n  async function getRoles() {\n    setViewList([]);\n    let userId = await LocalStorage.getUserID();\n    let apiResult = await roleRepo.getAllRoles({\n      userId: userId\n    });\n\n    if (apiResult.isSuccess) {\n      if (apiResult.data.length > 0) apiResult.data.forEach(element => {\n        setViewList(prevState => {\n          return [...prevState, element];\n        });\n      });\n    }\n\n    setListLoading(false);\n  }\n\n  async function deleteClient(clientId) {\n    let apiResult = await clientRepo.deleteClient({\n      clientId: clientId\n    });\n\n    if (apiResult.isSuccess) {\n      setListLoading(true);\n      getClient();\n      message.success(\"Delete client success\");\n    } else {\n      message.success(\"Delete Fail\");\n    }\n\n    setListLoading(false);\n  }\n\n  async function deleteRelationship(clientRoleRelId) {\n    let apiResult = await relationshipRepo.deleteRelationship({\n      clientRoleRelId: clientRoleRelId\n    });\n\n    if (apiResult.isSuccess) {\n      setListLoading(true);\n      message.success(\"Delete relationship success\");\n    } else {\n      message.success(\"Delete Fail\");\n    }\n\n    setListLoading(false);\n  }\n\n  useEffect(() => {\n    getClient();\n    return () => {\n      setViewTitle(\"\");\n      setViewList([]);\n      setListLoading(true);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"dashboard_row\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 6,\n          className: \"dashboard_col\",\n          span: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 12,\n          className: \"dashboard_col\",\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 6,\n              children: [/*#__PURE__*/_jsxDEV(Title, {\n                level: 4,\n                children: `${locationState.name}'s roles`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                align: \"end\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  backgroundColor: \"red.400\",\n                  color: \"white\",\n                  onClick: () => deleteClient(locationState.clientId),\n                  children: [\"Delete \", locationState.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n              active: true,\n              loading: _listLoading,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                dataSource: _viewList,\n                columns: [{\n                  title: \"Index\",\n                  dataIndex: \"index\",\n                  key: \"index\"\n                }, {\n                  title: \"Role Name\",\n                  dataIndex: \"ame\",\n                  key: \"ame\"\n                }, {\n                  title: \"Permission\",\n                  dataIndex: \"permission\",\n                  key: \"permission\"\n                }, {\n                  title: \"Created Date\",\n                  dataIndex: \"createdDateTime\",\n                  key: \"createdDateTime\"\n                }, {\n                  title: \"Action\",\n                  key: \"action\",\n                  render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n                    size: \"middle\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      backgroundColor: \"red.400\",\n                      color: \"white\",\n                      onClick: () => {\n                        var _record$clientRoleRel;\n\n                        return deleteRelationship((_record$clientRoleRel = record.clientRoleRelId) !== null && _record$clientRoleRel !== void 0 ? _record$clientRoleRel : \"\");\n                      },\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 14\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 13\n                  }, this)\n                }]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 12,\n          className: \"dashboard_col\",\n          span: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(ClientList, \"ojLsXVsW1TzCVb8ZnTtnkZaKjNg=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = ClientList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientList\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/client/ClientList.tsx"],"names":["React","useContext","useEffect","useState","useHistory","useLocation","Layout","Row","Col","Space","message","Skeleton","Table","AuthContext","LocalStorage","UserRepo","ClientRepo","RoleRepo","RelationshipRepo","Button","Flex","Stack","Title","ClientList","clientRepo","userRepo","roleRepo","relationshipRepo","location","history","locationState","state","user","_viewTitle","setViewTitle","_viewList","setViewList","_listLoading","setListLoading","getClient","apiResult","getClientById","clientId","isSuccess","data","roles","undefined","map","item","index","console","log","key","clientRoleRelId","ame","role","name","permission","createdDateTime","Date","toLocaleString","getRoles","userId","getUserID","getAllRoles","length","forEach","element","prevState","deleteClient","success","deleteRelationship","title","dataIndex","render","text","record"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Space, message, Skeleton, Table } from \"antd\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { User } from \"../../services/api/models/user_model\";\nimport { ClientRepo } from \"../../services/api/repositories/client_repo\";\nimport { Client } from \"../../services/api/models/client_model\";\nimport { RoleRepo } from \"../../services/api/repositories/role_repo\";\nimport { RelationshipRepo } from \"../../services/api/repositories/relationship_repo\";\nimport { Role } from \"../../services/api/models/role_model\";\nimport { Relationship } from \"../../services/api/models/relationship_model\";\nimport { Button, Flex, Stack } from \"@chakra-ui/react\";\nimport Title from \"antd/lib/typography/Title\";\n\nexport const ClientList: React.FC<any> = () => {\n\tlet clientRepo = new ClientRepo();\n\n\tlet userRepo = new UserRepo();\n\n\tlet roleRepo = new RoleRepo();\n\n\tlet relationshipRepo = new RelationshipRepo();\n\n\tlet location = useLocation();\n\tlet history = useHistory();\n\tconst locationState: any = location.state;\n\n\t// Get current sign in User\n\tconst user = useContext(AuthContext);\n\n\t// Handle the state of each option in Menu bar\n\n\tconst [_viewTitle, setViewTitle] = useState<string>(\"Clients\");\n\n\tconst [_viewList, setViewList] = useState<Array<Relationship>>([]);\n\n\tconst [_listLoading, setListLoading] = useState<boolean>(true);\n\n\tasync function getClient() {\n\t\tsetViewList([]);\n\n\t\tlet apiResult = await clientRepo.getClientById({\n\t\t\tclientId: locationState.clientId!,\n\t\t});\n\n\t\tif (apiResult.isSuccess) {\n\t\t\tif (apiResult.data[0].roles !== undefined) {\n\t\t\t\tsetViewList(\n\t\t\t\t\tapiResult.data[0].roles.map(\n\t\t\t\t\t\t(item: Relationship, index: number) => {\n\t\t\t\t\t\t\tconsole.log(index);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tindex: index + 1,\n\t\t\t\t\t\t\t\tkey: item.clientRoleRelId,\n\t\t\t\t\t\t\t\tame: item.role![0].name,\n\t\t\t\t\t\t\t\tpermission: item.permission,\n\t\t\t\t\t\t\t\tcreatedDateTime: new Date(\n\t\t\t\t\t\t\t\t\titem.createdDateTime ?? \"\"\n\t\t\t\t\t\t\t\t).toLocaleString(),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\n\tasync function getRoles() {\n\t\tsetViewList([]);\n\t\tlet userId = await LocalStorage.getUserID();\n\t\tlet apiResult = await roleRepo.getAllRoles({\n\t\t\tuserId: userId!,\n\t\t});\n\n\t\tif (apiResult.isSuccess) {\n\t\t\tif (apiResult.data.length > 0)\n\t\t\t\tapiResult.data.forEach((element: Client) => {\n\t\t\t\t\tsetViewList((prevState) => {\n\t\t\t\t\t\treturn [...prevState, element];\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\n\tasync function deleteClient(clientId: string) {\n\t\tlet apiResult = await clientRepo.deleteClient({\n\t\t\tclientId: clientId!,\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tsetListLoading(true);\n\t\t\tgetClient();\n\t\t\tmessage.success(\"Delete client success\");\n\t\t} else {\n\t\t\tmessage.success(\"Delete Fail\");\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\n\tasync function deleteRelationship(clientRoleRelId: string) {\n\t\tlet apiResult = await relationshipRepo.deleteRelationship({\n\t\t\tclientRoleRelId: clientRoleRelId!,\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tsetListLoading(true);\n\t\t\tmessage.success(\"Delete relationship success\");\n\t\t} else {\n\t\t\tmessage.success(\"Delete Fail\");\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\n\tuseEffect(() => {\n\t\tgetClient();\n\n\t\treturn () => {\n\t\t\tsetViewTitle(\"\");\n\t\t\tsetViewList([]);\n\t\t\tsetListLoading(true);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Layout>\n\t\t\t\t<Row className=\"dashboard_row\">\n\t\t\t\t\t<Col xs={24} xl={6} className=\"dashboard_col\" span={6} />\n\t\t\t\t\t<Col xs={24} xl={12} className=\"dashboard_col\" span={12}>\n\t\t\t\t\t\t<Stack spacing={4}>\n\t\t\t\t\t\t\t<Stack direction={\"row\"} spacing={6}>\n\t\t\t\t\t\t\t\t<Title level={4}>\n\t\t\t\t\t\t\t\t\t{`${locationState.name}'s roles`}\n\t\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t\t<Flex align={\"end\"}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tbackgroundColor={\"red.400\"}\n\t\t\t\t\t\t\t\t\t\tcolor={\"white\"}\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tdeleteClient(locationState.clientId)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tDelete {locationState.name}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t<Skeleton active loading={_listLoading}>\n\t\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\t\tdataSource={_viewList}\n\t\t\t\t\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Index\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"index\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"index\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Role Name\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"ame\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"ame\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Permission\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"permission\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"permission\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Created Date\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"createdDateTime\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"createdDateTime\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Action\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"action\",\n\t\t\t\t\t\t\t\t\t\t\trender: (text, record) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Space size=\"middle\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"red.400\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={\"white\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteRelationship(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecord.clientRoleRelId ??\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</Space>\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Skeleton>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={24} xl={12} className=\"dashboard_col\" span={6} />\n\t\t\t\t</Row>\n\t\t\t</Layout>\n\t\t</>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}