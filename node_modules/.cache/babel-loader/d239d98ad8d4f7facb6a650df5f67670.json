{"ast":null,"code":"import { GetClientResponse } from \"./client_model\";\nimport { GetRoleResponse } from \"./role_model\";\nexport class Relationship {\n  constructor(props) {\n    this.clientRoleRelId = void 0;\n    this.permission = void 0;\n    this.createdDateTime = void 0;\n    this.createdById = void 0;\n    this.client = void 0;\n    this.role = void 0;\n    this.clientRoleRelId = props.clientRoleRelId;\n    this.permission = props.permission;\n    this.createdDateTime = props.createdDateTime;\n    this.createdById = props.createdById;\n    this.client = props.client;\n    this.role = props.role;\n  } // Convert the map into the User object\n\n\n  fromJson(json) {\n    this.clientRoleRelId = json.get(\"client_role_rel_id\");\n    this.permission = json.get(\"permission\");\n    this.createdById = json.get(\"created_by_id\");\n    this.createdDateTime = json.get(\"added_date_time\");\n    console.log(json.get(\"client\"));\n    let clientMap = new Map().set(\"Client\", json.get(\"client\"));\n    this.client = new GetClientResponse().fromJson(clientMap);\n    let roleMap = new Map().set(\"Role\", json.get(\"role\"));\n    this.role = new GetRoleResponse().fromJson(roleMap);\n    return this;\n  } // Convert User Object into map\n\n\n  toJson() {\n    let data = new Map();\n    data.set(\"clientRoleRelId\", this.clientRoleRelId);\n    data.set(\"permission\", this.permission);\n    data.set(\"createdById\", this.createdById);\n    data.set(\"added_date_time\", this.createdDateTime);\n    data.set(\"role\", this.role);\n    data.set(\"client\", this.client);\n    return data;\n  }\n\n}\nexport class GetRelationshipResponse {\n  constructor(relationship) {\n    this.relationship = void 0;\n    this.relationship = relationship;\n  } // Convert JSON (containing list of data) to array\n\n\n  fromJson(json) {\n    if (json.get(\"Relationship\") != null) {\n      this.relationship = [];\n      json.get(\"Relationship\").forEach(v => {\n        var _this$relationship;\n\n        (_this$relationship = this.relationship) === null || _this$relationship === void 0 ? void 0 : _this$relationship.push(new Relationship({}).fromJson(new Map(Object.entries(v))));\n      });\n    }\n\n    return this.relationship;\n  }\n\n}","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/relationship_model.tsx"],"names":["GetClientResponse","GetRoleResponse","Relationship","constructor","props","clientRoleRelId","permission","createdDateTime","createdById","client","role","fromJson","json","get","console","log","clientMap","Map","set","roleMap","toJson","data","GetRelationshipResponse","relationship","forEach","v","push","Object","entries"],"mappings":"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","sourcesContent":["import { Client, GetClientResponse } from \"./client_model\";\nimport { GetRoleResponse, Role } from \"./role_model\";\n\nexport class Relationship {\n\tclientRoleRelId?: string;\n\tpermission?: string;\n\tcreatedDateTime?: string;\n\tcreatedById?: string;\n\tclient?: Array<Client> | string;\n\trole?: Array<Role> | string;\n\n\tconstructor(props: {\n\t\tclientRoleRelId?: string;\n\t\tpermission?: string;\n\t\tcreatedDateTime?: string;\n\t\tcreatedById?: string;\n\t\tclient?: Array<Client> | string;\n\t\trole?: Array<Role> | string;\n\t}) {\n\t\tthis.clientRoleRelId = props.clientRoleRelId;\n\t\tthis.permission = props.permission;\n\t\tthis.createdDateTime = props.createdDateTime;\n\t\tthis.createdById = props.createdById;\n\t\tthis.client = props.client;\n\t\tthis.role = props.role;\n\t}\n\n\t// Convert the map into the User object\n\tfromJson(json: Map<String, any>) {\n\t\tthis.clientRoleRelId = json.get(\"client_role_rel_id\");\n\t\tthis.permission = json.get(\"permission\");\n\t\tthis.createdById = json.get(\"created_by_id\");\n\t\tthis.createdDateTime = json.get(\"added_date_time\");\n\t\tconsole.log(json.get(\"client\"))\n\n\t\tlet clientMap = new Map<String, any>().set(\n\t\t\t\"Client\",\n\t\t\tjson.get(\"client\")\n\t\t);\n\t\tthis.client = new GetClientResponse().fromJson(clientMap);\n\t\tlet roleMap = new Map<String, any>().set(\"Role\", json.get(\"role\"));\n\t\tthis.role = new GetRoleResponse().fromJson(roleMap);\n\n\t\treturn this;\n\t}\n\n\t// Convert User Object into map\n\ttoJson() {\n\t\tlet data = new Map<String, any>();\n\t\tdata.set(\"clientRoleRelId\", this.clientRoleRelId);\n\t\tdata.set(\"permission\", this.permission);\n\t\tdata.set(\"createdById\", this.createdById);\n\t\tdata.set(\"added_date_time\", this.createdDateTime);\n\t\tdata.set(\"role\", this.role);\n\t\tdata.set(\"client\", this.client);\n\n\t\treturn data;\n\t}\n}\n\nexport class GetRelationshipResponse {\n\trelationship?: Array<Relationship>;\n\n\tconstructor(relationship?: Array<Relationship>) {\n\t\tthis.relationship = relationship;\n\t}\n\n\t// Convert JSON (containing list of data) to array\n\tfromJson(json: Map<String, any>) {\n\t\tif (json.get(\"Relationship\") != null) {\n\t\t\tthis.relationship = [];\n\t\t\tjson.get(\"Relationship\").forEach((v: Map<String, any>) => {\n\t\t\t\tthis.relationship?.push(\n\t\t\t\t\tnew Relationship({}).fromJson(new Map(Object.entries(v)))\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\treturn this.relationship;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}