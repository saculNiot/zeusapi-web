{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/payment/CheckoutPayment.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./CheckoutPayment.less\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { CheckCircleIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport { Box, Button, Flex, Heading, Text } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CheckoutPayment = ({}) => {\n  _s();\n\n  const location = useLocation();\n  const history = useHistory();\n  const [checkOutStatus, setCheckoutStatus] = useState();\n\n  const onFinish = async () => {\n    setLoading(true);\n    history.replace(RoutePath.home);\n    setLoading(false);\n  }; // Is loading flag\n\n\n  const [isLoading, setLoading] = useState(false);\n  useEffect(() => {\n    // Get the parameter value from url\n    const data = new URLSearchParams(location.search).get(\"status\");\n    setCheckoutStatus(data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    textAlign: \"center\",\n    py: 10,\n    px: 6,\n    children: [checkOutStatus === \"success\" ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n      boxSize: \"50px\",\n      color: \"green.500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      display: \"inline-block\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        bg: \"red.500\",\n        rounded: \"50px\",\n        w: \"55px\",\n        h: \"55px\",\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n          boxSize: \"20px\",\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h2\",\n      size: \"xl\",\n      mt: 6,\n      mb: 2,\n      children: [\"Payment \", checkOutStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      color: \"gray.500\",\n      children: \"Please return to the main page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      display: {\n        base: \"none\",\n        md: \"inline-flex\"\n      },\n      fontSize: \"sm\",\n      fontWeight: 600,\n      color: \"white\",\n      bg: \"#270949\",\n      _hover: {\n        bg: \"#4654A3\"\n      },\n      onClick: () => {\n        history.replace(RoutePath.default);\n      },\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CheckoutPayment, \"s5aWAzspLXAM0uY98qbIRTQT4qQ=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = CheckoutPayment;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutPayment\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/payment/CheckoutPayment.tsx"],"names":["React","useEffect","useState","useHistory","useLocation","RoutePath","CheckCircleIcon","CloseIcon","Box","Button","Flex","Heading","Text","CheckoutPayment","location","history","checkOutStatus","setCheckoutStatus","onFinish","setLoading","replace","home","isLoading","data","URLSearchParams","search","get","base","md","bg","default"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./CheckoutPayment.less\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport { RoutePath } from \"../../utils/routePath\";\nimport { CheckCircleIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport { Box, Button, Flex, Heading, Text } from \"@chakra-ui/react\";\n\ninterface CheckoutPaymentProps {}\n\nexport const CheckoutPayment: React.FC<CheckoutPaymentProps> = ({}) => {\n\tconst location = useLocation();\n\n\tconst history = useHistory();\n\n\tconst [checkOutStatus, setCheckoutStatus] = useState<any>();\n\n\tconst onFinish = async () => {\n\t\tsetLoading(true);\n\n\t\thistory.replace(RoutePath.home);\n\n\t\tsetLoading(false);\n\t};\n\n\t// Is loading flag\n\tconst [isLoading, setLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\t// Get the parameter value from url\n\t\tconst data: any = new URLSearchParams(location.search).get(\"status\");\n\t\tsetCheckoutStatus(data);\n\t}, []);\n\n\treturn (\n\t\t<Box textAlign=\"center\" py={10} px={6}>\n\t\t\t{checkOutStatus === \"success\" ? (\n\t\t\t\t<CheckCircleIcon boxSize={\"50px\"} color={\"green.500\"} />\n\t\t\t) : (\n\t\t\t\t<Box display=\"inline-block\">\n\t\t\t\t\t<Flex\n\t\t\t\t\t\tflexDirection=\"column\"\n\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\tbg={\"red.500\"}\n\t\t\t\t\t\trounded={\"50px\"}\n\t\t\t\t\t\tw={\"55px\"}\n\t\t\t\t\t\th={\"55px\"}\n\t\t\t\t\t\ttextAlign=\"center\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<CloseIcon boxSize={\"20px\"} color={\"white\"} />\n\t\t\t\t\t</Flex>\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t\t<Heading as=\"h2\" size=\"xl\" mt={6} mb={2}>\n\t\t\t\tPayment {checkOutStatus}\n\t\t\t</Heading>\n\t\t\t<Text color={\"gray.500\"}>\n\t\t\t\tPlease return to the main page.\n\t\t\t</Text>\n            <Button\n\t\t\t\t\t\t\tdisplay={{ base: \"none\", md: \"inline-flex\" }}\n\t\t\t\t\t\t\tfontSize={\"sm\"}\n\t\t\t\t\t\t\tfontWeight={600}\n\t\t\t\t\t\t\tcolor={\"white\"}\n\t\t\t\t\t\t\tbg={\"#270949\"}\n\t\t\t\t\t\t\t_hover={{\n\t\t\t\t\t\t\t\tbg: \"#4654A3\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\thistory.replace(RoutePath.default)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t</Button>\n\t\t</Box>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}