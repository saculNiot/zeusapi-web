{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/graph_display/GraphPreview.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Layout, message, Spin } from \"antd\";\nimport RGL from \"react-grid-layout\";\nimport \"react-grid-layout/css/styles.css\";\nimport { SizeMe, withSize } from \"react-sizeme\";\nimport { MyBar } from \"../chartManager/BarChart\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport { UrlRepo } from \"../../services/api/repositories/url_repo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Resize the Grid Layout according to the parent widget\nconst withSizeHOC = withSize();\nconst ReactGridLayout = withSizeHOC(RGL);\n_c = ReactGridLayout;\nexport const GraphPreview = ({\n  apiKey\n}) => {\n  _s();\n\n  // State of managing graph properties\n  const [_graphValues, setGraphValues] = useState([]);\n  const [_isEditorLoading, setEditorLoading] = useState(true);\n  let urlRepo = new UrlRepo();\n  useEffect(() => {\n    async function initState() {\n      let graphGetResult = await urlRepo.getGraphsByApiKey({\n        apiKey: apiKey\n      });\n\n      if (graphGetResult.isSuccess) {\n        graphGetResult.data.forEach(item => {\n          item[\"data_grid\"][\"static\"] = true;\n        });\n        setGraphValues(graphGetResult.data);\n      } else {\n        message.error(graphGetResult.message);\n      }\n\n      setEditorLoading(false);\n    }\n\n    initState();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    className: \"layout\",\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      style: {\n        overflow: \"auto\",\n        minHeight: \"70vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Content, {\n        className: \"site-layout-background\",\n        style: {\n          padding: 0,\n          margin: 0,\n          alignItems: \"center\"\n        },\n        children: _isEditorLoading ? /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(SizeMe, {\n          children: ({\n            size\n          }) => /*#__PURE__*/_jsxDEV(ReactGridLayout, {\n            className: \"grid-layout\",\n            width: size.width,\n            rowHeight: size.width / 60,\n            cols: 30,\n            children: _graphValues.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                \"data-grid\": item.data_grid,\n                style: {\n                  width: \"auto\",\n                  border: \"1px solid #D3D3D3\",\n                  padding: \"10px 10px 10px 10px\",\n                  height: \"100px\" // To enable the chart responsive in height\n\n                },\n                children: /*#__PURE__*/_jsxDEV(MyBar, {\n                  data: {\n                    key: item.key,\n                    main_chart_type: item.main_chart_type,\n                    title: item.title,\n                    dataSet: item.dataSet,\n                    dimension: item.dimension,\n                    data_grid: item.data_grid,\n                    chosen_schema: item.chosen_schema\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 13\n                }, this)\n              }, item.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 12\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n};\n\n_s(GraphPreview, \"/wUsJoQS06WMxpZIY/q7RrAokLY=\");\n\n_c2 = GraphPreview;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReactGridLayout\");\n$RefreshReg$(_c2, \"GraphPreview\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/graph_display/GraphPreview.tsx"],"names":["React","useEffect","useState","Layout","message","Spin","RGL","SizeMe","withSize","MyBar","Content","UrlRepo","withSizeHOC","ReactGridLayout","GraphPreview","apiKey","_graphValues","setGraphValues","_isEditorLoading","setEditorLoading","urlRepo","initState","graphGetResult","getGraphsByApiKey","isSuccess","data","forEach","item","error","overflow","minHeight","padding","margin","alignItems","size","width","map","index","data_grid","border","height","key","main_chart_type","title","dataSet","dimension","chosen_schema"],"mappings":"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","sourcesContent":["import React, { ReactElement, useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, message, Spin } from \"antd\";\nimport RGL, { Responsive, WidthProvider } from \"react-grid-layout\";\nimport \"react-grid-layout/css/styles.css\";\nimport { SizeMe, withSize } from \"react-sizeme\";\nimport { DataProps, MyBar } from \"../chartManager/BarChart\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport { UrlRepo } from \"../../services/api/repositories/url_repo\";\nimport { ConfigParam } from \"../../services/api/models/url_model\";\n\n// Resize the Grid Layout according to the parent widget\nconst withSizeHOC = withSize();\nconst ReactGridLayout = withSizeHOC(RGL);\n\ninterface GraphPreviewProps {\n\tapiKey: string;\n}\n\nexport const GraphPreview: React.FC<GraphPreviewProps> = ({ apiKey }) => {\n\t// State of managing graph properties\n\tconst [_graphValues, setGraphValues] = useState<Array<DataProps[\"data\"]>>(\n\t\t[]\n\t);\n\n\tconst [_isEditorLoading, setEditorLoading] = useState<boolean>(true);\n\n\tlet urlRepo = new UrlRepo();\n\n\tuseEffect(() => {\n\t\tasync function initState() {\n\t\t\tlet graphGetResult = await urlRepo.getGraphsByApiKey({\n\t\t\t\tapiKey: apiKey,\n\t\t\t});\n\t\t\tif (graphGetResult.isSuccess) {\n\t\t\t\tgraphGetResult.data.forEach((item: any) => {\n\t\t\t\t\titem[\"data_grid\"][\"static\"] = true;\n\t\t\t\t});\n\t\t\t\tsetGraphValues(graphGetResult.data);\n\t\t\t} else {\n\t\t\t\tmessage.error(graphGetResult.message);\n\t\t\t}\n\t\t\tsetEditorLoading(false);\n\t\t}\n\t\tinitState();\n\t}, []);\n\n\treturn (\n\t\t<Layout className=\"layout\">\n\t\t\t<Layout style={{ overflow: \"auto\", minHeight: \"70vh\" }}>\n\t\t\t\t<Content\n\t\t\t\t\tclassName=\"site-layout-background\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{_isEditorLoading ? (\n\t\t\t\t\t\t<Spin></Spin>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<SizeMe>\n\t\t\t\t\t\t\t{({ size }) => (\n\t\t\t\t\t\t\t\t<ReactGridLayout\n\t\t\t\t\t\t\t\t\tclassName=\"grid-layout\"\n\t\t\t\t\t\t\t\t\twidth={size.width as number}\n\t\t\t\t\t\t\t\t\trowHeight={(size.width as number) / 60}\n\t\t\t\t\t\t\t\t\tcols={30}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{_graphValues.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tkey={item.key}\n\t\t\t\t\t\t\t\t\t\t\t\tdata-grid={item.data_grid}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: \"auto\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tborder: \"1px solid #D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tpadding:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"10px 10px 10px 10px\",\n\t\t\t\t\t\t\t\t\t\t\t\t\theight: \"100px\", // To enable the chart responsive in height\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<MyBar\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey: item.key,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmain_chart_type:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.main_chart_type,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: item.title,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataSet: item.dataSet,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdimension:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.dimension,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata_grid:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.data_grid,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchosen_schema:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.chosen_schema,\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</ReactGridLayout>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</SizeMe>\n\t\t\t\t\t)}\n\t\t\t\t</Content>\n\t\t\t</Layout>\n\t\t</Layout>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}