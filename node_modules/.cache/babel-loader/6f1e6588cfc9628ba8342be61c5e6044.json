{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/url/FillField.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Layout, Row, Col, Form, Card, message, Input, Select, Tooltip } from \"antd\";\nimport \"./Url.less\";\nimport { BackHeader, FormButton } from \"../../utils/components\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { UrlRepo } from \"../../services/api/repositories/url_repo\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\nimport mixpanel from \"mixpanel-browser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nexport const FillField = () => {\n  _s();\n\n  let history = useHistory();\n  let location = useLocation();\n  let urlRepo = new UrlRepo();\n  const [form] = Form.useForm();\n  const [isLoading, setLoading] = useState(false);\n  const [schema, setSchema] = useState([]);\n  const [apiStatus, setAPIStatus] = useState(false);\n  const locationState = location.state;\n\n  const onFinish = async values => {\n    mixpanel.track(\"Fill_Field_Excecute_Add_Fields_Click\"); // Handle if API given error\n\n    if (apiStatus) {\n      let userId = await LocalStorage.getUserID();\n      setLoading(true);\n      let apiResult = await urlRepo.saveUrl({\n        url: locationState.url,\n        userId: userId !== null && userId !== void 0 ? userId : \"\",\n        apiKey: locationState.apiKey,\n        schema: values[\"schemaList\"],\n        configParam: locationState.configParam\n      });\n\n      if (apiResult.isSuccess) {\n        mixpanel.track(\"Fill_Field_Excecute_Add_Fields_Click\", {\n          apiResult: apiResult.message\n        });\n        message.success(\"API added successful\");\n        history.push({\n          pathname: RoutePath.graph_editor,\n          state: {\n            apiKey: locationState.apiKey,\n            userApiId: locationState.userApiId\n          }\n        });\n      } else {\n        mixpanel.track(\"Fill_Field_Excecute_Add_Fields_Click\", {\n          apiResult: apiResult.message\n        });\n        message.error(apiResult.message);\n      }\n\n      setLoading(false);\n    } else {\n      message.error(\"The response of your API is in invalid format or API errors\");\n    }\n  };\n\n  async function initState() {\n    let apiResult = await urlRepo.validateUrl({\n      url: locationState.url\n    });\n\n    if (apiResult.isSuccess) {\n      var _apiResult$data;\n\n      message.success(\"Your API is valid\");\n      (_apiResult$data = apiResult.data) === null || _apiResult$data === void 0 ? void 0 : _apiResult$data.forEach(item => {\n        setSchema(prevState => {\n          var _item$labelName, _item$name, _item$dataType;\n\n          return [...prevState, {\n            label_name: (_item$labelName = item.labelName) !== null && _item$labelName !== void 0 ? _item$labelName : \"\",\n            name: (_item$name = item.name) !== null && _item$name !== void 0 ? _item$name : \"\",\n            data_type: (_item$dataType = item.dataType) !== null && _item$dataType !== void 0 ? _item$dataType : \"\"\n          }];\n        });\n      });\n      setAPIStatus(true);\n    } else {\n      message.error(\"The response of your API is in invalid format or API errors\");\n    }\n  } // Retrieve schema field from url and set State\n\n\n  useEffect(() => {\n    initState();\n  }, []); // Set Initial Values Using State in antd form\n\n  useEffect(() => {\n    form.resetFields();\n  }, [schema]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    className: \"layout\",\n    style: {\n      overflow: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      children: /*#__PURE__*/_jsxDEV(BackHeader, {\n        title: \"Edit the the field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      className: \"url_content\",\n      style: {\n        backgroundColor: \"white\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"url_row\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 8,\n          className: \"url_col\",\n          span: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 8,\n          className: \"url_col\",\n          span: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              name: \"fill_url\",\n              className: \"url_form\",\n              onFinish: onFinish,\n              form: form,\n              children: [/*#__PURE__*/_jsxDEV(Form.List, {\n                name: \"schemaList\",\n                initialValue: schema,\n                children: fields => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: fields.map(field => /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      xs: 24,\n                      xl: 8,\n                      span: 8,\n                      className: \"param_col\",\n                      children: /*#__PURE__*/_jsxDEV(Form.Item, { ...field,\n                        name: [field.name, \"name\"],\n                        children: /*#__PURE__*/_jsxDEV(Input, {\n                          type: \"text\",\n                          suffix: /*#__PURE__*/_jsxDEV(Tooltip, {\n                            title: \"ID Name\",\n                            children: /*#__PURE__*/_jsxDEV(InfoCircleOutlined, {\n                              style: {\n                                color: \"rgba(0,0,0,.45)\"\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 184,\n                              columnNumber: 19\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 183,\n                            columnNumber: 18\n                          }, this),\n                          disabled: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 180,\n                          columnNumber: 16\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 173,\n                        columnNumber: 15\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 14\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      xs: 24,\n                      xl: 8,\n                      span: 8,\n                      className: \"param_col\",\n                      children: /*#__PURE__*/_jsxDEV(Form.Item, { ...field,\n                        name: [field.name, \"label_name\"],\n                        rules: [{\n                          required: true,\n                          message: \"Missing Label Name\"\n                        }],\n                        children: /*#__PURE__*/_jsxDEV(Input, {\n                          type: \"text\",\n                          suffix: /*#__PURE__*/_jsxDEV(Tooltip, {\n                            title: \"Label Name\",\n                            children: /*#__PURE__*/_jsxDEV(InfoCircleOutlined, {\n                              style: {\n                                color: \"rgba(0,0,0,.45)\"\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 220,\n                              columnNumber: 19\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 219,\n                            columnNumber: 18\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 216,\n                          columnNumber: 16\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 15\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 14\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      xs: 24,\n                      xl: 8,\n                      span: 8,\n                      className: \"param_col\",\n                      children: /*#__PURE__*/_jsxDEV(Form.Item, { ...field,\n                        name: [field.name, \"data_type\"],\n                        rules: [{\n                          required: true,\n                          message: \"Missing data type\"\n                        }],\n                        children: /*#__PURE__*/_jsxDEV(Select, {\n                          style: {\n                            width: \"100%\",\n                            margin: \"0 8px\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(Option, {\n                            value: \"NUMBER\",\n                            children: \"Number\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 257,\n                            columnNumber: 17\n                          }, this), /*#__PURE__*/_jsxDEV(Option, {\n                            value: \"STRING\",\n                            children: \"Text\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 260,\n                            columnNumber: 17\n                          }, this), /*#__PURE__*/_jsxDEV(Option, {\n                            value: \"BOOLEAN\",\n                            children: \"Boolean\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 263,\n                            columnNumber: 17\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 251,\n                          columnNumber: 16\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 15\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 14\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 13\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                children: /*#__PURE__*/_jsxDEV(FormButton, {\n                  title: \"Next\",\n                  isLoading: isLoading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 8,\n          className: \"url_col\",\n          span: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FillField, \"NwX9MrCp+rXuxb6aaJrBrjRu6uw=\", false, function () {\n  return [useHistory, useLocation, Form.useForm];\n});\n\n_c = FillField;\n\nvar _c;\n\n$RefreshReg$(_c, \"FillField\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/url/FillField.tsx"],"names":["React","useEffect","useState","Layout","Row","Col","Form","Card","message","Input","Select","Tooltip","BackHeader","FormButton","useHistory","useLocation","RoutePath","UrlRepo","LocalStorage","InfoCircleOutlined","mixpanel","Option","FillField","history","location","urlRepo","form","useForm","isLoading","setLoading","schema","setSchema","apiStatus","setAPIStatus","locationState","state","onFinish","values","track","userId","getUserID","apiResult","saveUrl","url","apiKey","configParam","isSuccess","success","push","pathname","graph_editor","userApiId","error","initState","validateUrl","data","forEach","item","prevState","label_name","labelName","name","data_type","dataType","resetFields","overflow","backgroundColor","fields","map","field","color","required","width","margin"],"mappings":"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","sourcesContent":["import React, { ReactElement, useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport {\n\tLayout,\n\tRow,\n\tCol,\n\tForm,\n\tCard,\n\tmessage,\n\tInput,\n\tSpace,\n\tButton,\n\tModal,\n\tSelect,\n\tTooltip,\n} from \"antd\";\nimport \"./Url.less\";\nimport { BackHeader, EmailField, FormButton } from \"../../utils/components\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { UrlRepo } from \"../../services/api/repositories/url_repo\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Title from \"antd/lib/typography/Title\";\nimport { url } from \"inspector\";\nimport {\n\tCopyOutlined,\n\tInfoCircleOutlined,\n\tMinusCircleOutlined,\n\tPlusOutlined,\n} from \"@ant-design/icons\";\nimport { stringify } from \"querystring\";\nimport { ObjectType } from \"typescript\";\nimport { SchemaField, UserUrl } from \"../../services/api/models/url_model\";\nimport mixpanel from \"mixpanel-browser\";\n\nconst { Option } = Select;\n\nexport const FillField: React.FC<any> = () => {\n\tlet history = useHistory();\n\n\tlet location = useLocation();\n\n\tlet urlRepo = new UrlRepo();\n\n\tconst [form] = Form.useForm();\n\n\tconst [isLoading, setLoading] = useState(false);\n\n\tconst [schema, setSchema] = useState<\n\t\tArray<{\n\t\t\tname: any;\n\t\t\tlabel_name: any;\n\t\t\tdata_type: any;\n\t\t}>\n\t>([]);\n\n\tconst [apiStatus, setAPIStatus] = useState<boolean>(false);\n\n\tconst locationState: any = location.state;\n\n\tconst onFinish = async (values: any) => {\n\t\tmixpanel.track(\"Fill_Field_Excecute_Add_Fields_Click\");\n\t\t// Handle if API given error\n\t\tif (apiStatus) {\n\t\t\tlet userId = await LocalStorage.getUserID();\n\t\t\tsetLoading(true);\n\t\t\tlet apiResult = await urlRepo.saveUrl({\n\t\t\t\turl: locationState.url,\n\t\t\t\tuserId: userId ?? \"\",\n\t\t\t\tapiKey: locationState.apiKey,\n\t\t\t\tschema: values[\"schemaList\"],\n\t\t\t\tconfigParam: locationState.configParam,\n\t\t\t});\n\n\t\t\tif (apiResult.isSuccess) {\n\t\t\t\tmixpanel.track(\"Fill_Field_Excecute_Add_Fields_Click\", {\n\t\t\t\t\tapiResult: apiResult.message,\n\t\t\t\t});\n\t\t\t\tmessage.success(\"API added successful\");\n\n\t\t\t\thistory.push({\n\t\t\t\t\tpathname: RoutePath.graph_editor,\n\t\t\t\t\tstate: {\n\t\t\t\t\t\tapiKey: locationState.apiKey,\n\t\t\t\t\t\tuserApiId: locationState.userApiId,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tmixpanel.track(\"Fill_Field_Excecute_Add_Fields_Click\", {\n\t\t\t\t\tapiResult: apiResult.message,\n\t\t\t\t});\n\t\t\t\tmessage.error(apiResult.message);\n\t\t\t}\n\t\t\tsetLoading(false);\n\t\t} else {\n\t\t\tmessage.error(\n\t\t\t\t\"The response of your API is in invalid format or API errors\"\n\t\t\t);\n\t\t}\n\t};\n\tasync function initState() {\n\t\tlet apiResult = await urlRepo.validateUrl({\n\t\t\turl: locationState.url!,\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tmessage.success(\"Your API is valid\");\n\n\t\t\tapiResult.data?.forEach((item: SchemaField) => {\n\t\t\t\tsetSchema((prevState) => {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel_name: item.labelName ?? \"\",\n\t\t\t\t\t\t\tname: item.name ?? \"\",\n\t\t\t\t\t\t\tdata_type: item.dataType ?? \"\",\n\t\t\t\t\t\t},\n\t\t\t\t\t];\n\t\t\t\t});\n\t\t\t});\n\t\t\tsetAPIStatus(true);\n\t\t} else {\n\t\t\tmessage.error(\n\t\t\t\t\"The response of your API is in invalid format or API errors\"\n\t\t\t);\n\t\t}\n\t}\n\n\t// Retrieve schema field from url and set State\n\tuseEffect(() => {\n\t\tinitState();\n\t}, []);\n\n\t// Set Initial Values Using State in antd form\n\tuseEffect(() => {\n\t\tform.resetFields();\n\t}, [schema]);\n\n\treturn (\n\t\t<Layout className=\"layout\" style={{ overflow: \"auto\" }}>\n\t\t\t<div className=\"navbar\" style={{ backgroundColor: \"#fff\" }}>\n\t\t\t\t<BackHeader title=\"Edit the the field\" />\n\t\t\t</div>\n\t\t\t<Layout\n\t\t\t\tclassName=\"url_content\"\n\t\t\t\tstyle={{ backgroundColor: \"white\" }}\n\t\t\t>\n\t\t\t\t<Row className=\"url_row\">\n\t\t\t\t\t<Col xs={24} xl={8} className=\"url_col\" span={8} />\n\t\t\t\t\t<Col xs={24} xl={8} className=\"url_col\" span={8}>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\t\tname=\"fill_url\"\n\t\t\t\t\t\t\t\tclassName=\"url_form\"\n\t\t\t\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t\t\t\t\tform={form}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Form.List\n\t\t\t\t\t\t\t\t\tname=\"schemaList\"\n\t\t\t\t\t\t\t\t\tinitialValue={schema}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{(fields) => (\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t{fields.map((field) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txs={24}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txl={8}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tspan={8}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"param_col\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfield.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"ID Name\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"rgba(0,0,0,.45)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txs={24}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txl={8}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tspan={8}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"param_col\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfield.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label_name\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Missing Label Name\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Label Name\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"rgba(0,0,0,.45)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txs={24}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txl={8}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tspan={8}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"param_col\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfield.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"data_type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Missing data type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"0 8px\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option value=\"NUMBER\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNumber\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option value=\"STRING\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tText\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option value=\"BOOLEAN\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tBoolean\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Form.List>\n\n\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t<FormButton\n\t\t\t\t\t\t\t\t\t\ttitle=\"Next\"\n\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={24} xl={8} className=\"url_col\" span={8} />\n\t\t\t\t</Row>\n\t\t\t</Layout>\n\t\t</Layout>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}