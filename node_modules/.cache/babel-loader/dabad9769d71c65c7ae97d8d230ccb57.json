{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/role/RoleList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Layout, Row, Col, Space, message, Skeleton, Table } from \"antd\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { RoleRepo } from \"../../services/api/repositories/role_repo\";\nimport { RelationshipRepo } from \"../../services/api/repositories/relationship_repo\";\nimport { Box, Button, Flex, Spacer, Stack } from \"@chakra-ui/react\";\nimport Title from \"antd/lib/typography/Title\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const RoleList = () => {\n  _s();\n\n  let roleRepo = new RoleRepo();\n  let relationshipRepo = new RelationshipRepo();\n  let location = useLocation();\n  let history = useHistory();\n  const locationState = location.state; // Get current sign in User\n\n  const user = useContext(AuthContext); // Handle the state of each option in Menu bar\n\n  const [_viewList, setViewList] = useState([]);\n  const [_listLoading, setListLoading] = useState(true);\n\n  async function getRole() {\n    setViewList([]);\n    let apiResult = await roleRepo.getRoleById({\n      roleId: locationState.roleId\n    });\n\n    if (apiResult.isSuccess) {\n      console.log(apiResult.data[0]);\n\n      if (apiResult.data[0].clients !== undefined) {\n        setViewList(apiResult.data[0].clients.map((item, index) => {\n          var _item$createdDateTime;\n\n          console.log(index);\n          return {\n            index: index + 1,\n            key: item.clientRoleRelId,\n            clientRoleRelId: item.clientRoleRelId,\n            name: item.client[0].name,\n            permission: item.permission,\n            createdDateTime: new Date((_item$createdDateTime = item.createdDateTime) !== null && _item$createdDateTime !== void 0 ? _item$createdDateTime : \"\").toLocaleString()\n          };\n        }));\n      }\n    }\n\n    setListLoading(false);\n  }\n\n  async function deleteRole(roleId) {\n    let apiResult = await roleRepo.deleteRole({\n      roleId: roleId\n    });\n\n    if (apiResult.isSuccess) {\n      setListLoading(true);\n      history.replace(RoutePath.dashboard);\n      message.success(\"Delete role success\");\n    } else {\n      message.success(\"Delete Fail\");\n    }\n\n    setListLoading(false);\n  }\n\n  async function deleteRelationship(clientRoleRelId) {\n    let apiResult = await relationshipRepo.deleteRelationship({\n      clientRoleRelId: clientRoleRelId\n    });\n\n    if (apiResult.isSuccess) {\n      setListLoading(true);\n      getRole();\n      message.success(\"Delete relationship success\");\n    } else {\n      message.success(\"Delete Fail\");\n    }\n\n    setListLoading(false);\n  }\n\n  useEffect(() => {\n    getRole();\n    return () => {\n      setViewList([]);\n      setListLoading(true);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"dashboard_row\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 6,\n          className: \"dashboard_col\",\n          span: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 12,\n          className: \"dashboard_col\",\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(Flex, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                p: \"4\",\n                children: /*#__PURE__*/_jsxDEV(Title, {\n                  level: 4,\n                  children: `${locationState.name}'s roles`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                p: 4,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  backgroundColor: \"red.400\",\n                  color: \"white\",\n                  onClick: () => {\n                    deleteRole(locationState.roleId);\n                  },\n                  children: [\"Delete \", locationState.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n              active: true,\n              loading: _listLoading,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                dataSource: _viewList,\n                columns: [{\n                  title: \"Index\",\n                  dataIndex: \"index\",\n                  key: \"index\"\n                }, {\n                  title: \"Client Name\",\n                  dataIndex: \"name\",\n                  key: \"name\"\n                }, {\n                  title: \"Permission\",\n                  dataIndex: \"permission\",\n                  key: \"permission\"\n                }, {\n                  title: \"Created Date\",\n                  dataIndex: \"createdDateTime\",\n                  key: \"createdDateTime\"\n                }, {\n                  title: \"Action\",\n                  key: \"action\",\n                  render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n                    size: \"middle\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      backgroundColor: \"red.400\",\n                      color: \"white\",\n                      onClick: () => {\n                        var _record$clientRoleRel;\n\n                        console.log(record);\n                        deleteRelationship((_record$clientRoleRel = record.clientRoleRelId) !== null && _record$clientRoleRel !== void 0 ? _record$clientRoleRel : \"\");\n                      },\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 14\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 13\n                  }, this)\n                }]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 12,\n          className: \"dashboard_col\",\n          span: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(RoleList, \"C+hyg7OxbcTcLWazWFxHYOGW0zs=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = RoleList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoleList\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/role/RoleList.tsx"],"names":["React","useContext","useEffect","useState","useHistory","useLocation","Layout","Row","Col","Space","message","Skeleton","Table","AuthContext","RoleRepo","RelationshipRepo","Box","Button","Flex","Spacer","Stack","Title","RoutePath","RoleList","roleRepo","relationshipRepo","location","history","locationState","state","user","_viewList","setViewList","_listLoading","setListLoading","getRole","apiResult","getRoleById","roleId","isSuccess","console","log","data","clients","undefined","map","item","index","key","clientRoleRelId","name","client","permission","createdDateTime","Date","toLocaleString","deleteRole","replace","dashboard","success","deleteRelationship","title","dataIndex","render","text","record"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AAEA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,KAA3B,EAAkCC,OAAlC,EAA2CC,QAA3C,EAAqDC,KAArD,QAAkE,MAAlE;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAMA,SAASC,QAAT,QAAyB,2CAAzB;AACA,SAASC,gBAAT,QAAiC,mDAAjC;AAGA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,MAA5B,EAAoCC,KAApC,QAAiD,kBAAjD;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,SAASC,SAAT,QAA0B,uBAA1B;;;AAEA,OAAO,MAAMC,QAAuB,GAAG,MAAM;AAAA;;AAC5C,MAAIC,QAAQ,GAAG,IAAIV,QAAJ,EAAf;AAEA,MAAIW,gBAAgB,GAAG,IAAIV,gBAAJ,EAAvB;AAEA,MAAIW,QAAQ,GAAGrB,WAAW,EAA1B;AACA,MAAIsB,OAAO,GAAGvB,UAAU,EAAxB;AACA,QAAMwB,aAAkB,GAAGF,QAAQ,CAACG,KAApC,CAP4C,CAS5C;;AACA,QAAMC,IAAI,GAAG7B,UAAU,CAACY,WAAD,CAAvB,CAV4C,CAY5C;;AAGA,QAAM,CAACkB,SAAD,EAAYC,WAAZ,IAA2B7B,QAAQ,CAAsB,EAAtB,CAAzC;AAEA,QAAM,CAAC8B,YAAD,EAAeC,cAAf,IAAiC/B,QAAQ,CAAU,IAAV,CAA/C;;AAEA,iBAAegC,OAAf,GAAyB;AACxBH,IAAAA,WAAW,CAAC,EAAD,CAAX;AAGA,QAAII,SAAS,GAAG,MAAMZ,QAAQ,CAACa,WAAT,CAAqB;AAC1CC,MAAAA,MAAM,EAAEV,aAAa,CAACU;AADoB,KAArB,CAAtB;;AAIA,QAAIF,SAAS,CAACG,SAAd,EAAyB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACM,IAAV,CAAe,CAAf,CAAZ;;AACA,UAAIN,SAAS,CAACM,IAAV,CAAe,CAAf,EAAkBC,OAAlB,KAA8BC,SAAlC,EAA6C;AAC5CZ,QAAAA,WAAW,CACVI,SAAS,CAACM,IAAV,CAAe,CAAf,EAAkBC,OAAlB,CAA0BE,GAA1B,CACC,CAACC,IAAD,EAAqBC,KAArB,KAAuC;AAAA;;AACtCP,UAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AAEA,iBAAO;AACNA,YAAAA,KAAK,EAAEA,KAAK,GAAG,CADT;AAENC,YAAAA,GAAG,EAAEF,IAAI,CAACG,eAFJ;AAGNA,YAAAA,eAAe,EAAEH,IAAI,CAACG,eAHhB;AAINC,YAAAA,IAAI,EAAEJ,IAAI,CAACK,MAAL,CAAa,CAAb,EAAgBD,IAJhB;AAKNE,YAAAA,UAAU,EAAEN,IAAI,CAACM,UALX;AAMNC,YAAAA,eAAe,EAAE,IAAIC,IAAJ,0BAChBR,IAAI,CAACO,eADW,yEACQ,EADR,EAEfE,cAFe;AANX,WAAP;AAUA,SAdF,CADU,CAAX;AAkBA;AACD;;AACDrB,IAAAA,cAAc,CAAC,KAAD,CAAd;AACA;;AAED,iBAAesB,UAAf,CAA0BlB,MAA1B,EAA0C;AACzC,QAAIF,SAAS,GAAG,MAAMZ,QAAQ,CAACgC,UAAT,CAAoB;AACzClB,MAAAA,MAAM,EAAEA;AADiC,KAApB,CAAtB;;AAGA,QAAIF,SAAS,CAACG,SAAd,EAAyB;AACxBL,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAP,MAAAA,OAAO,CAAC8B,OAAR,CAAgBnC,SAAS,CAACoC,SAA1B;AACAhD,MAAAA,OAAO,CAACiD,OAAR,CAAgB,qBAAhB;AACA,KAJD,MAIO;AACNjD,MAAAA,OAAO,CAACiD,OAAR,CAAgB,aAAhB;AACA;;AACDzB,IAAAA,cAAc,CAAC,KAAD,CAAd;AACA;;AAED,iBAAe0B,kBAAf,CAAkCX,eAAlC,EAA2D;AAC1D,QAAIb,SAAS,GAAG,MAAMX,gBAAgB,CAACmC,kBAAjB,CAAoC;AACzDX,MAAAA,eAAe,EAAEA;AADwC,KAApC,CAAtB;;AAGA,QAAIb,SAAS,CAACG,SAAd,EAAyB;AACxBL,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAC,MAAAA,OAAO;AACPzB,MAAAA,OAAO,CAACiD,OAAR,CAAgB,6BAAhB;AACA,KAJD,MAIO;AACNjD,MAAAA,OAAO,CAACiD,OAAR,CAAgB,aAAhB;AACA;;AACDzB,IAAAA,cAAc,CAAC,KAAD,CAAd;AACA;;AAEDhC,EAAAA,SAAS,CAAC,MAAM;AACfiC,IAAAA,OAAO;AAEP,WAAO,MAAM;AACZH,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA,KAHD;AAIA,GAPQ,EAON,EAPM,CAAT;AASA,sBACC;AAAA,2BACC,QAAC,MAAD;AAAA,6BACC,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACC,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,EAAE,EAAE,CAAjB;AAAoB,UAAA,SAAS,EAAC,eAA9B;AAA8C,UAAA,IAAI,EAAE;AAApD;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,EAAE,EAAE,EAAjB;AAAqB,UAAA,SAAS,EAAC,eAA/B;AAA+C,UAAA,IAAI,EAAE,EAArD;AAAA,iCACC,QAAC,KAAD;AAAO,YAAA,OAAO,EAAE,CAAhB;AAAA,oCACC,QAAC,IAAD;AAAA,sCACC,QAAC,GAAD;AAAK,gBAAA,CAAC,EAAC,GAAP;AAAA,uCACC,QAAC,KAAD;AAAO,kBAAA,KAAK,EAAE,CAAd;AAAA,4BACG,GAAEN,aAAa,CAACsB,IAAK;AADxB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,sBADD,eAMC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,sBAND,eAOC,QAAC,GAAD;AAAK,gBAAA,CAAC,EAAE,CAAR;AAAA,uCACC,QAAC,MAAD;AACC,kBAAA,eAAe,EAAE,SADlB;AAEC,kBAAA,KAAK,EAAE,OAFR;AAGC,kBAAA,OAAO,EAAE,MAAM;AACdM,oBAAAA,UAAU,CACT5B,aAAa,CAACU,MADL,CAAV;AAGA,mBAPF;AAAA,wCASSV,aAAa,CAACsB,IATvB;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,sBAPD;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAsBC,QAAC,QAAD;AAAU,cAAA,MAAM,MAAhB;AAAiB,cAAA,OAAO,EAAEjB,YAA1B;AAAA,qCACC,QAAC,KAAD;AACC,gBAAA,UAAU,EAAEF,SADb;AAEC,gBAAA,OAAO,EAAE,CACR;AACC8B,kBAAAA,KAAK,EAAE,OADR;AAECC,kBAAAA,SAAS,EAAE,OAFZ;AAGCd,kBAAAA,GAAG,EAAE;AAHN,iBADQ,EAMR;AACCa,kBAAAA,KAAK,EAAE,aADR;AAECC,kBAAAA,SAAS,EAAE,MAFZ;AAGCd,kBAAAA,GAAG,EAAE;AAHN,iBANQ,EAWR;AACCa,kBAAAA,KAAK,EAAE,YADR;AAECC,kBAAAA,SAAS,EAAE,YAFZ;AAGCd,kBAAAA,GAAG,EAAE;AAHN,iBAXQ,EAgBR;AACCa,kBAAAA,KAAK,EAAE,cADR;AAECC,kBAAAA,SAAS,EAAE,iBAFZ;AAGCd,kBAAAA,GAAG,EAAE;AAHN,iBAhBQ,EAqBR;AACCa,kBAAAA,KAAK,EAAE,QADR;AAECb,kBAAAA,GAAG,EAAE,QAFN;AAGCe,kBAAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,kBACP,QAAC,KAAD;AAAO,oBAAA,IAAI,EAAC,QAAZ;AAAA,2CACC,QAAC,MAAD;AACC,sBAAA,eAAe,EACd,SAFF;AAIC,sBAAA,KAAK,EAAE,OAJR;AAKC,sBAAA,OAAO,EAAE,MAAM;AAAA;;AACdzB,wBAAAA,OAAO,CAACC,GAAR,CAAYwB,MAAZ;AACAL,wBAAAA,kBAAkB,0BACjBK,MAAM,CAAChB,eADU,yEAEhB,EAFgB,CAAlB;AAIA,uBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAJF,iBArBQ;AAFV;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,oBAtBD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAFD,eA6EC,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,EAAE,EAAE,EAAjB;AAAqB,UAAA,SAAS,EAAC,eAA/B;AAA+C,UAAA,IAAI,EAAE;AAArD;AAAA;AAAA;AAAA;AAAA,gBA7ED;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAqFA,CA/KM;;GAAM1B,Q;UAKGlB,W,EACDD,U;;;KANFmB,Q","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Space, message, Skeleton, Table } from \"antd\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { User } from \"../../services/api/models/user_model\";\nimport { ClientRepo } from \"../../services/api/repositories/client_repo\";\nimport { Client } from \"../../services/api/models/client_model\";\nimport { RoleRepo } from \"../../services/api/repositories/role_repo\";\nimport { RelationshipRepo } from \"../../services/api/repositories/relationship_repo\";\nimport { Role } from \"../../services/api/models/role_model\";\nimport { Relationship } from \"../../services/api/models/relationship_model\";\nimport { Box, Button, Flex, Spacer, Stack } from \"@chakra-ui/react\";\nimport Title from \"antd/lib/typography/Title\";\nimport { RoutePath } from \"../../utils/routePath\";\n\nexport const RoleList: React.FC<any> = () => {\n\tlet roleRepo = new RoleRepo();\n\n\tlet relationshipRepo = new RelationshipRepo();\n\n\tlet location = useLocation();\n\tlet history = useHistory();\n\tconst locationState: any = location.state;\n\n\t// Get current sign in User\n\tconst user = useContext(AuthContext);\n\n\t// Handle the state of each option in Menu bar\n\n\n\tconst [_viewList, setViewList] = useState<Array<Relationship>>([]);\n\n\tconst [_listLoading, setListLoading] = useState<boolean>(true);\n\n\tasync function getRole() {\n\t\tsetViewList([]);\n\n\t\t\n\t\tlet apiResult = await roleRepo.getRoleById({\n\t\t\troleId: locationState.roleId!,\n\t\t});\n\n\t\tif (apiResult.isSuccess) {\n\t\t\tconsole.log(apiResult.data[0])\n\t\t\tif (apiResult.data[0].clients !== undefined) {\n\t\t\t\tsetViewList(\n\t\t\t\t\tapiResult.data[0].clients.map(\n\t\t\t\t\t\t(item: Relationship, index: number) => {\n\t\t\t\t\t\t\tconsole.log(index);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tindex: index + 1,\n\t\t\t\t\t\t\t\tkey: item.clientRoleRelId,\n\t\t\t\t\t\t\t\tclientRoleRelId: item.clientRoleRelId,\n\t\t\t\t\t\t\t\tname: item.client![0].name,\n\t\t\t\t\t\t\t\tpermission: item.permission,\n\t\t\t\t\t\t\t\tcreatedDateTime: new Date(\n\t\t\t\t\t\t\t\t\titem.createdDateTime ?? \"\"\n\t\t\t\t\t\t\t\t).toLocaleString(),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\n\tasync function deleteRole(roleId: string) {\n\t\tlet apiResult = await roleRepo.deleteRole({\n\t\t\troleId: roleId!,\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tsetListLoading(true);\n\t\t\thistory.replace(RoutePath.dashboard);\n\t\t\tmessage.success(\"Delete role success\");\n\t\t} else {\n\t\t\tmessage.success(\"Delete Fail\");\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\n\tasync function deleteRelationship(clientRoleRelId: string) {\n\t\tlet apiResult = await relationshipRepo.deleteRelationship({\n\t\t\tclientRoleRelId: clientRoleRelId!,\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tsetListLoading(true);\n\t\t\tgetRole();\n\t\t\tmessage.success(\"Delete relationship success\");\n\t\t} else {\n\t\t\tmessage.success(\"Delete Fail\");\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\n\tuseEffect(() => {\n\t\tgetRole();\n\n\t\treturn () => {\n\t\t\tsetViewList([]);\n\t\t\tsetListLoading(true);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Layout>\n\t\t\t\t<Row className=\"dashboard_row\">\n\t\t\t\t\t<Col xs={24} xl={6} className=\"dashboard_col\" span={6} />\n\t\t\t\t\t<Col xs={24} xl={12} className=\"dashboard_col\" span={12}>\n\t\t\t\t\t\t<Stack spacing={4}>\n\t\t\t\t\t\t\t<Flex>\n\t\t\t\t\t\t\t\t<Box p=\"4\">\n\t\t\t\t\t\t\t\t\t<Title level={4}>\n\t\t\t\t\t\t\t\t\t\t{`${locationState.name}'s roles`}\n\t\t\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t\t\t<Box p={4}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tbackgroundColor={\"red.400\"}\n\t\t\t\t\t\t\t\t\t\tcolor={\"white\"}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tdeleteRole(\n\t\t\t\t\t\t\t\t\t\t\t\tlocationState.roleId\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tDelete {locationState.name}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t<Skeleton active loading={_listLoading}>\n\t\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\t\tdataSource={_viewList}\n\t\t\t\t\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Index\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"index\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"index\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Client Name\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"name\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"name\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Permission\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"permission\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"permission\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Created Date\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"createdDateTime\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"createdDateTime\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Action\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"action\",\n\t\t\t\t\t\t\t\t\t\t\trender: (text, record) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Space size=\"middle\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"red.400\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={\"white\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(record);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteRelationship(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecord.clientRoleRelId ??\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</Space>\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Skeleton>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={24} xl={12} className=\"dashboard_col\" span={6} />\n\t\t\t\t</Row>\n\t\t\t</Layout>\n\t\t</>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}