{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/dashboard/MainDashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Layout, Row, Col, List, Avatar, Skeleton, Popconfirm, Tooltip } from \"antd\";\nimport \"./MainDashboard.less\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { CopyTwoTone, DeleteOutlined, HeartOutlined, ReconciliationOutlined, UserOutlined } from \"@ant-design/icons\";\nimport Nav from \"./Nav\";\nimport mixpanel from \"mixpanel-browser\";\nimport { Link, Button as ChakraButton, Stack } from \"@chakra-ui/react\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport Title from \"antd/lib/typography/Title\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MainDashboard = () => {\n  _s();\n\n  let userRepo = new UserRepo();\n  let history = useHistory(); // Get current sign in User\n\n  const user = useContext(AuthContext); // Handle the state of each option in Menu bar\n\n  const [_viewTitle, setViewTitle] = useState(\"Clients\");\n  const [_urls, setUrls] = useState([]);\n  const [_listLoading, setListLoading] = useState(true); // async function getUrls() {\n  // \tlet userId = await LocalStorage.getUserID();\n  // \tlet apiResult = await urlRepo.getAllUserUrlByUserId({\n  // \t\tuserId: userId!,\n  // \t});\n  // \tif (apiResult.isSuccess) {\n  // \t\tif (apiResult.data.length > 0)\n  // \t\t\tapiResult.data.forEach((element: UserUrl) => {\n  // \t\t\t\tsetUrls((prevState) => {\n  // \t\t\t\t\treturn [...prevState, element];\n  // \t\t\t\t});\n  // \t\t\t});\n  // \t}\n  // \tsetListLoading(false);\n  // }\n\n  useEffect(() => {\n    async function initState() {\n      let userId = await LocalStorage.getUserID();\n      let apiResult = await userRepo.getUserById({\n        userId: userId\n      });\n\n      if (apiResult.isSuccess) {\n        var _usermodel$email, _usermodel$username, _usermodel$packagePla;\n\n        let usermodel = apiResult.data[0];\n        await LocalStorage.setEmail((_usermodel$email = usermodel === null || usermodel === void 0 ? void 0 : usermodel.email) !== null && _usermodel$email !== void 0 ? _usermodel$email : \"\");\n        await LocalStorage.setNickName((_usermodel$username = usermodel === null || usermodel === void 0 ? void 0 : usermodel.username) !== null && _usermodel$username !== void 0 ? _usermodel$username : \"\");\n        await LocalStorage.setPackagePlan((_usermodel$packagePla = usermodel === null || usermodel === void 0 ? void 0 : usermodel.packagePlan) !== null && _usermodel$packagePla !== void 0 ? _usermodel$packagePla : \"free\");\n      }\n    }\n\n    initState(); // getUrls();\n\n    return () => {\n      setViewTitle(\"\");\n      setUrls([]);\n      setListLoading(true);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"dashboard_row\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 6,\n          className: \"dashboard_col\",\n          span: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 12,\n          className: \"dashboard_col\",\n          span: 12,\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 6,\n            children: [/*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 4,\n              children: [/*#__PURE__*/_jsxDEV(ChakraButton, {\n                leftIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 20\n                }, this),\n                colorScheme: \"blue\",\n                variant: \"solid\",\n                onClick: () => {\n                  history.push(RoutePath.create_client);\n                },\n                children: \"Add client\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(ChakraButton, {\n                leftIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 20\n                }, this),\n                colorScheme: \"orange\",\n                variant: \"solid\",\n                onClick: () => {\n                  history.push(RoutePath.create_role);\n                },\n                children: \"Add Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(ChakraButton, {\n                leftIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 20\n                }, this),\n                colorScheme: \"purple\",\n                variant: \"solid\",\n                onClick: () => {\n                  history.push({\n                    pathname: RoutePath.fill_url\n                  });\n                },\n                children: \"Add Relationship\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 4,\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                placement: \"topLeft\",\n                title: \"View clients\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: /*#__PURE__*/_jsxDEV(UserOutlined, {\n                    style: {\n                      color: \"#1E90FF\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 12\n                  }, this),\n                  shape: \"round\",\n                  size: \"large\",\n                  onClick: () => {\n                    setViewTitle(\"Clients\");\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                placement: \"topLeft\",\n                title: \"View Roles\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: /*#__PURE__*/_jsxDEV(ReconciliationOutlined, {\n                    style: {\n                      color: \"\t#FFA500\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 17\n                  }, this),\n                  shape: \"round\",\n                  size: \"large\",\n                  onClick: () => {\n                    setViewTitle(\"Roles\");\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                placement: \"topLeft\",\n                title: \"View Relationship\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: /*#__PURE__*/_jsxDEV(HeartOutlined, {\n                    style: {\n                      color: \"#BA55D3\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 17\n                  }, this),\n                  shape: \"round\",\n                  size: \"large\",\n                  onClick: () => {\n                    setViewTitle(\"Relationships\");\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Title, {\n              level: 3,\n              children: _viewTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n            active: true,\n            loading: _listLoading,\n            children: [/*#__PURE__*/_jsxDEV(List, {\n              itemLayout: \"horizontal\",\n              dataSource: _urls,\n              renderItem: (item, index) => /*#__PURE__*/_jsxDEV(List.Item, {\n                actions: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                  placement: \"topLeft\",\n                  title: \"Copy graph iframe\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    shape: \"round\",\n                    icon: /*#__PURE__*/_jsxDEV(CopyTwoTone, {\n                      twoToneColor: \"#270949\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 15\n                    }, this),\n                    size: \"large\",\n                    onClick: async () => {}\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n                  title: \"Are you sure you want to delete?\",\n                  onCancel: () => {\n                    mixpanel.track(\"Dashboard_Execute_Delete_Url_Click\", {\n                      Confirmation: \"Deletion Cancel\"\n                    });\n                  },\n                  onConfirm: async () => {\n                    mixpanel.track(\"Dashboard_Execute_Delete_Url_Click\", {\n                      Confirmation: \"Deletion Approved\"\n                    }); // let apiResult =\n                    // \tawait urlRepo.deleteUrl(\n                    // \t\t{\n                    // \t\t\turlId: item.urlId!,\n                    // \t\t}\n                    // \t);\n                    // if (apiResult.isSuccess) {\n                    // \tsetListLoading(true);\n                    // \tsetUrls([]);\n                    // \tgetUrls();\n                    // \tmessage.success(\n                    // \t\t\"Delete success\"\n                    // \t);\n                    // } else {\n                    // \tmessage.success(\n                    // \t\t\"Delete Fail\"\n                    // \t);\n                    // }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    shape: \"round\",\n                    icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n                      style: {\n                        color: \"red\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 15\n                    }, this),\n                    size: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 12\n                }, this)],\n                children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n                  avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: `https://picsum.photos/200/300?random=${index}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 13\n                  }, this),\n                  title: /*#__PURE__*/_jsxDEV(Link, {\n                    onClick: () => {\n                      mixpanel.track(\"Dashboard_View_Graph_Editor_Click\");\n                      history.push({\n                        pathname: RoutePath.graph_editor,\n                        state: {\n                          apiKey: item.apiKey\n                        }\n                      });\n                    },\n                    children: item.url\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 13\n                  }, this),\n                  description: \"Click the link to the editor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 8\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 12,\n          className: \"dashboard_col\",\n          span: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MainDashboard, \"12kViw3ai0jpDFrgrKRpCbgu5Hw=\", false, function () {\n  return [useHistory];\n});\n\n_c = MainDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainDashboard\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/dashboard/MainDashboard.tsx"],"names":["React","useContext","useEffect","useState","useHistory","Button","Layout","Row","Col","List","Avatar","Skeleton","Popconfirm","Tooltip","RoutePath","AuthContext","LocalStorage","UserRepo","CopyTwoTone","DeleteOutlined","HeartOutlined","ReconciliationOutlined","UserOutlined","Nav","mixpanel","Link","ChakraButton","Stack","AddIcon","Title","MainDashboard","userRepo","history","user","_viewTitle","setViewTitle","_urls","setUrls","_listLoading","setListLoading","initState","userId","getUserID","apiResult","getUserById","isSuccess","usermodel","data","setEmail","email","setNickName","username","setPackagePlan","packagePlan","push","create_client","create_role","pathname","fill_url","color","height","item","index","track","Confirmation","graph_editor","state","apiKey","url"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport {\n\tButton,\n\tLayout,\n\tMenu,\n\tTypography,\n\tRow,\n\tCol,\n\tSpace,\n\tDivider,\n\tCard,\n\tList,\n\tAvatar,\n\tmessage,\n\tSkeleton,\n\tPopconfirm,\n\tSpin,\n\tTooltip,\n} from \"antd\";\nimport \"./MainDashboard.less\";\nimport codagenceWordLogo from \"../../assets/logo/Codagence_main_logo.png\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { PricingCards } from \"../../utils/components\";\nimport { PaymentRepo } from \"../../services/api/repositories/payment_repo\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { User } from \"../../services/api/models/user_model\";\nimport Meta from \"antd/lib/card/Meta\";\nimport {\n\tCopyOutlined,\n\tCopyTwoTone,\n\tDeleteOutlined,\n\tEditTwoTone,\n\tEyeInvisibleOutlined,\n\tHeartOutlined,\n\tHomeTwoTone,\n\tPlusCircleOutlined,\n\tReconciliationOutlined,\n\tUserOutlined,\n} from \"@ant-design/icons\";\nimport { UserUrl } from \"../../services/api/models/url_model\";\nimport Nav from \"./Nav\";\nimport mixpanel from \"mixpanel-browser\";\nimport { Link, Button as ChakraButton, Stack } from \"@chakra-ui/react\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport Title from \"antd/lib/typography/Title\";\n\nexport const MainDashboard: React.FC<any> = () => {\n\tlet userRepo = new UserRepo();\n\n\tlet history = useHistory();\n\n\t// Get current sign in User\n\tconst user = useContext(AuthContext);\n\n\t// Handle the state of each option in Menu bar\n\n\tconst [_viewTitle, setViewTitle] = useState<string>(\"Clients\");\n\n\tconst [_urls, setUrls] = useState<Array<UserUrl>>([]);\n\n\tconst [_listLoading, setListLoading] = useState<boolean>(true);\n\n\t// async function getUrls() {\n\t// \tlet userId = await LocalStorage.getUserID();\n\t// \tlet apiResult = await urlRepo.getAllUserUrlByUserId({\n\t// \t\tuserId: userId!,\n\t// \t});\n\n\t// \tif (apiResult.isSuccess) {\n\t// \t\tif (apiResult.data.length > 0)\n\t// \t\t\tapiResult.data.forEach((element: UserUrl) => {\n\t// \t\t\t\tsetUrls((prevState) => {\n\t// \t\t\t\t\treturn [...prevState, element];\n\t// \t\t\t\t});\n\t// \t\t\t});\n\t// \t}\n\t// \tsetListLoading(false);\n\t// }\n\n\tuseEffect(() => {\n\t\tasync function initState() {\n\t\t\tlet userId = await LocalStorage.getUserID();\n\t\t\tlet apiResult = await userRepo.getUserById({\n\t\t\t\tuserId: userId!,\n\t\t\t});\n\t\t\tif (apiResult.isSuccess) {\n\t\t\t\tlet usermodel: User = apiResult.data[0];\n\t\t\t\tawait LocalStorage.setEmail(usermodel?.email ?? \"\");\n\t\t\t\tawait LocalStorage.setNickName(usermodel?.username ?? \"\");\n\t\t\t\tawait LocalStorage.setPackagePlan(\n\t\t\t\t\tusermodel?.packagePlan ?? \"free\"\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tinitState();\n\t\t// getUrls();\n\n\t\treturn () => {\n\t\t\tsetViewTitle(\"\")\n\t\t\tsetUrls([]);\n\t\t\tsetListLoading(true);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Nav />\n\t\t\t<Layout>\n\t\t\t\t<Row className=\"dashboard_row\">\n\t\t\t\t\t<Col xs={24} xl={6} className=\"dashboard_col\" span={6} />\n\t\t\t\t\t<Col xs={24} xl={12} className=\"dashboard_col\" span={12}>\n\t\t\t\t\t\t<Stack spacing={6}>\n\t\t\t\t\t\t\t<Stack direction=\"row\" spacing={4}>\n\t\t\t\t\t\t\t\t<ChakraButton\n\t\t\t\t\t\t\t\t\tleftIcon={<AddIcon />}\n\t\t\t\t\t\t\t\t\tcolorScheme=\"blue\"\n\t\t\t\t\t\t\t\t\tvariant=\"solid\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\thistory.push(RoutePath.create_client);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd client\n\t\t\t\t\t\t\t\t</ChakraButton>\n\n\t\t\t\t\t\t\t\t<ChakraButton\n\t\t\t\t\t\t\t\t\tleftIcon={<AddIcon />}\n\t\t\t\t\t\t\t\t\tcolorScheme=\"orange\"\n\t\t\t\t\t\t\t\t\tvariant=\"solid\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\thistory.push(RoutePath.create_role);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd Role\n\t\t\t\t\t\t\t\t</ChakraButton>\n\n\t\t\t\t\t\t\t\t<ChakraButton\n\t\t\t\t\t\t\t\t\tleftIcon={<AddIcon />}\n\t\t\t\t\t\t\t\t\tcolorScheme=\"purple\"\n\t\t\t\t\t\t\t\t\tvariant=\"solid\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\thistory.push({\n\t\t\t\t\t\t\t\t\t\t\tpathname: RoutePath.fill_url,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd Relationship\n\t\t\t\t\t\t\t\t</ChakraButton>\n\t\t\t\t\t\t\t</Stack>\n\n\t\t\t\t\t\t\t<Stack direction=\"row\" spacing={4}>\n\t\t\t\t\t\t\t\t<Tooltip placement=\"topLeft\" title=\"View clients\">\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t<UserOutlined style={{color:\"#1E90FF\"}}/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetViewTitle(\"Clients\")\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Button>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t<Tooltip placement=\"topLeft\" title=\"View Roles\">\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ticon={<ReconciliationOutlined style={{color:\"\t#FFA500\"}}/>}\n\t\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetViewTitle(\"Roles\")\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Button>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t<Tooltip placement=\"topLeft\" title=\"View Relationship\">\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ticon={<HeartOutlined style={{color:\"#BA55D3\"}}/>}\n\t\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetViewTitle(\"Relationships\")\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Button>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t<Title level={3}>{_viewTitle}</Title>\n\t\t\t\t\t\t</Stack>\n\n\t\t\t\t\t\t<div style={{ height: \"20px\" }}></div>\n\t\t\t\t\t\t<Skeleton active loading={_listLoading}>\n\t\t\t\t\t\t\t<List\n\t\t\t\t\t\t\t\titemLayout=\"horizontal\"\n\t\t\t\t\t\t\t\tdataSource={_urls}\n\t\t\t\t\t\t\t\trenderItem={(item, index) => (\n\t\t\t\t\t\t\t\t\t<List.Item\n\t\t\t\t\t\t\t\t\t\tactions={[\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"topLeft\"\n\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Copy graph iframe\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CopyTwoTone twoToneColor=\"#270949\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={\"large\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={async () => {}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>,\n\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure you want to delete?\"\n\t\t\t\t\t\t\t\t\t\t\t\tonCancel={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tmixpanel.track(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Dashboard_Execute_Delete_Url_Click\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tConfirmation:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Deletion Cancel\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tmixpanel.track(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Dashboard_Execute_Delete_Url_Click\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tConfirmation:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Deletion Approved\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t// let apiResult =\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \tawait urlRepo.deleteUrl(\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\t\turlId: item.urlId!,\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \t);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t// if (apiResult.isSuccess) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \tsetListLoading(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \tsetUrls([]);\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \tgetUrls();\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \tmessage.success(\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\t\"Delete success\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t// } else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \tmessage.success(\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\t\"Delete Fail\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"red\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={\"large\"}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>,\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<List.Item.Meta\n\t\t\t\t\t\t\t\t\t\t\tavatar={\n\t\t\t\t\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`https://picsum.photos/200/300?random=${index}`}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmixpanel.track(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Dashboard_View_Graph_Editor_Click\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRoutePath.graph_editor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tapiKey: item.apiKey,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.url}\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tdescription=\"Click the link to the editor\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t\t</Skeleton>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={24} xl={12} className=\"dashboard_col\" span={6} />\n\t\t\t\t</Row>\n\t\t\t</Layout>\n\t\t</>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}