{"ast":null,"code":"// User model class\nexport class User {\n  // Account Type\n  // Organization Type\n  constructor(props) {\n    this.userId = void 0;\n    this.email = void 0;\n    this.password = void 0;\n    this.nickname = void 0;\n    this.phoneNo = void 0;\n    this.acctType = void 0;\n    this.packagePlan = void 0;\n    this.orgName = void 0;\n    this.userApiId = void 0;\n    this.userId = props.userId;\n    this.email = props.email;\n    this.password = props.password;\n    this.nickname = props.nickname;\n    this.phoneNo = props.phoneNo;\n    this.acctType = props.acctType;\n    this.packagePlan = props.packagePlan;\n    this.orgName = props.orgName;\n    this.userApiId = props.userApiId;\n  } // Convert the map into the User object\n\n\n  fromJson(json) {\n    this.userId = json.get(\"user_id\");\n    this.email = json.get(\"email\");\n    this.password = json.get(\"password\");\n    this.nickname = json.get(\"name\");\n    this.phoneNo = json.get(\"phone_num\");\n    this.acctType = json.get(\"acct_type\");\n    this.packagePlan = json.get(\"package_plan\");\n    this.orgName = json.get(\"org_name\");\n    this.userApiId = json.get(\"user_api_id\");\n    return this;\n  } // Convert User Object into map\n\n\n  toJson() {\n    let data = new Map();\n    data.set(\"userId\", this.userId);\n    data.set(\"email\", this.email);\n    data.set(\"password\", this.password);\n    data.set(\"name\", this.nickname);\n    data.set(\"phoneNum\", this.phoneNo);\n    data.set(\"acctType\", this.acctType);\n    data.set(\"packagePlan\", this.packagePlan);\n    data.set(\"orgName\", this.orgName);\n    data.set(\"userApiId\", this.userApiId);\n    return data;\n  }\n\n}\nexport class GetUserByIdResponse {\n  constructor(user) {\n    this.user = void 0;\n    this.user = user;\n  } // Convert JSON (containing list of data) to array\n\n\n  fromJson(json) {\n    if (json.get(\"User\") != null) {\n      this.user = [];\n      json.get(\"User\").forEach(v => {\n        var _this$user;\n\n        console.log(v);\n        (_this$user = this.user) === null || _this$user === void 0 ? void 0 : _this$user.push(new User({}).fromJson(new Map(Object.entries(v))));\n      });\n    }\n\n    return this.user;\n  }\n\n}","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/models/user_model.tsx"],"names":["User","constructor","props","userId","email","password","nickname","phoneNo","acctType","packagePlan","orgName","userApiId","fromJson","json","get","toJson","data","Map","set","GetUserByIdResponse","user","forEach","v","console","log","push","Object","entries"],"mappings":"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","sourcesContent":["// User model class\nexport class User {\n\tuserId?: string;\n\temail?: string;\n\tpassword?: string;\n\tnickname?: string;\n\tphoneNo?: string;\n\tacctType?: string; // Account Type\n\tpackagePlan?: string;\n\torgName?: string; // Organization Type\n\tuserApiId?: string;\n\n\tconstructor(props: {\n\t\tuserId?: string;\n\t\temail?: string;\n\t\tpassword?: string;\n\t\tnickname?: string;\n\t\tphoneNo?: string;\n\t\tacctType?: string;\n\t\tpackagePlan?: string;\n\t\torgName?: string;\n    userApiId?: string;\n\t}) {\n\t\tthis.userId = props.userId;\n\t\tthis.email = props.email;\n\t\tthis.password = props.password;\n\t\tthis.nickname = props.nickname;\n\t\tthis.phoneNo = props.phoneNo;\n\t\tthis.acctType = props.acctType;\n\t\tthis.packagePlan = props.packagePlan;\n\t\tthis.orgName = props.orgName;\n    this.userApiId = props.userApiId;\n\t}\n\n\t// Convert the map into the User object\n\tfromJson(json: Map<String, any>) {\n\t\tthis.userId = json.get(\"user_id\");\n\t\tthis.email = json.get(\"email\");\n\t\tthis.password = json.get(\"password\");\n\t\tthis.nickname = json.get(\"name\");\n\t\tthis.phoneNo = json.get(\"phone_num\");\n\t\tthis.acctType = json.get(\"acct_type\");\n\t\tthis.packagePlan = json.get(\"package_plan\");\n\t\tthis.orgName = json.get(\"org_name\");\n    this.userApiId = json.get(\"user_api_id\");\n\n\t\treturn this;\n\t}\n\n\t// Convert User Object into map\n\ttoJson() {\n\t\tlet data = new Map<String, any>();\n\t\tdata.set(\"userId\", this.userId);\n\t\tdata.set(\"email\", this.email);\n\t\tdata.set(\"password\", this.password);\n\t\tdata.set(\"name\", this.nickname);\n\t\tdata.set(\"phoneNum\", this.phoneNo);\n\t\tdata.set(\"acctType\", this.acctType);\n\t\tdata.set(\"packagePlan\", this.packagePlan);\n\t\tdata.set(\"orgName\", this.orgName);\n    data.set(\"userApiId\", this.userApiId);\n\n\t\treturn data;\n\t}\n}\n\nexport class GetUserByIdResponse {\n\tuser?: Array<User>;\n\n\tconstructor(user?: Array<User>) {\n\t\tthis.user = user;\n\t}\n\n\t// Convert JSON (containing list of data) to array\n\tfromJson(json: Map<String, any>) {\n\t\tif (json.get(\"User\") != null) {\n\t\t\tthis.user = [];\n\t\t\tjson.get(\"User\").forEach((v: Map<String, any>) => {\n\t\t\t\tconsole.log(v);\n\t\t\t\tthis.user?.push(\n\t\t\t\t\tnew User({}).fromJson(new Map(Object.entries(v)))\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\treturn this.user;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}