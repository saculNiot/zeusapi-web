{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/register/EmailVerification.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { Layout, Row, Col, Card, Form } from \"antd\";\nimport \"./Register.less\";\nimport \"antd-country-phone-input/dist/index.css\";\nimport { BackHeader, FormButton } from \"../../utils/components\";\nimport Title from \"antd/lib/typography/Title\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTimer } from \"react-timer-hook\";\nimport mixpanel from \"mixpanel-browser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EmailVerification = () => {\n  _s();\n\n  let history = useHistory();\n  const time = new Date();\n  time.setSeconds(time.getSeconds() + 60);\n  const {\n    seconds,\n    start,\n    restart\n  } = useTimer({\n    autoStart: false,\n    expiryTimestamp: time,\n    onExpire: () => {\n      // Show the button on expiring time\n      setBtn(true); // Reset the time to 60 seconds after the expiring time\n\n      restart(time, false);\n    }\n  }); // Get current sign in User\n\n  const user = useContext(AuthContext); // Is loading flag\n\n  const [isLoading, setLoading] = useState(false);\n  const [isBtnEnabled, setBtn] = useState(true);\n\n  const onFinish = async values => {\n    setLoading(true);\n    mixpanel.track(\"Email_Verification_Execute_Email_Verification_Click\"); // If user not found, then proceed to log in page\n\n    if (user) {\n      //If the meail has verified, proceed to home page\n      if (user === null || user === void 0 ? void 0 : user.emailVerified) history.replace(RoutePath.home);\n      await FirebaseServices.sendEmailVerification(user);\n      alert(\"Email verification has sent\"); // Start the timer\n\n      setBtn(false);\n      start();\n    } else {\n      history.replace(RoutePath.login);\n    }\n\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    className: \"layout\",\n    style: {\n      overflow: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      children: /*#__PURE__*/_jsxDEV(BackHeader, {\n        title: \"Email Verification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      className: \"emailverification_content\",\n      style: {\n        backgroundColor: \"white\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"register_form_row\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 8,\n          className: \"register_form_col\",\n          span: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 8,\n          className: \"register_form_col\",\n          span: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              name: \"register\",\n              className: \"register_form\",\n              initialValues: {\n                remember: true\n              },\n              onFinish: onFinish,\n              children: [/*#__PURE__*/_jsxDEV(Title, {\n                level: 4,\n                children: \"Email verification has sent to your mailbox.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"If not found, please check your junk mail.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this), isBtnEnabled ? /*#__PURE__*/_jsxDEV(Form.Item, {\n                children: /*#__PURE__*/_jsxDEV(FormButton, {\n                  title: \"Send Email Verification\",\n                  isLoading: isLoading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", \"Please send again in \", seconds, \" second if not found.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 8,\n          className: \"register_form_col\",\n          span: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EmailVerification, \"zovBjeyeUJ+A4X8xZc5coL3mlFM=\", false, function () {\n  return [useHistory, useTimer];\n});\n\n_c = EmailVerification;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailVerification\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/register/EmailVerification.tsx"],"names":["React","useContext","useState","Layout","Row","Col","Card","Form","BackHeader","FormButton","Title","FirebaseServices","AuthContext","RoutePath","useHistory","useTimer","mixpanel","EmailVerification","history","time","Date","setSeconds","getSeconds","seconds","start","restart","autoStart","expiryTimestamp","onExpire","setBtn","user","isLoading","setLoading","isBtnEnabled","onFinish","values","track","emailVerified","replace","home","sendEmailVerification","alert","login","overflow","backgroundColor","remember"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,IAAjC,QAA6C,MAA7C;AACA,OAAO,iBAAP;AACA,OAAO,yCAAP;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,wBAAvC;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,OAAO,MAAMC,iBAAgC,GAAG,MAAM;AAAA;;AAClD,MAAIC,OAAO,GAAGJ,UAAU,EAAxB;AAEA,QAAMK,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAD,EAAAA,IAAI,CAACE,UAAL,CAAgBF,IAAI,CAACG,UAAL,KAAoB,EAApC;AAEA,QAAM;AACFC,IAAAA,OADE;AAEFC,IAAAA,KAFE;AAGFC,IAAAA;AAHE,MAIFV,QAAQ,CAAC;AACTW,IAAAA,SAAS,EAAE,KADF;AAETC,IAAAA,eAAe,EAAER,IAFR;AAGTS,IAAAA,QAAQ,EAAE,MAAM;AACZ;AACAC,MAAAA,MAAM,CAAC,IAAD,CAAN,CAFY,CAGZ;;AACAJ,MAAAA,OAAO,CAACN,IAAD,EAAO,KAAP,CAAP;AACH;AARQ,GAAD,CAJZ,CANkD,CAqBlD;;AACA,QAAMW,IAAI,GAAG7B,UAAU,CAACW,WAAD,CAAvB,CAtBkD,CAwBlD;;AACA,QAAM,CAACmB,SAAD,EAAYC,UAAZ,IAA0B9B,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAAC+B,YAAD,EAAeJ,MAAf,IAAyB3B,QAAQ,CAAC,IAAD,CAAvC;;AAEA,QAAMgC,QAAQ,GAAG,MAAOC,MAAP,IAAuB;AACpCH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAhB,IAAAA,QAAQ,CAACoB,KAAT,CAAe,qDAAf,EAFoC,CAKpC;;AACA,QAAIN,IAAJ,EAAU;AACN;AACA,UAAIA,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEO,aAAV,EAAyBnB,OAAO,CAACoB,OAAR,CAAgBzB,SAAS,CAAC0B,IAA1B;AACzB,YAAM5B,gBAAgB,CAAC6B,qBAAjB,CAAuCV,IAAvC,CAAN;AACAW,MAAAA,KAAK,CAAC,6BAAD,CAAL,CAJM,CAKN;;AACAZ,MAAAA,MAAM,CAAC,KAAD,CAAN;AACAL,MAAAA,KAAK;AACR,KARD,MAQO;AACHN,MAAAA,OAAO,CAACoB,OAAR,CAAgBzB,SAAS,CAAC6B,KAA1B;AACH;;AAEDV,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAnBD;;AAqBA,sBACI,QAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAAEW,MAAAA,QAAQ,EAAE;AAAZ,KAAlC;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAA/B;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,2BAAlB;AAA8C,MAAA,KAAK,EAAE;AAAEA,QAAAA,eAAe,EAAE;AAAnB,OAArD;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACI,QAAC,GAAD;AACI,UAAA,EAAE,EAAE,EADR;AAEI,UAAA,EAAE,EAAE,CAFR;AAGI,UAAA,SAAS,EAAC,mBAHd;AAII,UAAA,IAAI,EAAE;AAJV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,EAAE,EAAE,CAAjB;AAAoB,UAAA,SAAS,EAAC,mBAA9B;AAAkD,UAAA,IAAI,EAAE,CAAxD;AAAA,iCACI,QAAC,IAAD;AAAA,mCACI,QAAC,IAAD;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,SAAS,EAAC,eAFd;AAGI,cAAA,aAAa,EAAE;AAAEC,gBAAAA,QAAQ,EAAE;AAAZ,eAHnB;AAII,cAAA,QAAQ,EAAEX,QAJd;AAAA,sCAMI,QAAC,KAAD;AAAO,gBAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ,EAYKD,YAAY,gBACT,QAAC,IAAD,CAAM,IAAN;AAAA,uCACI,QAAC,UAAD;AACI,kBAAA,KAAK,EAAC,yBADV;AAEI,kBAAA,SAAS,EAAEF;AAFf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADS,gBAQT;AAAA,2BACK,GADL,2BAE0BR,OAF1B;AAAA;AAAA;AAAA;AAAA;AAAA,sBApBR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAsCI,QAAC,GAAD;AACI,UAAA,EAAE,EAAE,EADR;AAEI,UAAA,EAAE,EAAE,CAFR;AAGI,UAAA,SAAS,EAAC,mBAHd;AAII,UAAA,IAAI,EAAE;AAJV;AAAA;AAAA;AAAA;AAAA,gBAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsDH,CAxGM;;GAAMN,iB;UACKH,U,EASVC,Q;;;KAVKE,iB","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Card, Form } from \"antd\";\nimport \"./Register.less\";\nimport \"antd-country-phone-input/dist/index.css\";\nimport { BackHeader, FormButton } from \"../../utils/components\";\nimport Title from \"antd/lib/typography/Title\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTimer } from \"react-timer-hook\";\nimport mixpanel from \"mixpanel-browser\";\n\nexport const EmailVerification: React.FC<any> = () => {\n    let history = useHistory();\n\n    const time = new Date();\n    time.setSeconds(time.getSeconds() + 60);\n\n    const {\n        seconds,\n        start,\n        restart,\n    } = useTimer({\n        autoStart: false,\n        expiryTimestamp: time,\n        onExpire: () => {\n            // Show the button on expiring time\n            setBtn(true);\n            // Reset the time to 60 seconds after the expiring time\n            restart(time, false);\n        },\n    });\n\n    // Get current sign in User\n    const user = useContext(AuthContext);\n\n    // Is loading flag\n    const [isLoading, setLoading] = useState(false);\n\n    const [isBtnEnabled, setBtn] = useState(true);\n\n    const onFinish = async (values: any) => {\n        setLoading(true);\n        mixpanel.track(\"Email_Verification_Execute_Email_Verification_Click\");\n\n\n        // If user not found, then proceed to log in page\n        if (user) {\n            //If the meail has verified, proceed to home page\n            if (user?.emailVerified) history.replace(RoutePath.home);\n            await FirebaseServices.sendEmailVerification(user);\n            alert(\"Email verification has sent\");\n            // Start the timer\n            setBtn(false);\n            start();\n        } else {\n            history.replace(RoutePath.login);\n        }\n\n        setLoading(false);\n    };\n\n    return (\n        <Layout className=\"layout\" style={{ overflow: \"auto\" }}>\n            <div className=\"navbar\" style={{ backgroundColor: \"#fff\" }}>\n                <BackHeader title=\"Email Verification\" />\n            </div>\n            <Layout className=\"emailverification_content\" style={{ backgroundColor: \"white\" }}>\n                <Row className=\"register_form_row\">\n                    <Col\n                        xs={24}\n                        xl={8}\n                        className=\"register_form_col\"\n                        span={8}\n                    />\n                    <Col xs={24} xl={8} className=\"register_form_col\" span={8}>\n                        <Card>\n                            <Form\n                                name=\"register\"\n                                className=\"register_form\"\n                                initialValues={{ remember: true }}\n                                onFinish={onFinish}\n                            >\n                                <Title level={4}>\n                                    Email verification has sent to your mailbox.\n                                </Title>\n                                <p>\n                                    If not found, please check your junk mail.\n                                </p>\n                                {isBtnEnabled ? (\n                                    <Form.Item>\n                                        <FormButton\n                                            title=\"Send Email Verification\"\n                                            isLoading={isLoading}\n                                        />\n                                    </Form.Item>\n                                ) : (\n                                    <p>\n                                        {\" \"}\n                                        Please send again in {seconds} second if\n                                        not found.\n                                    </p>\n                                )}\n                            </Form>\n                        </Card>\n                    </Col>\n                    <Col\n                        xs={24}\n                        xl={8}\n                        className=\"register_form_col\"\n                        span={8}\n                    />\n                </Row>\n            </Layout>\n        </Layout>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}