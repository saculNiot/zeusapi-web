{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/graph_display/GraphDisplay.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Layout, message, Spin } from \"antd\";\nimport RGL from \"react-grid-layout\";\nimport \"react-grid-layout/css/styles.css\";\nimport { SizeMe, withSize } from \"react-sizeme\";\nimport { MyBar } from \"../chartManager/BarChart\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport { UrlRepo } from \"../../services/api/repositories/url_repo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Resize the Grid Layout according to the parent widget\nconst withSizeHOC = withSize();\nconst ReactGridLayout = withSizeHOC(RGL);\n_c = ReactGridLayout;\nexport const GraphDisplay = () => {\n  _s();\n\n  // State of managing graph properties\n  const [_graphValues, setGraphValues] = useState([]);\n  const windowUrl = window.location.search;\n  let param = new URLSearchParams(windowUrl);\n  const [_isEditorLoading, setEditorLoading] = useState(true);\n  let urlRepo = new UrlRepo();\n  useEffect(() => {\n    async function initState() {\n      var _param$get;\n\n      let graphGetResult = await urlRepo.getGraphsByApiKey({\n        apiKey: (_param$get = param.get(\"apiKey\")) !== null && _param$get !== void 0 ? _param$get : \"\"\n      });\n\n      if (graphGetResult.isSuccess) {\n        graphGetResult.data.forEach(item => {\n          item[\"data_grid\"][\"static\"] = true;\n        });\n        setGraphValues(graphGetResult.data);\n      } else {\n        message.error(graphGetResult.message);\n      }\n\n      setEditorLoading(false);\n    }\n\n    initState();\n  }, [_graphValues, param, urlRepo]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    style: {\n      overflow: \"auto\",\n      minHeight: \"70vh\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      className: \"site-layout-background\",\n      style: {\n        padding: 0,\n        margin: 0,\n        alignItems: \"center\"\n      },\n      children: _isEditorLoading ? /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(SizeMe, {\n        children: ({\n          size\n        }) => /*#__PURE__*/_jsxDEV(ReactGridLayout, {\n          className: \"grid-layout\",\n          width: size.width,\n          rowHeight: size.width / 60,\n          cols: 30,\n          children: _graphValues.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              \"data-grid\": item.data_grid,\n              style: {\n                width: \"auto\",\n                border: \"1px solid #D3D3D3\",\n                padding: \"10px 10px 10px 10px\",\n                height: \"100px\" // To enable the chart responsive in height\n\n              },\n              children: /*#__PURE__*/_jsxDEV(MyBar, {\n                data: {\n                  key: item.key,\n                  main_chart_type: item.main_chart_type,\n                  title: item.title,\n                  dataSet: item.dataSet,\n                  dimension: item.dimension,\n                  data_grid: item.data_grid,\n                  chosen_schema: item.chosen_schema\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 12\n              }, this)\n            }, item.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 11\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n};\n\n_s(GraphDisplay, \"/wUsJoQS06WMxpZIY/q7RrAokLY=\");\n\n_c2 = GraphDisplay;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReactGridLayout\");\n$RefreshReg$(_c2, \"GraphDisplay\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/graph_display/GraphDisplay.tsx"],"names":["React","useEffect","useState","Layout","message","Spin","RGL","SizeMe","withSize","MyBar","Content","UrlRepo","withSizeHOC","ReactGridLayout","GraphDisplay","_graphValues","setGraphValues","windowUrl","window","location","search","param","URLSearchParams","_isEditorLoading","setEditorLoading","urlRepo","initState","graphGetResult","getGraphsByApiKey","apiKey","get","isSuccess","data","forEach","item","error","overflow","minHeight","width","padding","margin","alignItems","size","map","index","data_grid","border","height","key","main_chart_type","title","dataSet","dimension","chosen_schema"],"mappings":"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","sourcesContent":["import React, { ReactElement, useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, message, Spin } from \"antd\";\nimport RGL, { Responsive, WidthProvider } from \"react-grid-layout\";\nimport \"react-grid-layout/css/styles.css\";\nimport { SizeMe, withSize } from \"react-sizeme\";\nimport { DataProps, MyBar } from \"../chartManager/BarChart\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport { UrlRepo } from \"../../services/api/repositories/url_repo\";\nimport { ConfigParam } from \"../../services/api/models/url_model\";\n\n// Resize the Grid Layout according to the parent widget\nconst withSizeHOC = withSize();\nconst ReactGridLayout = withSizeHOC(RGL);\n\nexport const GraphDisplay: React.FC<any> = () => {\n\t// State of managing graph properties\n\tconst [_graphValues, setGraphValues] = useState<Array<DataProps[\"data\"]>>(\n\t\t[]\n\t);\n\tconst windowUrl = window.location.search;\n\tlet param = new URLSearchParams(windowUrl);\n\n\tconst [_isEditorLoading, setEditorLoading] = useState<boolean>(true);\n\n\tlet urlRepo = new UrlRepo();\n\n\tuseEffect(() => {\n\t\tasync function initState() {\n\t\t\tlet graphGetResult = await urlRepo.getGraphsByApiKey({\n\t\t\t\tapiKey: param.get(\"apiKey\") ?? \"\",\n\t\t\t});\n\t\t\tif (graphGetResult.isSuccess) {\n\t\t\t\tgraphGetResult.data.forEach((item: any) => {\n\t\t\t\t\titem[\"data_grid\"][\"static\"] = true;\n\t\t\t\t});\n\t\t\t\tsetGraphValues(graphGetResult.data);\n\t\t\t} else {\n\t\t\t\tmessage.error(graphGetResult.message);\n\t\t\t}\n\t\t\tsetEditorLoading(false);\n\t\t}\n\t\tinitState();\n\t}, [_graphValues, param, urlRepo]);\n\n\treturn (\n\t\t<Layout style={{ overflow: \"auto\", minHeight: \"70vh\",width:\"100%\" }}>\n\t\t\t<Content\n\t\t\t\tclassName=\"site-layout-background\"\n\t\t\t\tstyle={{\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\talignItems: \"center\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{_isEditorLoading ? (\n\t\t\t\t\t<Spin></Spin>\n\t\t\t\t) : (\n\t\t\t\t\t<SizeMe>\n\t\t\t\t\t\t{({ size }) => (\n\t\t\t\t\t\t\t<ReactGridLayout\n\t\t\t\t\t\t\t\tclassName=\"grid-layout\"\n\t\t\t\t\t\t\t\twidth={size.width as number}\n\t\t\t\t\t\t\t\trowHeight={(size.width as number) / 60}\n\t\t\t\t\t\t\t\tcols={30}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{_graphValues.map((item, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tkey={item.key}\n\t\t\t\t\t\t\t\t\t\t\tdata-grid={item.data_grid}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"auto\",\n\t\t\t\t\t\t\t\t\t\t\t\tborder: \"1px solid #D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: \"10px 10px 10px 10px\",\n\t\t\t\t\t\t\t\t\t\t\t\theight: \"100px\", // To enable the chart responsive in height\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<MyBar\n\t\t\t\t\t\t\t\t\t\t\t\tdata={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey: item.key,\n\t\t\t\t\t\t\t\t\t\t\t\t\tmain_chart_type:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.main_chart_type,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: item.title,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdataSet: item.dataSet,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdimension: item.dimension,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata_grid: item.data_grid,\n\t\t\t\t\t\t\t\t\t\t\t\t\tchosen_schema:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.chosen_schema,\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</ReactGridLayout>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</SizeMe>\n\t\t\t\t)}\n\t\t\t</Content>\n\t\t</Layout>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}