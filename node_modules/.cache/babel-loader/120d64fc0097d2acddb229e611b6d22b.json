{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/graph_editor/GraphEditor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Tooltip, Button, Layout, Menu, PageHeader, message, Dropdown, Spin, Modal } from \"antd\";\nimport { Button as ChakraButton } from \"@chakra-ui/react\";\nimport { BarChartOutlined, CopyOutlined, EditTwoTone, EyeTwoTone, HomeTwoTone, LeftCircleTwoTone, LineChartOutlined, PieChartOutlined, PlusCircleTwoTone, RightCircleTwoTone, SaveTwoTone } from \"@ant-design/icons\";\nimport \"./GraphEditor.less\";\nimport RGL from \"react-grid-layout\";\nimport \"react-grid-layout/css/styles.css\";\nimport { SizeMe, withSize } from \"react-sizeme\";\nimport { PageSider } from \"../sider/PageSider\";\nimport { UrlRepo } from \"../../services/api/repositories/url_repo\";\nimport { MyBar } from \"../chartManager/BarChart\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { GraphPreview } from \"../graph_display/GraphPreview\"; // Resize the Grid Layout according to the parent widget\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst withSizeHOC = withSize();\nconst ReactGridLayout = withSizeHOC(RGL);\n_c = ReactGridLayout;\nexport const GraphEditor = () => {\n  _s();\n\n  let location = useLocation();\n  let history = useHistory(); // Update the visibility of sider\n\n  const [_siderVisibility, setSiderVisibility] = useState(\"block\"); // Handle the data retrieved\n\n  const [_schemaField, setSchemaField] = useState([]); // State of managing graph properties\n\n  const [_graphValues, setGraphValues] = useState([]);\n  const [_configParam, setConfigParam] = useState([]);\n  const [_isSaving, setSaving] = useState(false);\n  const [_isPreviewVisible, setPreviewVisible] = useState(false);\n  const [_layouts, setlayouts] = useState([]);\n  const [_isEditorLoading, setEditorLoading] = useState(true); // Get the selected graph value from graph value array\n\n  const [_selectedGraph, setSelectedGraph] = useState();\n  const locationState = location.state;\n\n  const dropdownMenu = /*#__PURE__*/_jsxDEV(Menu, {\n    onClick: handleDropDown,\n    children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n      icon: /*#__PURE__*/_jsxDEV(BarChartOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 31\n      }, this),\n      children: \"Bar Chart\"\n    }, \"bar\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n      icon: /*#__PURE__*/_jsxDEV(LineChartOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 32\n      }, this),\n      children: \"Line Graph\"\n    }, \"line\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n      icon: /*#__PURE__*/_jsxDEV(PieChartOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 31\n      }, this),\n      children: \"Pie Chart\"\n    }, \"pie\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 3\n  }, this);\n\n  let urlRepo = new UrlRepo();\n\n  function onRemoveItemGridContent(key) {\n    // Filter is used to get all the graphs except the graph with the key value mentioned.\n    setGraphValues(_graphValues.filter(item => item.key !== key));\n  } // Add new graph\n\n\n  function handleDropDown(e) {\n    let key = uuidv4();\n    setGraphValues([..._graphValues, {\n      key: key,\n      main_chart_type: e.key,\n      title: \"\",\n      dataSet: [],\n      dimension: [],\n      data_grid: {\n        i: \"a\",\n        x: 0,\n        y: 0,\n        w: 10,\n        h: 5,\n        minW: 3,\n        minH: 3\n      },\n      chosen_schema: []\n    }]);\n    setSelectedGraph({\n      key: key,\n      main_chart_type: e.key,\n      title: \"\",\n      dataSet: [],\n      dimension: [],\n      data_grid: {\n        i: \"a\",\n        x: 0,\n        y: 0,\n        w: 10,\n        h: 5,\n        minW: 3,\n        minH: 3\n      },\n      chosen_schema: []\n    });\n  }\n\n  const saveGraph = async layouts => {\n    setSaving(true);\n    let apiResult = await urlRepo.saveGraph({\n      userApiId: locationState.userApiId,\n      apiKey: locationState.apiKey,\n      layouts: layouts,\n      graphs: _graphValues.map((item, index) => {\n        return {\n          // Temporary hardcode the array on dimensiion\n          label_name: item.title,\n          dimension_array: item.dimension.length > 0 ? [item.dimension[0][\"name\"]] : [],\n          metrics_operation_array: item.chosen_schema.length > 0 ? item.chosen_schema : [],\n          data_grid: layouts[index]\n        };\n      })\n    });\n    setSaving(false);\n    return apiResult.isSuccess;\n  }; // onKeyDown handler function\n\n\n  const keyDownHandler = async (event) => {\n    if (event.code === \"KeyS\" && event.ctrlKey) {\n      if (await saveGraph(_layouts)) {\n        message.success(\"Save successfuly\");\n      } else {\n        message.error(\"Save failure\");\n      }\n    }\n  };\n\n  async function onLayoutChange(e) {\n    let layouts = e;\n    setlayouts(layouts);\n  }\n\n  useEffect(() => {\n    // Confirmation dialog popup if any changes made in page\n    const unloadCallback = event => {\n      event.preventDefault();\n      event.returnValue = \"\";\n      return \"\";\n    };\n\n    window.addEventListener(\"beforeunload\", unloadCallback);\n    return () => window.removeEventListener(\"beforeunload\", unloadCallback);\n  }, []);\n  useEffect(() => {\n    async function initState() {\n      let apiResult = await urlRepo.getSchemaByApiKey({\n        apiKey: locationState.apiKey\n      });\n\n      if (apiResult.isSuccess) {\n        setSchemaField(apiResult.data);\n        let graphGetResult = await urlRepo.getGraphsByApiKey({\n          apiKey: locationState.apiKey\n        });\n\n        if (graphGetResult.isSuccess) {\n          setSelectedGraph(graphGetResult.data[graphGetResult.data.length - 1]);\n          setGraphValues(graphGetResult.data);\n        }\n      }\n\n      setEditorLoading(false);\n    }\n\n    initState();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    className: \"layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      children: /*#__PURE__*/_jsxDEV(PageHeader, {\n        ghost: false,\n        onBack: () => window.history.back(),\n        title: \"Graph Editor\",\n        extra: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          placement: \"topLeft\",\n          title: \"Save\",\n          children: /*#__PURE__*/_jsxDEV(ChakraButton, {\n            isLoading: _isSaving,\n            loadingText: \"Saving\",\n            colorScheme: \"teal\",\n            variant: \"outline\",\n            onClick: async () => {\n              if (await saveGraph(_layouts)) {\n                message.success(\"Save successfuly\");\n              } else {\n                message.error(\"Save failure\");\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(SaveTwoTone, {\n              twoToneColor: \"#52c41a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          placement: \"topLeft\",\n          title: \"Dashboard\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(HomeTwoTone, {\n              twoToneColor: \"#c175ff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this),\n            shape: \"round\",\n            size: \"large\",\n            onClick: () => {\n              history.push(RoutePath.dashboard);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          placement: \"topLeft\",\n          title: \"Edit Url\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(EditTwoTone, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this),\n            shape: \"round\",\n            size: \"large\",\n            onClick: () => {\n              history.push({\n                pathname: RoutePath.fill_url,\n                state: {\n                  apiKey: locationState.apiKey\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          placement: \"topLeft\",\n          title: \"Preview\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(EyeTwoTone, {\n              twoToneColor: \"#FFA500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this),\n            shape: \"round\",\n            size: \"large\",\n            onClick: async () => {\n              await saveGraph(_layouts);\n              let configParamResult = await urlRepo.getConfigParamByApiKey({\n                apiKey: locationState.apiKey\n              });\n\n              if (configParamResult.isSuccess) {\n                setConfigParam(configParamResult.data);\n              }\n\n              setPreviewVisible(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 8\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          overlay: dropdownMenu,\n          placement: \"bottomLeft\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(PlusCircleTwoTone, {\n              twoToneColor: \"#eb2f96\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 10\n            }, this),\n            shape: \"round\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          icon: _siderVisibility === \"block\" ? /*#__PURE__*/_jsxDEV(RightCircleTwoTone, {\n            twoToneColor: \"#4654A3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 10\n          }, this) : /*#__PURE__*/_jsxDEV(LeftCircleTwoTone, {\n            twoToneColor: \"#4654A3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 10\n          }, this),\n          shape: \"round\",\n          size: \"large\",\n          onClick: () => {\n            setSiderVisibility(_siderVisibility === \"block\" ? \"none\" : \"block\");\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 7\n        }, this)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      style: {\n        overflow: \"hidden\"\n      },\n      onKeyPress: keyDownHandler,\n      children: [/*#__PURE__*/_jsxDEV(Layout, {\n        style: {\n          overflow: \"hidden\",\n          padding: \"0 24px 24px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Layout, {\n          style: {\n            overflow: \"auto\",\n            minHeight: \"76vh\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Content, {\n            className: \"site-layout-background\",\n            style: {\n              padding: 0,\n              margin: 0,\n              alignItems: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Modal, {\n              title: \"Preview\",\n              centered: true,\n              visible: _isPreviewVisible,\n              onOk: () => setPreviewVisible(false),\n              onCancel: () => setPreviewVisible(false),\n              width: 1300,\n              destroyOnClose: true,\n              footer: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                placement: \"topLeft\",\n                title: \"Copy graph iframe\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  shape: \"round\",\n                  icon: /*#__PURE__*/_jsxDEV(CopyOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 18\n                  }, this),\n                  size: \"large\",\n                  onClick: () => {\n                    var _ref;\n\n                    // Merge all config params\n                    let mergedConfigParam = \"\";\n\n                    if (_configParam.length > 0) {\n                      _configParam === null || _configParam === void 0 ? void 0 : _configParam.forEach(item => {\n                        mergedConfigParam = `${mergedConfigParam}&${item.name}=${item.defaultValue}`;\n                      });\n                    }\n\n                    navigator.clipboard.writeText((_ref = `<iframe src='https://www.codagence.com/graph_display?apiKey=${locationState.apiKey}${mergedConfigParam}' style='height:200px;width:300px;' title='Iframe Example'></iframe>`) !== null && _ref !== void 0 ? _ref : \"Empty Url\");\n                    message.success(\"iframe is copied\");\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 10\n              }, this)],\n              children: /*#__PURE__*/_jsxDEV(GraphPreview, {\n                apiKey: locationState.apiKey\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 8\n            }, this), _isEditorLoading ? /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 9\n            }, this) : /*#__PURE__*/_jsxDEV(SizeMe, {\n              children: ({\n                size\n              }) => /*#__PURE__*/_jsxDEV(ReactGridLayout, {\n                className: \"grid-layout\",\n                width: size.width,\n                rowHeight: size.width / 60,\n                cols: 30,\n                onLayoutChange: onLayoutChange,\n                children: _graphValues.map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    \"data-grid\": item.data_grid,\n                    style: {\n                      width: \"auto\",\n                      border: _selectedGraph.key === item.key ? \"1px solid #4654A3\" : \"1px solid #D3D3D3\",\n                      padding: \"10px 10px 10px 10px\",\n                      height: \"100px\" // To enable the chart responsive in height\n\n                    },\n                    onClick: () => {\n                      setSelectedGraph(_graphValues[index]);\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(MyBar, {\n                      data: {\n                        key: item.key,\n                        main_chart_type: item.main_chart_type,\n                        title: item.title,\n                        dataSet: item.dataSet,\n                        dimension: item.dimension,\n                        data_grid: item.data_grid,\n                        chosen_schema: item.chosen_schema\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 428,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"remove\",\n                      style: {\n                        position: \"absolute\",\n                        right: \"2px\",\n                        top: 0,\n                        cursor: \"pointer\"\n                      },\n                      onClick: () => onRemoveItemGridContent(item.key),\n                      children: \"\\u2716\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 445,\n                      columnNumber: 15\n                    }, this)]\n                  }, item.key, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 14\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PageSider, {\n        siderVisibility: _siderVisibility,\n        toggleCollapsed: () => setSiderVisibility(_siderVisibility === \"block\" ? \"none\" : \"block\"),\n        setGraphValues: setGraphValues,\n        graphValues: _graphValues,\n        selectedGraph: _selectedGraph,\n        dataRows: _schemaField,\n        schemaField: _schemaField,\n        userApiId: locationState.userApiId,\n        apiKey: locationState.apiKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 3\n  }, this);\n};\n\n_s(GraphEditor, \"RogljNHA9idijk5oEADBypprry0=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c2 = GraphEditor;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReactGridLayout\");\n$RefreshReg$(_c2, \"GraphEditor\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/graph_editor/GraphEditor.tsx"],"names":["React","useEffect","useState","Tooltip","Button","Layout","Menu","PageHeader","message","Dropdown","Spin","Modal","ChakraButton","BarChartOutlined","CopyOutlined","EditTwoTone","EyeTwoTone","HomeTwoTone","LeftCircleTwoTone","LineChartOutlined","PieChartOutlined","PlusCircleTwoTone","RightCircleTwoTone","SaveTwoTone","RGL","SizeMe","withSize","PageSider","UrlRepo","MyBar","v4","uuidv4","Content","useHistory","useLocation","RoutePath","GraphPreview","withSizeHOC","ReactGridLayout","GraphEditor","location","history","_siderVisibility","setSiderVisibility","_schemaField","setSchemaField","_graphValues","setGraphValues","_configParam","setConfigParam","_isSaving","setSaving","_isPreviewVisible","setPreviewVisible","_layouts","setlayouts","_isEditorLoading","setEditorLoading","_selectedGraph","setSelectedGraph","locationState","state","dropdownMenu","handleDropDown","urlRepo","onRemoveItemGridContent","key","filter","item","e","main_chart_type","title","dataSet","dimension","data_grid","i","x","y","w","h","minW","minH","chosen_schema","saveGraph","layouts","apiResult","userApiId","apiKey","graphs","map","index","label_name","dimension_array","length","metrics_operation_array","isSuccess","keyDownHandler","event","code","ctrlKey","success","error","onLayoutChange","unloadCallback","preventDefault","returnValue","window","addEventListener","removeEventListener","initState","getSchemaByApiKey","data","graphGetResult","getGraphsByApiKey","backgroundColor","back","push","dashboard","pathname","fill_url","configParamResult","getConfigParamByApiKey","overflow","padding","minHeight","margin","alignItems","mergedConfigParam","forEach","name","defaultValue","navigator","clipboard","writeText","size","width","border","height","position","right","top","cursor"],"mappings":"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","sourcesContent":["import React, { ReactElement, useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport {\n\tTooltip,\n\tButton,\n\tLayout,\n\tMenu,\n\tTypography,\n\tPageHeader,\n\tmessage,\n\tDropdown,\n\tSpin,\n\tModal,\n} from \"antd\";\nimport { Button as ChakraButton } from \"@chakra-ui/react\";\nimport {\n\tBarChartOutlined,\n\tCopyOutlined,\n\tEditTwoTone,\n\tEyeTwoTone,\n\tHomeTwoTone,\n\tLeftCircleTwoTone,\n\tLeftSquareOutlined,\n\tLineChartOutlined,\n\tMenuOutlined,\n\tPieChartOutlined,\n\tPlusCircleTwoTone,\n\tRightCircleTwoTone,\n\tSaveTwoTone,\n} from \"@ant-design/icons\";\nimport \"./GraphEditor.less\";\nimport RGL, { Responsive, WidthProvider } from \"react-grid-layout\";\nimport \"react-grid-layout/css/styles.css\";\nimport { SizeMe, withSize } from \"react-sizeme\";\nimport { BackHeader } from \"../../utils/components\";\nimport { PageSider } from \"../sider/PageSider\";\nimport faker from \"@faker-js/faker\";\nimport { UrlRepo } from \"../../services/api/repositories/url_repo\";\nimport { ConfigParam, SchemaField } from \"../../services/api/models/url_model\";\nimport { DataProps, MyBar } from \"../chartManager/BarChart\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { GraphPreview } from \"../graph_display/GraphPreview\";\n\n// Resize the Grid Layout according to the parent widget\nconst withSizeHOC = withSize();\nconst ReactGridLayout = withSizeHOC(RGL);\n\nexport const GraphEditor: React.FC<any> = () => {\n\tlet location = useLocation();\n\n\tlet history = useHistory();\n\n\t// Update the visibility of sider\n\tconst [_siderVisibility, setSiderVisibility] = useState<string>(\"block\");\n\n\t// Handle the data retrieved\n\tconst [_schemaField, setSchemaField] = useState<Array<SchemaField>>([]);\n\n\t// State of managing graph properties\n\tconst [_graphValues, setGraphValues] = useState<Array<DataProps[\"data\"]>>(\n\t\t[]\n\t);\n\n\tconst [_configParam, setConfigParam] = useState<Array<ConfigParam>>([]);\n\n\tconst [_isSaving, setSaving] = useState<boolean>(false);\n\n\tconst [_isPreviewVisible, setPreviewVisible] = useState<boolean>(false);\n\n\tconst [_layouts, setlayouts] = useState<Array<any>>([]);\n\n\tconst [_isEditorLoading, setEditorLoading] = useState<boolean>(true);\n\n\t// Get the selected graph value from graph value array\n\tconst [_selectedGraph, setSelectedGraph] = useState<DataProps[\"data\"]>();\n\n\tconst locationState: any = location.state;\n\n\tconst dropdownMenu = (\n\t\t<Menu onClick={handleDropDown}>\n\t\t\t<Menu.Item key=\"bar\" icon={<BarChartOutlined />}>\n\t\t\t\tBar Chart\n\t\t\t</Menu.Item>\n\t\t\t<Menu.Item key=\"line\" icon={<LineChartOutlined />}>\n\t\t\t\tLine Graph\n\t\t\t</Menu.Item>\n\t\t\t<Menu.Item key=\"pie\" icon={<PieChartOutlined />}>\n\t\t\t\tPie Chart\n\t\t\t</Menu.Item>\n\t\t</Menu>\n\t);\n\n\tlet urlRepo = new UrlRepo();\n\n\tfunction onRemoveItemGridContent(key: string) {\n\t\t// Filter is used to get all the graphs except the graph with the key value mentioned.\n\t\tsetGraphValues(_graphValues.filter((item) => item.key !== key));\n\t}\n\n\t// Add new graph\n\tfunction handleDropDown(e: any) {\n\n\n\t\tlet key = uuidv4();\n\t\tsetGraphValues([\n\t\t\t..._graphValues,\n\t\t\t{\n\t\t\t\tkey: key,\n\t\t\t\tmain_chart_type: e.key,\n\t\t\t\ttitle: \"\",\n\t\t\t\tdataSet: [],\n\t\t\t\tdimension: [],\n\t\t\t\tdata_grid: {\n\t\t\t\t\ti: \"a\",\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\tw: 10,\n\t\t\t\t\th: 5,\n\t\t\t\t\tminW: 3,\n\t\t\t\t\tminH: 3,\n\t\t\t\t},\n\t\t\t\tchosen_schema: [],\n\t\t\t},\n\t\t]);\n\n\t\tsetSelectedGraph({\n\t\t\tkey: key,\n\t\t\tmain_chart_type: e.key,\n\t\t\ttitle: \"\",\n\t\t\tdataSet: [],\n\t\t\tdimension: [],\n\t\t\tdata_grid: {\n\t\t\t\ti: \"a\",\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tw: 10,\n\t\t\t\th: 5,\n\t\t\t\tminW: 3,\n\t\t\t\tminH: 3,\n\t\t\t},\n\t\t\tchosen_schema: [],\n\t\t});\n\t}\n\n\tconst saveGraph = async (layouts: any) => {\n\t\tsetSaving(true);\n\n\t\tlet apiResult = await urlRepo.saveGraph({\n\t\t\tuserApiId: locationState.userApiId,\n\t\t\tapiKey: locationState.apiKey,\n\t\t\tlayouts: layouts,\n\t\t\tgraphs: _graphValues.map((item, index) => {\n\t\t\t\treturn {\n\t\t\t\t\t// Temporary hardcode the array on dimensiion\n\t\t\t\t\tlabel_name: item.title,\n\t\t\t\t\tdimension_array:\n\t\t\t\t\t\titem.dimension.length > 0\n\t\t\t\t\t\t\t? [item.dimension[0][\"name\"]]\n\t\t\t\t\t\t\t: [],\n\t\t\t\t\tmetrics_operation_array:\n\t\t\t\t\t\titem.chosen_schema.length > 0 ? item.chosen_schema : [],\n\t\t\t\t\tdata_grid: layouts[index],\n\t\t\t\t};\n\t\t\t}),\n\t\t});\n\t\tsetSaving(false);\n\n\t\treturn apiResult.isSuccess;\n\t};\n\n\t// onKeyDown handler function\n\tconst keyDownHandler = async (\n\t\tevent: React.KeyboardEvent<HTMLDivElement>\n\t) => {\n\t\tif (event.code === \"KeyS\" && event.ctrlKey) {\n\t\t\tif (await saveGraph(_layouts)) {\n\n\t\t\t\tmessage.success(\"Save successfuly\");\n\t\t\t} else {\n\t\t\t\tmessage.error(\"Save failure\");\n\t\t\t}\n\t\t}\n\t};\n\n\tasync function onLayoutChange(e: Array<any>) {\n\t\tlet layouts = e;\n\t\tsetlayouts(layouts);\n\t}\n\n\tuseEffect(() => {\n\t\t// Confirmation dialog popup if any changes made in page\n\t\tconst unloadCallback = (event: any) => {\n\t\t\tevent.preventDefault();\n\t\t\tevent.returnValue = \"\";\n\t\t\treturn \"\";\n\t\t};\n\n\t\twindow.addEventListener(\"beforeunload\", unloadCallback);\n\t\treturn () => window.removeEventListener(\"beforeunload\", unloadCallback);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tasync function initState() {\n\t\t\tlet apiResult = await urlRepo.getSchemaByApiKey({\n\t\t\t\tapiKey: locationState.apiKey,\n\t\t\t});\n\n\t\t\tif (apiResult.isSuccess) {\n\t\t\t\tsetSchemaField(apiResult.data);\n\t\t\t\tlet graphGetResult = await urlRepo.getGraphsByApiKey({\n\t\t\t\t\tapiKey: locationState.apiKey,\n\t\t\t\t});\n\t\t\t\tif (graphGetResult.isSuccess) {\n\t\t\t\t\tsetSelectedGraph(\n\t\t\t\t\t\tgraphGetResult.data[graphGetResult.data.length - 1]\n\t\t\t\t\t);\n\t\t\t\t\tsetGraphValues(graphGetResult.data);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetEditorLoading(false);\n\t\t}\n\n\t\tinitState();\n\t}, []);\n\n\treturn (\n\t\t<Layout className=\"layout\">\n\t\t\t<div className=\"navbar\" style={{ backgroundColor: \"#fff\" }}>\n\t\t\t\t<PageHeader\n\t\t\t\t\tghost={false}\n\t\t\t\t\tonBack={() => window.history.back()}\n\t\t\t\t\ttitle=\"Graph Editor\"\n\t\t\t\t\textra={[\n\t\t\t\t\t\t<Tooltip placement=\"topLeft\" title=\"Save\">\n\t\t\t\t\t\t\t<ChakraButton\n\t\t\t\t\t\t\t\tisLoading={_isSaving}\n\t\t\t\t\t\t\t\tloadingText=\"Saving\"\n\t\t\t\t\t\t\t\tcolorScheme=\"teal\"\n\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\tif (await saveGraph(_layouts)) {\n\t\t\t\t\t\t\t\t\t\tmessage.success(\"Save successfuly\");\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tmessage.error(\"Save failure\");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<SaveTwoTone twoToneColor=\"#52c41a\" />\n\t\t\t\t\t\t\t</ChakraButton>\n\t\t\t\t\t\t</Tooltip>,\n\t\t\t\t\t\t<Tooltip placement=\"topLeft\" title=\"Dashboard\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ticon={<HomeTwoTone twoToneColor=\"#c175ff\" />}\n\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\thistory.push(RoutePath.dashboard);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></Button>\n\t\t\t\t\t\t</Tooltip>,\n\t\t\t\t\t\t<Tooltip placement=\"topLeft\" title=\"Edit Url\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ticon={<EditTwoTone />}\n\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\thistory.push({\n\t\t\t\t\t\t\t\t\t\tpathname: RoutePath.fill_url,\n\t\t\t\t\t\t\t\t\t\tstate: { apiKey: locationState.apiKey },\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></Button>\n\t\t\t\t\t\t</Tooltip>,\n\n\t\t\t\t\t\t<Tooltip placement=\"topLeft\" title=\"Preview\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ticon={<EyeTwoTone twoToneColor=\"#FFA500\" />}\n\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tawait saveGraph(_layouts);\n\t\t\t\t\t\t\t\t\tlet configParamResult =\n\t\t\t\t\t\t\t\t\t\tawait urlRepo.getConfigParamByApiKey({\n\t\t\t\t\t\t\t\t\t\t\tapiKey: locationState.apiKey,\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tif (configParamResult.isSuccess) {\n\t\t\t\t\t\t\t\t\t\tsetConfigParam(configParamResult.data);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsetPreviewVisible(true);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></Button>{\" \"}\n\t\t\t\t\t\t</Tooltip>,\n\t\t\t\t\t\t<Dropdown overlay={dropdownMenu} placement=\"bottomLeft\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t<PlusCircleTwoTone twoToneColor=\"#eb2f96\" />\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t></Button>\n\t\t\t\t\t\t</Dropdown>,\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t_siderVisibility === \"block\" ? (\n\t\t\t\t\t\t\t\t\t<RightCircleTwoTone twoToneColor=\"#4654A3\" />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<LeftCircleTwoTone twoToneColor=\"#4654A3\" />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsetSiderVisibility(\n\t\t\t\t\t\t\t\t\t_siderVisibility === \"block\"\n\t\t\t\t\t\t\t\t\t\t? \"none\"\n\t\t\t\t\t\t\t\t\t\t: \"block\"\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></Button>,\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Layout style={{ overflow: \"hidden\" }} onKeyPress={keyDownHandler}>\n\t\t\t\t<Layout style={{ overflow: \"hidden\", padding: \"0 24px 24px\" }}>\n\t\t\t\t\t<Layout style={{ overflow: \"auto\", minHeight: \"76vh\" }}>\n\t\t\t\t\t\t<Content\n\t\t\t\t\t\t\tclassName=\"site-layout-background\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\ttitle=\"Preview\"\n\t\t\t\t\t\t\t\tcentered\n\t\t\t\t\t\t\t\tvisible={_isPreviewVisible}\n\t\t\t\t\t\t\t\tonOk={() => setPreviewVisible(false)}\n\t\t\t\t\t\t\t\tonCancel={() => setPreviewVisible(false)}\n\t\t\t\t\t\t\t\twidth={1300}\n\t\t\t\t\t\t\t\tdestroyOnClose={true}\n\t\t\t\t\t\t\t\tfooter={[\n\t\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\t\tplacement=\"topLeft\"\n\t\t\t\t\t\t\t\t\t\ttitle=\"Copy graph iframe\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\t\t\ticon={<CopyOutlined />}\n\t\t\t\t\t\t\t\t\t\t\tsize={\"large\"}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t// Merge all config params\n\t\t\t\t\t\t\t\t\t\t\t\tlet mergedConfigParam = \"\";\n\t\t\t\t\t\t\t\t\t\t\t\tif (_configParam.length > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t_configParam?.forEach(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(item) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmergedConfigParam = `${mergedConfigParam}&${item.name}=${item.defaultValue}`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tnavigator.clipboard.writeText(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`<iframe src='https://www.codagence.com/graph_display?apiKey=${locationState.apiKey}${mergedConfigParam}' style='height:200px;width:300px;' title='Iframe Example'></iframe>` ??\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Empty Url\"\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tmessage.success(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"iframe is copied\"\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Tooltip>,\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<GraphPreview\n\t\t\t\t\t\t\t\t\tapiKey={locationState.apiKey}\n\t\t\t\t\t\t\t\t></GraphPreview>\n\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t{_isEditorLoading ? (\n\t\t\t\t\t\t\t\t<Spin></Spin>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<SizeMe>\n\t\t\t\t\t\t\t\t\t{({ size }) => (\n\t\t\t\t\t\t\t\t\t\t<ReactGridLayout\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"grid-layout\"\n\t\t\t\t\t\t\t\t\t\t\twidth={size.width as number}\n\t\t\t\t\t\t\t\t\t\t\trowHeight={\n\t\t\t\t\t\t\t\t\t\t\t\t(size.width as number) / 60\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcols={30}\n\t\t\t\t\t\t\t\t\t\t\tonLayoutChange={onLayoutChange}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{_graphValues.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={item.key}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-grid={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.data_grid\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: \"auto\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_selectedGraph!\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.key ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.key\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"1px solid #4654A3\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"1px solid #D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"10px 10px 10px 10px\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: \"100px\", // To enable the chart responsive in height\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedGraph(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_graphValues[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MyBar\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey: item.key,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmain_chart_type:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.main_chart_type,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: item.title,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataSet:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.dataSet,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdimension:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.dimension,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata_grid:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.data_grid,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchosen_schema:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.chosen_schema,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tposition:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"absolute\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tright: \"2px\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonRemoveItemGridContent(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.key\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&#10006;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</ReactGridLayout>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</SizeMe>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Content>\n\t\t\t\t\t</Layout>\n\t\t\t\t</Layout>\n\t\t\t\t<PageSider\n\t\t\t\t\tsiderVisibility={_siderVisibility}\n\t\t\t\t\ttoggleCollapsed={() =>\n\t\t\t\t\t\tsetSiderVisibility(\n\t\t\t\t\t\t\t_siderVisibility === \"block\" ? \"none\" : \"block\"\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\tsetGraphValues={setGraphValues}\n\t\t\t\t\tgraphValues={_graphValues}\n\t\t\t\t\tselectedGraph={_selectedGraph}\n\t\t\t\t\tdataRows={_schemaField}\n\t\t\t\t\tschemaField={_schemaField}\n\t\t\t\t\tuserApiId={locationState.userApiId}\n\t\t\t\t\tapiKey={locationState.apiKey}\n\t\t\t\t/>\n\t\t\t</Layout>\n\t\t</Layout>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}