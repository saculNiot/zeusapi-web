{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/payment/CheckoutPayment.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./CheckoutPayment.less\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { CheckCircleIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport { Box, Button, Flex, Heading, Text } from \"@chakra-ui/react\";\nimport { Space } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CheckoutPayment = ({}) => {\n  _s();\n\n  const location = useLocation();\n  const history = useHistory();\n  const [checkOutStatus, setCheckoutStatus] = useState();\n\n  const onFinish = async () => {\n    setLoading(true);\n    history.replace(RoutePath.home);\n    setLoading(false);\n  }; // Is loading flag\n\n\n  const [isLoading, setLoading] = useState(false);\n  useEffect(() => {\n    // Get the parameter value from url\n    const data = new URLSearchParams(location.search).get(\"status\");\n    setCheckoutStatus(data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    textAlign: \"center\",\n    py: 10,\n    px: 6,\n    children: /*#__PURE__*/_jsxDEV(Space, {\n      children: [checkOutStatus === \"success\" ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n        boxSize: \"50px\",\n        color: \"green.500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        display: \"inline-block\",\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          bg: \"red.500\",\n          rounded: \"50px\",\n          w: \"55px\",\n          h: \"55px\",\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            boxSize: \"20px\",\n            color: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h2\",\n        size: \"xl\",\n        mt: 6,\n        mb: 2,\n        children: [\"Payment \", checkOutStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"gray.500\",\n        children: \"Please return to the main page.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        display: {\n          base: \"none\",\n          md: \"inline-flex\"\n        },\n        fontSize: \"sm\",\n        fontWeight: 600,\n        color: \"white\",\n        bg: \"#270949\",\n        _hover: {\n          bg: \"#4654A3\"\n        },\n        onClick: () => {\n          history.replace(RoutePath.default);\n        },\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CheckoutPayment, \"s5aWAzspLXAM0uY98qbIRTQT4qQ=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = CheckoutPayment;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutPayment\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/payment/CheckoutPayment.tsx"],"names":["React","useEffect","useState","useHistory","useLocation","RoutePath","CheckCircleIcon","CloseIcon","Box","Button","Flex","Heading","Text","Space","CheckoutPayment","location","history","checkOutStatus","setCheckoutStatus","onFinish","setLoading","replace","home","isLoading","data","URLSearchParams","search","get","base","md","bg","default"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,wBAAP;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AAEA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,kBAA3C;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,OAA5B,EAAqCC,IAArC,QAAiD,kBAAjD;AACA,SAASC,KAAT,QAAsB,MAAtB;;AAIA,OAAO,MAAMC,eAA+C,GAAG,CAAC,EAAD,KAAQ;AAAA;;AACtE,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAMY,OAAO,GAAGb,UAAU,EAA1B;AAEA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,EAApD;;AAEA,QAAMiB,QAAQ,GAAG,YAAY;AAC5BC,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAJ,IAAAA,OAAO,CAACK,OAAR,CAAgBhB,SAAS,CAACiB,IAA1B;AAEAF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,GAND,CAPsE,CAetE;;;AACA,QAAM,CAACG,SAAD,EAAYH,UAAZ,IAA0BlB,QAAQ,CAAC,KAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf;AACA,UAAMuB,IAAS,GAAG,IAAIC,eAAJ,CAAoBV,QAAQ,CAACW,MAA7B,EAAqCC,GAArC,CAAyC,QAAzC,CAAlB;AACAT,IAAAA,iBAAiB,CAACM,IAAD,CAAjB;AACA,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACC,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,EAAE,EAAE,EAA5B;AAAgC,IAAA,EAAE,EAAE,CAApC;AAAA,2BACC,QAAC,KAAD;AAAA,iBACEP,cAAc,KAAK,SAAnB,gBACA,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAE,MAA1B;AAAkC,QAAA,KAAK,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA,cADA,gBAGA,QAAC,GAAD;AAAK,QAAA,OAAO,EAAC,cAAb;AAAA,+BACC,QAAC,IAAD;AACC,UAAA,aAAa,EAAC,QADf;AAEC,UAAA,cAAc,EAAC,QAFhB;AAGC,UAAA,UAAU,EAAC,QAHZ;AAIC,UAAA,EAAE,EAAE,SAJL;AAKC,UAAA,OAAO,EAAE,MALV;AAMC,UAAA,CAAC,EAAE,MANJ;AAOC,UAAA,CAAC,EAAE,MAPJ;AAQC,UAAA,SAAS,EAAC,QARX;AAAA,iCAUC,QAAC,SAAD;AAAW,YAAA,OAAO,EAAE,MAApB;AAA4B,YAAA,KAAK,EAAE;AAAnC;AAAA;AAAA;AAAA;AAAA;AAVD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAJF,eAmBC,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,IAAZ;AAAiB,QAAA,IAAI,EAAC,IAAtB;AAA2B,QAAA,EAAE,EAAE,CAA/B;AAAkC,QAAA,EAAE,EAAE,CAAtC;AAAA,+BACUA,cADV;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBD,eAsBC,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBD,eAuBC,QAAC,MAAD;AACC,QAAA,OAAO,EAAE;AAAEW,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,EAAE,EAAE;AAApB,SADV;AAEC,QAAA,QAAQ,EAAE,IAFX;AAGC,QAAA,UAAU,EAAE,GAHb;AAIC,QAAA,KAAK,EAAE,OAJR;AAKC,QAAA,EAAE,EAAE,SALL;AAMC,QAAA,MAAM,EAAE;AACPC,UAAAA,EAAE,EAAE;AADG,SANT;AASC,QAAA,OAAO,EAAE,MAAM;AACdd,UAAAA,OAAO,CAACK,OAAR,CAAgBhB,SAAS,CAAC0B,OAA1B;AACA,SAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AA2CA,CAnEM;;GAAMjB,e;UACKV,W,EAEDD,U;;;KAHJW,e","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./CheckoutPayment.less\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport { RoutePath } from \"../../utils/routePath\";\nimport { CheckCircleIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport { Box, Button, Flex, Heading, Text } from \"@chakra-ui/react\";\nimport { Space } from \"antd\";\n\ninterface CheckoutPaymentProps {}\n\nexport const CheckoutPayment: React.FC<CheckoutPaymentProps> = ({}) => {\n\tconst location = useLocation();\n\n\tconst history = useHistory();\n\n\tconst [checkOutStatus, setCheckoutStatus] = useState<any>();\n\n\tconst onFinish = async () => {\n\t\tsetLoading(true);\n\n\t\thistory.replace(RoutePath.home);\n\n\t\tsetLoading(false);\n\t};\n\n\t// Is loading flag\n\tconst [isLoading, setLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\t// Get the parameter value from url\n\t\tconst data: any = new URLSearchParams(location.search).get(\"status\");\n\t\tsetCheckoutStatus(data);\n\t}, []);\n\n\treturn (\n\t\t<Box textAlign=\"center\" py={10} px={6}>\n\t\t\t<Space>\n\t\t\t\t{checkOutStatus === \"success\" ? (\n\t\t\t\t\t<CheckCircleIcon boxSize={\"50px\"} color={\"green.500\"} />\n\t\t\t\t) : (\n\t\t\t\t\t<Box display=\"inline-block\">\n\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\tflexDirection=\"column\"\n\t\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\t\tbg={\"red.500\"}\n\t\t\t\t\t\t\trounded={\"50px\"}\n\t\t\t\t\t\t\tw={\"55px\"}\n\t\t\t\t\t\t\th={\"55px\"}\n\t\t\t\t\t\t\ttextAlign=\"center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CloseIcon boxSize={\"20px\"} color={\"white\"} />\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t\t<Heading as=\"h2\" size=\"xl\" mt={6} mb={2}>\n\t\t\t\t\tPayment {checkOutStatus}\n\t\t\t\t</Heading>\n\t\t\t\t<Text color={\"gray.500\"}>Please return to the main page.</Text>\n\t\t\t\t<Button\n\t\t\t\t\tdisplay={{ base: \"none\", md: \"inline-flex\" }}\n\t\t\t\t\tfontSize={\"sm\"}\n\t\t\t\t\tfontWeight={600}\n\t\t\t\t\tcolor={\"white\"}\n\t\t\t\t\tbg={\"#270949\"}\n\t\t\t\t\t_hover={{\n\t\t\t\t\t\tbg: \"#4654A3\",\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\thistory.replace(RoutePath.default);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tHome\n\t\t\t\t</Button>\n\t\t\t</Space>\n\t\t</Box>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}