{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/home/NewsLetter.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Stack, FormControl, Input, Button, useColorModeValue, Heading, Text, Container, Flex } from '@chakra-ui/react';\nimport { CheckIcon } from '@chakra-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewsLetter() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [state, setState] = useState('initial');\n  const [error, setError] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    minH: '100vh',\n    align: 'center',\n    justify: 'center',\n    bg: useColorModeValue('gray.50', 'gray.800'),\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxW: 'lg',\n      bg: useColorModeValue('white', 'whiteAlpha.100'),\n      boxShadow: 'xl',\n      rounded: 'lg',\n      p: 6,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: 'h2',\n        fontSize: {\n          base: 'xl',\n          sm: '2xl'\n        },\n        textAlign: 'center',\n        mb: 5,\n        children: \"Subscribe to our Newsletter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: {\n          base: 'column',\n          md: 'row'\n        },\n        as: 'form',\n        spacing: '12px',\n        onSubmit: e => {\n          e.preventDefault();\n          setError(false);\n          setState('submitting'); // remove this code and implement your submit logic right here\n\n          setTimeout(() => {\n            if (email === 'fail@example.com') {\n              setError(true);\n              setState('initial');\n              return;\n            }\n\n            setState('success');\n          }, 1000);\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            variant: 'solid',\n            borderWidth: 1,\n            color: 'gray.800',\n            _placeholder: {\n              color: 'gray.400'\n            },\n            borderColor: useColorModeValue('gray.300', 'gray.700'),\n            id: 'email',\n            type: 'email',\n            required: true,\n            placeholder: 'Your Email',\n            \"aria-label\": 'Your Email',\n            value: email,\n            disabled: state !== 'initial',\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          w: {\n            base: '100%',\n            md: '40%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: state === 'success' ? 'green' : 'blue',\n            isLoading: state === 'submitting',\n            w: \"100%\",\n            type: state === 'success' ? 'button' : 'submit',\n            children: state === 'success' ? /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 40\n            }, this) : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mt: 2,\n        textAlign: 'center',\n        color: error ? 'red.500' : 'gray.500',\n        children: error ? 'Oh no an error occured! üò¢ Please try again later.' : \"You won't receive any spam! ‚úåÔ∏è\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n}\n\n_s(NewsLetter, \"z/Dg9V8d5FtURZyxWy8rzQiGZ38=\", false, function () {\n  return [useColorModeValue, useColorModeValue, useColorModeValue];\n});\n\n_c = NewsLetter;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsLetter\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/home/NewsLetter.tsx"],"names":["useState","Stack","FormControl","Input","Button","useColorModeValue","Heading","Text","Container","Flex","CheckIcon","NewsLetter","email","setEmail","state","setState","error","setError","base","sm","md","e","preventDefault","setTimeout","color","target","value"],"mappings":"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","sourcesContent":["import { FormEvent, ChangeEvent, useState } from 'react';\nimport {\n  Stack,\n  FormControl,\n  Input,\n  Button,\n  useColorModeValue,\n  Heading,\n  Text,\n  Container,\n  Flex,\n} from '@chakra-ui/react';\nimport { CheckIcon } from '@chakra-ui/icons';\n\nexport default function NewsLetter() {\n    const [email, setEmail] = useState('');\n    const [state, setState] = useState<'initial' | 'submitting' | 'success'>(\n      'initial'\n    );\n    const [error, setError] = useState(false);\n  \n    return (\n      <Flex\n        minH={'100vh'}\n        align={'center'}\n        justify={'center'}\n        bg={useColorModeValue('gray.50', 'gray.800')}>\n        <Container\n          maxW={'lg'}\n          bg={useColorModeValue('white', 'whiteAlpha.100')}\n          boxShadow={'xl'}\n          rounded={'lg'}\n          p={6}>\n          <Heading\n            as={'h2'}\n            fontSize={{ base: 'xl', sm: '2xl' }}\n            textAlign={'center'}\n            mb={5}>\n            Subscribe to our Newsletter\n          </Heading>\n          <Stack\n            direction={{ base: 'column', md: 'row' }}\n            as={'form'}\n            spacing={'12px'}\n            onSubmit={(e: FormEvent) => {\n              e.preventDefault();\n              setError(false);\n              setState('submitting');\n  \n              // remove this code and implement your submit logic right here\n              setTimeout(() => {\n                if (email === 'fail@example.com') {\n                  setError(true);\n                  setState('initial');\n                  return;\n                }\n  \n                setState('success');\n              }, 1000);\n            }}>\n            <FormControl>\n              <Input\n                variant={'solid'}\n                borderWidth={1}\n                color={'gray.800'}\n                _placeholder={{\n                  color: 'gray.400',\n                }}\n                borderColor={useColorModeValue('gray.300', 'gray.700')}\n                id={'email'}\n                type={'email'}\n                required\n                placeholder={'Your Email'}\n                aria-label={'Your Email'}\n                value={email}\n                disabled={state !== 'initial'}\n                onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                  setEmail(e.target.value)\n                }\n              />\n            </FormControl>\n            <FormControl w={{ base: '100%', md: '40%' }}>\n              <Button\n                colorScheme={state === 'success' ? 'green' : 'blue'}\n                isLoading={state === 'submitting'}\n                w=\"100%\"\n                type={state === 'success' ? 'button' : 'submit'}>\n                {state === 'success' ? <CheckIcon /> : 'Submit'}\n              </Button>\n            </FormControl>\n          </Stack>\n          <Text\n            mt={2}\n            textAlign={'center'}\n            color={error ? 'red.500' : 'gray.500'}>\n            {error\n              ? 'Oh no an error occured! üò¢ Please try again later.'\n              : \"You won't receive any spam! ‚úåÔ∏è\"}\n          </Text>\n        </Container>\n      </Flex>\n    );\n  }"]},"metadata":{},"sourceType":"module"}