{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/graph_display/GraphDisplay.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Layout, message, Spin } from \"antd\";\nimport RGL from \"react-grid-layout\";\nimport \"react-grid-layout/css/styles.css\";\nimport { withSize } from \"react-sizeme\";\nimport { MyBar } from \"../chartManager/BarChart\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport { UrlRepo } from \"../../services/api/repositories/url_repo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Resize the Grid Layout according to the parent widget\nconst withSizeHOC = withSize();\nconst ReactGridLayout = withSizeHOC(RGL);\n_c = ReactGridLayout;\nexport const GraphDisplay = () => {\n  _s();\n\n  // State of managing graph properties\n  const [_graphValues, setGraphValues] = useState([]);\n  const windowUrl = window.location.search;\n  let param = new URLSearchParams(windowUrl);\n  const [_isEditorLoading, setEditorLoading] = useState(true);\n  let urlRepo = new UrlRepo();\n  useEffect(() => {\n    async function initState() {\n      var _param$get;\n\n      let graphGetResult = await urlRepo.getGraphsByApiKey({\n        apiKey: (_param$get = param.get(\"apiKey\")) !== null && _param$get !== void 0 ? _param$get : \"\"\n      });\n\n      if (graphGetResult.isSuccess) {\n        graphGetResult.data.forEach(item => {\n          item[\"data_grid\"][\"static\"] = true;\n        });\n        setGraphValues(graphGetResult.data);\n      } else {\n        message.error(graphGetResult.message);\n      }\n\n      setEditorLoading(false);\n    }\n\n    initState();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    style: {\n      overflow: \"auto\",\n      minHeight: \"70vh\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      className: \"site-layout-background\",\n      style: {\n        padding: 0,\n        margin: 0,\n        alignItems: \"center\"\n      },\n      children: _isEditorLoading ? /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 6\n      }, this) : _graphValues.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-grid\": item.data_grid,\n          style: {\n            width: \"auto\",\n            border: \"1px solid #D3D3D3\",\n            padding: \"10px 10px 10px 10px\",\n            height: \"100px\" // To enable the chart responsive in height\n\n          },\n          children: /*#__PURE__*/_jsxDEV(MyBar, {\n            data: {\n              key: item.key,\n              main_chart_type: item.main_chart_type,\n              title: item.title,\n              dataSet: item.dataSet,\n              dimension: item.dimension,\n              data_grid: item.data_grid,\n              chosen_schema: item.chosen_schema\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }, this)\n        }, item.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 8\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n};\n\n_s(GraphDisplay, \"/wUsJoQS06WMxpZIY/q7RrAokLY=\");\n\n_c2 = GraphDisplay;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReactGridLayout\");\n$RefreshReg$(_c2, \"GraphDisplay\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/graph_display/GraphDisplay.tsx"],"names":["React","useEffect","useState","Layout","message","Spin","RGL","withSize","MyBar","Content","UrlRepo","withSizeHOC","ReactGridLayout","GraphDisplay","_graphValues","setGraphValues","windowUrl","window","location","search","param","URLSearchParams","_isEditorLoading","setEditorLoading","urlRepo","initState","graphGetResult","getGraphsByApiKey","apiKey","get","isSuccess","data","forEach","item","error","overflow","minHeight","width","padding","margin","alignItems","map","index","data_grid","border","height","key","main_chart_type","title","dataSet","dimension","chosen_schema"],"mappings":";;;AAAA,OAAOA,KAAP,IAA8BC,SAA9B,EAAyCC,QAAzC,QAAyD,OAAzD;AAEA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,QAAsC,MAAtC;AACA,OAAOC,GAAP,MAA+C,mBAA/C;AACA,OAAO,kCAAP;AACA,SAAiBC,QAAjB,QAAiC,cAAjC;AACA,SAAoBC,KAApB,QAAiC,0BAAjC;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,OAAT,QAAwB,0CAAxB;;AAGA;AACA,MAAMC,WAAW,GAAGJ,QAAQ,EAA5B;AACA,MAAMK,eAAe,GAAGD,WAAW,CAACL,GAAD,CAAnC;KAAMM,e;AAEN,OAAO,MAAMC,YAA2B,GAAG,MAAM;AAAA;;AAChD;AACA,QAAM,CAACC,YAAD,EAAeC,cAAf,IAAiCb,QAAQ,CAC9C,EAD8C,CAA/C;AAGA,QAAMc,SAAS,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAAlC;AACA,MAAIC,KAAK,GAAG,IAAIC,eAAJ,CAAoBL,SAApB,CAAZ;AAEA,QAAM,CAACM,gBAAD,EAAmBC,gBAAnB,IAAuCrB,QAAQ,CAAU,IAAV,CAArD;AAEA,MAAIsB,OAAO,GAAG,IAAId,OAAJ,EAAd;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACf,mBAAewB,SAAf,GAA2B;AAAA;;AAC1B,UAAIC,cAAc,GAAG,MAAMF,OAAO,CAACG,iBAAR,CAA0B;AACpDC,QAAAA,MAAM,gBAAER,KAAK,CAACS,GAAN,CAAU,QAAV,CAAF,mDAAyB;AADqB,OAA1B,CAA3B;;AAIA,UAAIH,cAAc,CAACI,SAAnB,EAA8B;AAE7BJ,QAAAA,cAAc,CAACK,IAAf,CAAoBC,OAApB,CAA6BC,IAAD,IAAe;AAE1CA,UAAAA,IAAI,CAAC,WAAD,CAAJ,CAAkB,QAAlB,IAA8B,IAA9B;AACA,SAHD;AAKAlB,QAAAA,cAAc,CAACW,cAAc,CAACK,IAAhB,CAAd;AAEA,OATD,MASO;AACN3B,QAAAA,OAAO,CAAC8B,KAAR,CAAcR,cAAc,CAACtB,OAA7B;AACA;;AACDmB,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA;;AACDE,IAAAA,SAAS;AACT,GArBQ,EAqBN,EArBM,CAAT;AAuBA,sBACC,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,SAAS,EAAE,MAA/B;AAAsCC,MAAAA,KAAK,EAAC;AAA5C,KAAf;AAAA,2BACC,QAAC,OAAD;AACC,MAAA,SAAS,EAAC,wBADX;AAEC,MAAA,KAAK,EAAE;AACNC,QAAAA,OAAO,EAAE,CADH;AAENC,QAAAA,MAAM,EAAE,CAFF;AAGNC,QAAAA,UAAU,EAAE;AAHN,OAFR;AAAA,gBAQElB,gBAAgB,gBAChB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADgB,GAGhBR,YAAY,CAAC2B,GAAb,CAAiB,CAACR,IAAD,EAAOS,KAAP,KAAiB;AACjC,4BACC;AAEC,uBAAWT,IAAI,CAACU,SAFjB;AAGC,UAAA,KAAK,EAAE;AACNN,YAAAA,KAAK,EAAE,MADD;AAENO,YAAAA,MAAM,EAAE,mBAFF;AAGNN,YAAAA,OAAO,EAAE,qBAHH;AAINO,YAAAA,MAAM,EAAE,OAJF,CAIW;;AAJX,WAHR;AAAA,iCAUC,QAAC,KAAD;AACC,YAAA,IAAI,EAAE;AACLC,cAAAA,GAAG,EAAEb,IAAI,CAACa,GADL;AAELC,cAAAA,eAAe,EACdd,IAAI,CAACc,eAHD;AAILC,cAAAA,KAAK,EAAEf,IAAI,CAACe,KAJP;AAKLC,cAAAA,OAAO,EAAEhB,IAAI,CAACgB,OALT;AAMLC,cAAAA,SAAS,EAAEjB,IAAI,CAACiB,SANX;AAOLP,cAAAA,SAAS,EAAEV,IAAI,CAACU,SAPX;AAQLQ,cAAAA,aAAa,EACZlB,IAAI,CAACkB;AATD;AADP;AAAA;AAAA;AAAA;AAAA;AAVD,WACMlB,IAAI,CAACa,GADX;AAAA;AAAA;AAAA;AAAA,gBADD;AA0BA,OA3BD;AAXF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AA6CA,CAhFM;;GAAMjC,Y;;MAAAA,Y","sourcesContent":["import React, { ReactElement, useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, message, Spin } from \"antd\";\nimport RGL, { Responsive, WidthProvider } from \"react-grid-layout\";\nimport \"react-grid-layout/css/styles.css\";\nimport { SizeMe, withSize } from \"react-sizeme\";\nimport { DataProps, MyBar } from \"../chartManager/BarChart\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport { UrlRepo } from \"../../services/api/repositories/url_repo\";\nimport { ConfigParam } from \"../../services/api/models/url_model\";\n\n// Resize the Grid Layout according to the parent widget\nconst withSizeHOC = withSize();\nconst ReactGridLayout = withSizeHOC(RGL);\n\nexport const GraphDisplay: React.FC<any> = () => {\n\t// State of managing graph properties\n\tconst [_graphValues, setGraphValues] = useState<Array<DataProps[\"data\"]>>(\n\t\t[]\n\t);\n\tconst windowUrl = window.location.search;\n\tlet param = new URLSearchParams(windowUrl);\n\n\tconst [_isEditorLoading, setEditorLoading] = useState<boolean>(true);\n\n\tlet urlRepo = new UrlRepo();\n\n\tuseEffect(() => {\n\t\tasync function initState() {\n\t\t\tlet graphGetResult = await urlRepo.getGraphsByApiKey({\n\t\t\t\tapiKey: param.get(\"apiKey\") ?? \"\",\n\t\t\t});\n\n\t\t\tif (graphGetResult.isSuccess) {\n\n\t\t\t\tgraphGetResult.data.forEach((item: any) => {\n\n\t\t\t\t\titem[\"data_grid\"][\"static\"] = true;\n\t\t\t\t});\n\n\t\t\t\tsetGraphValues(graphGetResult.data);\n\n\t\t\t} else {\n\t\t\t\tmessage.error(graphGetResult.message);\n\t\t\t}\n\t\t\tsetEditorLoading(false);\n\t\t}\n\t\tinitState();\n\t}, []);\n\n\treturn (\n\t\t<Layout style={{ overflow: \"auto\", minHeight: \"70vh\",width:\"100%\" }}>\n\t\t\t<Content\n\t\t\t\tclassName=\"site-layout-background\"\n\t\t\t\tstyle={{\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\talignItems: \"center\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{_isEditorLoading ? (\n\t\t\t\t\t<Spin></Spin>\n\t\t\t\t) : (\n\t\t\t\t\t_graphValues.map((item, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={item.key}\n\t\t\t\t\t\t\t\tdata-grid={item.data_grid}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\twidth: \"auto\",\n\t\t\t\t\t\t\t\t\tborder: \"1px solid #D3D3D3\",\n\t\t\t\t\t\t\t\t\tpadding: \"10px 10px 10px 10px\",\n\t\t\t\t\t\t\t\t\theight: \"100px\", // To enable the chart responsive in height\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MyBar\n\t\t\t\t\t\t\t\t\tdata={{\n\t\t\t\t\t\t\t\t\t\tkey: item.key,\n\t\t\t\t\t\t\t\t\t\tmain_chart_type:\n\t\t\t\t\t\t\t\t\t\t\titem.main_chart_type,\n\t\t\t\t\t\t\t\t\t\ttitle: item.title,\n\t\t\t\t\t\t\t\t\t\tdataSet: item.dataSet,\n\t\t\t\t\t\t\t\t\t\tdimension: item.dimension,\n\t\t\t\t\t\t\t\t\t\tdata_grid: item.data_grid,\n\t\t\t\t\t\t\t\t\t\tchosen_schema:\n\t\t\t\t\t\t\t\t\t\t\titem.chosen_schema,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t)}\n\t\t\t</Content>\n\t\t</Layout>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}