{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/role/CreateRole.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { FillForm } from \"../../utils/components\";\nimport { FormLabel, Button as ChakraButton, Text } from \"@chakra-ui/react\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Form, Input, message, Space } from \"antd\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { RoleRepo } from \"../../services/api/repositories/role_repo\";\nimport { Role } from \"../../services/api/models/role_model\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CreateRole = () => {\n  _s();\n\n  let location = useLocation();\n  let history = useHistory();\n  const locationState = location.state;\n  const [form] = Form.useForm();\n  const roleRepo = new RoleRepo();\n  const [_roleData, setRoleData] = useState();\n  const [_isFormLoading, setFormLoading] = useState(true);\n\n  const children = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: \"Please input the name of the role\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Name\",\n        style: {\n          width: \"50%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Attribute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.List, {\n        name: \"attribute\",\n        children: (fields, {\n          add,\n          remove\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [fields.map(({\n            key,\n            name,\n            ...restField\n          }) => /*#__PURE__*/_jsxDEV(Space, {\n            style: {\n              display: \"flex\",\n              marginBottom: 8\n            },\n            align: \"baseline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...restField,\n              name: [name, \"key\"],\n              rules: [{\n                required: true,\n                message: \"Missing attribute key\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Attribute Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...restField,\n              name: [name, \"value\"],\n              rules: [{\n                required: true,\n                message: \"Missing attribute value\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Attribute value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {\n              onClick: () => remove(name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 10\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }, this)), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(ChakraButton, {\n              variant: \"outline\",\n              onClick: () => add(),\n              leftIcon: /*#__PURE__*/_jsxDEV(PlusOutlined, {\n                color: \"blue.400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 20\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                color: \"blue.400\",\n                children: \"Add Attribute\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n\n  const onSubmit = async values => {\n    let userId = await LocalStorage.getUserID();\n    let apiResult = await roleRepo.saveRole({\n      history: history,\n      roleId: locationState !== undefined ? locationState.roleId : null,\n      createdById: userId !== null && userId !== void 0 ? userId : \"\",\n      name: values[\"name\"],\n      attribute: values[\"attribute\"]\n    });\n\n    if (apiResult.isSuccess) {\n      message.success(\"Role has created\");\n      locationState !== undefined ? history.replace(RoutePath.dashboard) : form.resetFields();\n    } else {\n      message.error(\"Fail to save\");\n    }\n  };\n\n  useEffect(() => {\n    async function initState() {\n      if (locationState !== undefined) {\n        let apiResult = await roleRepo.getRoleById({\n          history: history,\n          roleId: locationState.roleId\n        });\n\n        if (apiResult.isSuccess) {\n          setRoleData(new Role({\n            name: apiResult.data[0].name,\n            attribute: apiResult.data[0].attribute\n          }));\n        }\n      }\n\n      setFormLoading(false);\n    }\n\n    initState();\n    return () => {\n      setRoleData(new Role({}));\n    };\n  }, []); // Set Initial Values Using State in antd form\n\n  useEffect(() => {\n    form.resetFields();\n  }, [_roleData]);\n  return /*#__PURE__*/_jsxDEV(FillForm, {\n    formComponents: children,\n    title: \"Role Details\",\n    subtitle: \"Please fill in the name of the role\",\n    initialValue: {\n      name: _roleData === null || _roleData === void 0 ? void 0 : _roleData.name\n    },\n    form: form,\n    onSubmit: onSubmit,\n    isFormLoading: _isFormLoading,\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CreateRole, \"wM83KP2Kdrc/uDTJjLM4tj5r+mE=\", false, function () {\n  return [useLocation, useHistory, Form.useForm];\n});\n\n_c = CreateRole;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRole\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/role/CreateRole.tsx"],"names":["React","useEffect","useState","FillForm","FormLabel","Button","ChakraButton","Text","MinusCircleOutlined","PlusOutlined","Form","Input","message","Space","LocalStorage","RoleRepo","Role","useHistory","useLocation","RoutePath","CreateRole","location","history","locationState","state","form","useForm","roleRepo","_roleData","setRoleData","_isFormLoading","setFormLoading","children","required","width","fields","add","remove","map","key","name","restField","display","marginBottom","onSubmit","values","userId","getUserID","apiResult","saveRole","roleId","undefined","createdById","attribute","isSuccess","success","replace","dashboard","resetFields","error","initState","getRoleById","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FillForm } from \"../../utils/components\";\nimport { FormLabel, Button as ChakraButton, Text } from \"@chakra-ui/react\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Form, Input, message, Space } from \"antd\";\nimport { ClientRepo } from \"../../services/api/repositories/client_repo\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { RoleRepo } from \"../../services/api/repositories/role_repo\";\nimport { Role } from \"../../services/api/models/role_model\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\n\nexport const CreateRole: React.FC<any> = () => {\n\tlet location = useLocation();\n\tlet history = useHistory();\n\n\tconst locationState: any = location.state;\n\tconst [form] = Form.useForm();\n\tconst roleRepo = new RoleRepo();\n\tconst [_roleData, setRoleData] = useState<Role>();\n\tconst [_isFormLoading, setFormLoading] = useState<boolean>(true);\n\tconst children = (\n\t\t<>\n\t\t\t<FormLabel>Name</FormLabel>\n\t\t\t<Form.Item\n\t\t\t\tname=\"name\"\n\t\t\t\trules={[\n\t\t\t\t\t{\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"Please input the name of the role\",\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Input placeholder=\"Name\" style={{ width: \"50%\" }} />\n\t\t\t</Form.Item>\n\t\t\t<>\n\t\t\t\t<FormLabel>Attribute</FormLabel>\n\t\t\t\t<Form.List name=\"attribute\">\n\t\t\t\t\t{(fields, { add, remove }) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{fields.map(({ key, name, ...restField }) => (\n\t\t\t\t\t\t\t\t<Space\n\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\tmarginBottom: 8,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\talign=\"baseline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t{...restField}\n\t\t\t\t\t\t\t\t\t\tname={[name, \"key\"]}\n\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Missing attribute key\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input placeholder=\"Attribute Value\" />\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t{...restField}\n\t\t\t\t\t\t\t\t\t\tname={[name, \"value\"]}\n\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Missing attribute value\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input placeholder=\"Attribute value\" />\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t<MinusCircleOutlined\n\t\t\t\t\t\t\t\t\t\tonClick={() => remove(name)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Space>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t<ChakraButton\n\t\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\t\tonClick={() => add()}\n\t\t\t\t\t\t\t\t\tleftIcon={<PlusOutlined color=\"blue.400\" />}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Text color=\"blue.400\">Add Attribute</Text>\n\t\t\t\t\t\t\t\t</ChakraButton>\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Form.List>\n\t\t\t</>\n\t\t</>\n\t);\n\n\tconst onSubmit = async (values: any) => {\n\t\tlet userId = await LocalStorage.getUserID();\n\t\tlet apiResult = await roleRepo.saveRole({\n\t\t\thistory: history,\n\t\t\troleId: locationState !== undefined ? locationState.roleId : null,\n\t\t\tcreatedById: userId ?? \"\",\n\t\t\tname: values[\"name\"],\n\t\t\tattribute: values[\"attribute\"],\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tmessage.success(\"Role has created\");\n\t\t\tlocationState !== undefined\n\t\t\t\t? history.replace(RoutePath.dashboard)\n\t\t\t\t: form.resetFields();\n\t\t} else {\n\t\t\tmessage.error(\"Fail to save\");\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tasync function initState() {\n\t\t\tif (locationState !== undefined) {\n\t\t\t\tlet apiResult = await roleRepo.getRoleById({\n\t\t\t\t\thistory: history,\n\t\t\t\t\troleId: locationState.roleId!,\n\t\t\t\t});\n\t\t\t\tif (apiResult.isSuccess) {\n\t\t\t\t\tsetRoleData(\n\t\t\t\t\t\tnew Role({\n\t\t\t\t\t\t\tname: apiResult.data[0].name,\n\t\t\t\t\t\t\tattribute: apiResult.data[0].attribute,\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetFormLoading(false);\n\t\t}\n\n\t\tinitState();\n\n\t\treturn () => {\n\t\t\tsetRoleData(new Role({}));\n\t\t};\n\t}, []);\n\n\t// Set Initial Values Using State in antd form\n\tuseEffect(() => {\n\t\tform.resetFields();\n\t}, [_roleData]);\n\n\treturn (\n\t\t<FillForm\n\t\t\tformComponents={children}\n\t\t\ttitle={\"Role Details\"}\n\t\t\tsubtitle={\"Please fill in the name of the role\"}\n\t\t\tinitialValue={{ name: _roleData?.name }}\n\t\t\tform={form}\n\t\t\tonSubmit={onSubmit}\n\t\t\tisFormLoading={_isFormLoading}\n\t\t>\n\t\t\t{\" \"}\n\t\t</FillForm>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}