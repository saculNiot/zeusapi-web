{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/role/CreateRole.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { FillForm } from \"../../utils/components\";\nimport { FormLabel } from \"@chakra-ui/react\";\nimport { Form, Input, message } from \"antd\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { RoleRepo } from \"../../services/api/repositories/role_repo\";\nimport { Role } from \"../../services/api/models/role_model\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CreateRole = () => {\n  _s();\n\n  let location = useLocation();\n  let history = useHistory();\n  const locationState = location.state;\n  const [form] = Form.useForm();\n  const roleRepo = new RoleRepo();\n  const [_roleData, setRoleData] = useState();\n  const [_isFormLoading, setFormLoading] = useState(true);\n\n  const children = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: \"Please input the name of the role\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Name\",\n        style: {\n          width: \"50%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n\n  const onSubmit = async values => {\n    let userId = await LocalStorage.getUserID();\n    let apiResult = await roleRepo.saveRole({\n      history: history,\n      roleId: locationState !== undefined ? locationState.roleId : null,\n      createdById: userId !== null && userId !== void 0 ? userId : \"\",\n      name: values[\"name\"]\n    });\n\n    if (apiResult.isSuccess) {\n      message.success(\"Role has created\");\n      locationState !== undefined ? history.replace(RoutePath.dashboard) : form.resetFields();\n    } else {\n      message.error(\"Fail to save\");\n    }\n  };\n\n  useEffect(() => {\n    async function initState() {\n      if (locationState !== undefined) {\n        let apiResult = await roleRepo.getRoleById({\n          history: history,\n          roleId: locationState.roleId\n        });\n\n        if (apiResult.isSuccess) {\n          setRoleData(new Role({\n            name: apiResult.data[0].name\n          }));\n        }\n      }\n\n      setFormLoading(false);\n    }\n\n    initState();\n    return () => {\n      setRoleData(new Role({}));\n    };\n  }, []); // Set Initial Values Using State in antd form\n\n  useEffect(() => {\n    form.resetFields();\n  }, [_roleData]);\n  return /*#__PURE__*/_jsxDEV(FillForm, {\n    formComponents: children,\n    title: \"Role Details\",\n    subtitle: \"Please fill in the name of the role\",\n    initialValue: {\n      name: _roleData === null || _roleData === void 0 ? void 0 : _roleData.name\n    },\n    form: form,\n    onSubmit: onSubmit,\n    isFormLoading: _isFormLoading,\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CreateRole, \"wM83KP2Kdrc/uDTJjLM4tj5r+mE=\", false, function () {\n  return [useLocation, useHistory, Form.useForm];\n});\n\n_c = CreateRole;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRole\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/role/CreateRole.tsx"],"names":["React","useEffect","useState","FillForm","FormLabel","Form","Input","message","LocalStorage","RoleRepo","Role","useHistory","useLocation","RoutePath","CreateRole","location","history","locationState","state","form","useForm","roleRepo","_roleData","setRoleData","_isFormLoading","setFormLoading","children","required","width","onSubmit","values","userId","getUserID","apiResult","saveRole","roleId","undefined","createdById","name","isSuccess","success","replace","dashboard","resetFields","error","initState","getRoleById","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FillForm } from \"../../utils/components\";\nimport { FormLabel, Button as ChakraButton, Text } from \"@chakra-ui/react\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Form, Input, message, Space } from \"antd\";\nimport { ClientRepo } from \"../../services/api/repositories/client_repo\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { RoleRepo } from \"../../services/api/repositories/role_repo\";\nimport { Role } from \"../../services/api/models/role_model\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\n\nexport const CreateRole: React.FC<any> = () => {\n\tlet location = useLocation();\n\tlet history = useHistory();\n\n\tconst locationState: any = location.state;\n\tconst [form] = Form.useForm();\n\tconst roleRepo = new RoleRepo();\n\tconst [_roleData, setRoleData] = useState<Role>();\n\tconst [_isFormLoading, setFormLoading] = useState<boolean>(true);\n\tconst children = (\n\t\t<>\n\t\t\t<FormLabel>Name</FormLabel>\n\t\t\t<Form.Item\n\t\t\t\tname=\"name\"\n\t\t\t\trules={[\n\t\t\t\t\t{\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"Please input the name of the role\",\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Input placeholder=\"Name\" style={{ width: \"50%\" }} />\n\t\t\t</Form.Item>\n\t\t</>\n\t);\n\n\tconst onSubmit = async (values: any) => {\n\t\tlet userId = await LocalStorage.getUserID();\n\t\tlet apiResult = await roleRepo.saveRole({\n\t\t\thistory:history,\n\t\t\troleId:\n\t\t\t\tlocationState !== undefined ? locationState.roleId : null,\n\t\t\tcreatedById: userId ?? \"\",\n\t\t\tname: values[\"name\"],\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tmessage.success(\"Role has created\");\n\t\t\tlocationState !== undefined\n\t\t\t\t? history.replace(RoutePath.dashboard)\n\t\t\t\t: form.resetFields();\n\t\t} else {\n\t\t\tmessage.error(\"Fail to save\");\n\t\t}\n\t};\n\n\n\tuseEffect(() => {\n\t\tasync function initState() {\n\t\t\tif (locationState !== undefined) {\n\t\t\t\tlet apiResult = await roleRepo.getRoleById({\n\t\t\t\t\thistory:history,\n\t\t\t\t\troleId: locationState.roleId!,\n\t\t\t\t});\n\t\t\t\tif (apiResult.isSuccess) {\n\t\t\t\t\tsetRoleData(\n\t\t\t\t\t\tnew Role({\n\t\t\t\t\t\t\tname: apiResult.data[0].name,\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetFormLoading(false);\n\t\t}\n\n\t\tinitState();\n\n\t\treturn () => {\n\t\t\tsetRoleData(new Role({}));\n\t\t};\n\t}, []);\n\n\t// Set Initial Values Using State in antd form\n\tuseEffect(() => {\n\t\tform.resetFields();\n\t}, [_roleData]);\n\n\treturn (\n\t\t<FillForm\n\t\t\tformComponents={children}\n\t\t\ttitle={\"Role Details\"}\n\t\t\tsubtitle={\"Please fill in the name of the role\"}\n\t\t\tinitialValue={{name:_roleData?.name}}\n\t\t\tform={form}\n\t\t\tonSubmit={onSubmit}\n\t\t\tisFormLoading={_isFormLoading}\n\t\t>\n\t\t\t{\" \"}\n\t\t</FillForm>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}