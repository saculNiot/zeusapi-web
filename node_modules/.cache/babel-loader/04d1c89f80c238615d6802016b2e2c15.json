{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/chartManager/BarChart.tsx\";\nimport React from \"react\";\nimport { ChartColor } from \"./ChartColor\";\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyBar = ({\n  data\n}) => {\n  var _data$dimension$;\n\n  const config = (item, index) => {\n    switch (item.graph_type) {\n      case \"bar\":\n        return {\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: ChartColor.colorOptions[index],\n          borderColor: \"white\",\n          borderWidth: 2\n        };\n\n      case \"line\":\n        return {\n          fill: false,\n          lineTension: 0.5,\n          borderColor: ChartColor.colorOptions[index],\n          borderWidth: 2\n        };\n\n      case \"pie\":\n        return {\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: ChartColor.colorOptions,\n          borderColor: \"white\",\n          borderWidth: 1\n        };\n\n      default:\n        return {\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: ChartColor.colorOptions[index],\n          borderColor: \"white\"\n        };\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    type: data.main_chart_type,\n    redraw: true,\n    data: {\n      labels: (_data$dimension$ = data.dimension[0]) === null || _data$dimension$ === void 0 ? void 0 : _data$dimension$.data,\n      datasets: data.dataSet.map((item, index) => {\n        return { ...config(item, index),\n          label: item.label,\n          data: item.metrics,\n          type: item.graph_type\n        };\n      })\n    },\n    options: {\n      plugins: {\n        legend: {\n          display: true,\n          position: \"right\"\n        },\n        title: {\n          display: data.title === undefined || data.title === \"\" ? false : true,\n          text: data.title\n        }\n      },\n      maintainAspectRatio: false,\n      responsive: true\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }, this);\n};\n_c = MyBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyBar\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/chartManager/BarChart.tsx"],"names":["React","ChartColor","Chart","MyBar","data","config","item","index","graph_type","fill","lineTension","backgroundColor","colorOptions","borderColor","borderWidth","main_chart_type","labels","dimension","datasets","dataSet","map","label","metrics","type","plugins","legend","display","position","title","undefined","text","maintainAspectRatio","responsive"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AA0BA,OAAO,MAAMC,KAA0B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AACvD,QAAMC,MAAM,GAAG,CACdC,IADc,EAEdC,KAFc,KAGV;AACJ,YAAQD,IAAI,CAACE,UAAb;AACC,WAAK,KAAL;AACC,eAAO;AACNC,UAAAA,IAAI,EAAE,KADA;AAENC,UAAAA,WAAW,EAAE,GAFP;AAGNC,UAAAA,eAAe,EAAEV,UAAU,CAACW,YAAX,CAAwBL,KAAxB,CAHX;AAINM,UAAAA,WAAW,EAAE,OAJP;AAKNC,UAAAA,WAAW,EAAE;AALP,SAAP;;AAQD,WAAK,MAAL;AACC,eAAO;AACNL,UAAAA,IAAI,EAAE,KADA;AAENC,UAAAA,WAAW,EAAE,GAFP;AAGNG,UAAAA,WAAW,EAAEZ,UAAU,CAACW,YAAX,CAAwBL,KAAxB,CAHP;AAINO,UAAAA,WAAW,EAAE;AAJP,SAAP;;AAMD,WAAK,KAAL;AACC,eAAO;AACNL,UAAAA,IAAI,EAAE,KADA;AAENC,UAAAA,WAAW,EAAE,GAFP;AAGNC,UAAAA,eAAe,EAAEV,UAAU,CAACW,YAHtB;AAINC,UAAAA,WAAW,EAAE,OAJP;AAKNC,UAAAA,WAAW,EAAE;AALP,SAAP;;AAQD;AACC,eAAO;AACNL,UAAAA,IAAI,EAAE,KADA;AAENC,UAAAA,WAAW,EAAE,GAFP;AAGNC,UAAAA,eAAe,EAAEV,UAAU,CAACW,YAAX,CAAwBL,KAAxB,CAHX;AAINM,UAAAA,WAAW,EAAE;AAJP,SAAP;AA3BF;AAkCA,GAtCD;;AAwCA,sBACC,QAAC,KAAD;AACC,IAAA,IAAI,EAAET,IAAI,CAACW,eADZ;AAEC,IAAA,MAAM,EAAE,IAFT;AAGC,IAAA,IAAI,EAAE;AACLC,MAAAA,MAAM,sBAAEZ,IAAI,CAACa,SAAL,CAAe,CAAf,CAAF,qDAAE,iBAAmBb,IADtB;AAELc,MAAAA,QAAQ,EAAEd,IAAI,CAACe,OAAL,CAAaC,GAAb,CAAiB,CAACd,IAAD,EAAOC,KAAP,KAAiB;AAC3C,eAAO,EACN,GAAGF,MAAM,CAACC,IAAD,EAAOC,KAAP,CADH;AAENc,UAAAA,KAAK,EAAEf,IAAI,CAACe,KAFN;AAGNjB,UAAAA,IAAI,EAAEE,IAAI,CAACgB,OAHL;AAINC,UAAAA,IAAI,EAAEjB,IAAI,CAACE;AAJL,SAAP;AAMA,OAPS;AAFL,KAHP;AAcC,IAAA,OAAO,EAAE;AACRgB,MAAAA,OAAO,EAAE;AACRC,QAAAA,MAAM,EAAE;AACPC,UAAAA,OAAO,EAAE,IADF;AAEPC,UAAAA,QAAQ,EAAE;AAFH,SADA;AAKRC,QAAAA,KAAK,EAAE;AACNF,UAAAA,OAAO,EACNtB,IAAI,CAACwB,KAAL,KAAeC,SAAf,IAA4BzB,IAAI,CAACwB,KAAL,KAAe,EAA3C,GACG,KADH,GAEG,IAJE;AAKNE,UAAAA,IAAI,EAAE1B,IAAI,CAACwB;AALL;AALC,OADD;AAcRG,MAAAA,mBAAmB,EAAE,KAdb;AAeRC,MAAAA,UAAU,EAAE;AAfJ;AAdV;AAAA;AAAA;AAAA;AAAA,UADD;AAkCA,CA3EM;KAAM7B,K","sourcesContent":["import React from \"react\";\nimport { ChartColor } from \"./ChartColor\";\nimport Chart from 'chart.js/auto';\n\n\n\nexport interface DataProps {\n\tdata: {\n\t\tkey: string;\n\t\ttitle: string;\n\t\tmain_chart_type: any;\n\t\tdataSet: Array<{\n\t\t\tgraph_type: any;\n\t\t\tlabel: string;\n\t\t\tmetrics: any;\n\t\t}>;\n\t\tdimension: Array<{ name: string; data: [] }>;\n\t\tdata_grid: any;\n\t\t// The graph type is same as the one in dataset object\n\t\tchosen_schema: Array<{\n\t\t\tname: string;\n\t\t\toperation: string;\n\t\t\tgraph_type: string;\n\t\t}>;\n\t\t\n\t};\n}\n\nexport const MyBar: React.FC<DataProps> = ({ data }) => {\n\tconst config = (\n\t\titem: { graph_type: any; label: string; metrics: any },\n\t\tindex: number\n\t) => {\n\t\tswitch (item.graph_type) {\n\t\t\tcase \"bar\":\n\t\t\t\treturn {\n\t\t\t\t\tfill: false,\n\t\t\t\t\tlineTension: 0.5,\n\t\t\t\t\tbackgroundColor: ChartColor.colorOptions[index],\n\t\t\t\t\tborderColor: \"white\",\n\t\t\t\t\tborderWidth: 2,\n\t\t\t\t};\n\n\t\t\tcase \"line\":\n\t\t\t\treturn {\n\t\t\t\t\tfill: false,\n\t\t\t\t\tlineTension: 0.5,\n\t\t\t\t\tborderColor: ChartColor.colorOptions[index],\n\t\t\t\t\tborderWidth: 2,\n\t\t\t\t};\n\t\t\tcase \"pie\":\n\t\t\t\treturn {\n\t\t\t\t\tfill: false,\n\t\t\t\t\tlineTension: 0.5,\n\t\t\t\t\tbackgroundColor: ChartColor.colorOptions,\n\t\t\t\t\tborderColor: \"white\",\n\t\t\t\t\tborderWidth: 1,\n\t\t\t\t};\n\n\t\t\tdefault:\n\t\t\t\treturn {\n\t\t\t\t\tfill: false,\n\t\t\t\t\tlineTension: 0.5,\n\t\t\t\t\tbackgroundColor: ChartColor.colorOptions[index],\n\t\t\t\t\tborderColor: \"white\",\n\t\t\t\t};\n\t\t}\n\t};\n\n\treturn (\n\t\t<Chart\n\t\t\ttype={data.main_chart_type}\n\t\t\tredraw={true}\n\t\t\tdata={{\n\t\t\t\tlabels: data.dimension[0]?.data,\n\t\t\t\tdatasets: data.dataSet.map((item, index) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...config(item, index),\n\t\t\t\t\t\tlabel: item.label,\n\t\t\t\t\t\tdata: item.metrics,\n\t\t\t\t\t\ttype: item.graph_type,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t}}\n\t\t\toptions={{\n\t\t\t\tplugins: {\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tposition: \"right\",\n\t\t\t\t\t},\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tdisplay:\n\t\t\t\t\t\t\tdata.title === undefined || data.title === \"\"\n\t\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t\t: true,\n\t\t\t\t\t\ttext: data.title,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\tresponsive: true,\n\t\t\t}}\n\t\t/>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}