{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/login/ForgotPassword.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ForgotPassword.less\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { useHistory } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport mixpanel from \"mixpanel-browser\";\nimport { Button, FormControl, Flex, Heading, Input, Stack, Text, useColorModeValue } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ForgotPassword = () => {\n  _s();\n\n  let history = useHistory();\n  const [isLoading, setLoading] = useState(false);\n\n  const onFinish = async values => {\n    setLoading(true);\n    mixpanel.track(\"Forgot_Password_Excecute_Reset_Password_Click\");\n    let firebaseResult = await FirebaseServices.resetPassword(values[\"email\"]);\n\n    if (firebaseResult.isSuccess) {\n      // Go to login page\n      mixpanel.track(\"Forgot_Password_Excecute_Reset_Password_Click\", {\n        Response: firebaseResult.message\n      });\n      history.push(RoutePath.login);\n      setLoading(false);\n    } else {\n      mixpanel.track(\"Forgot_Password_Excecute_Reset_Password_Click\", {\n        Response: firebaseResult.message\n      });\n      alert(firebaseResult.message);\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    minH: '100vh',\n    align: 'center',\n    justify: 'center',\n    bg: useColorModeValue('gray.50', 'gray.800'),\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 4,\n      w: 'full',\n      maxW: 'md',\n      bg: useColorModeValue('white', 'gray.700'),\n      rounded: 'xl',\n      boxShadow: 'lg',\n      p: 6,\n      my: 12,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        lineHeight: 1.1,\n        fontSize: {\n          base: '2xl',\n          md: '3xl'\n        },\n        children: \"Forgot your password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: {\n          base: 'sm',\n          sm: 'md'\n        },\n        color: useColorModeValue('gray.800', 'gray.400'),\n        children: \"You'll get an email with a reset link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        id: \"email\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"your-email@example.com\",\n          _placeholder: {\n            color: 'gray.500'\n          },\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 6,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          bg: 'blue.400',\n          color: 'white',\n          _hover: {\n            bg: 'blue.500'\n          },\n          children: \"Request Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ForgotPassword, \"xH8GQ95QUbSumkF4zExBewfsMyc=\", false, function () {\n  return [useHistory, useColorModeValue, useColorModeValue, useColorModeValue];\n});\n\n_c = ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/login/ForgotPassword.tsx"],"names":["React","useState","FirebaseServices","useHistory","RoutePath","mixpanel","Button","FormControl","Flex","Heading","Input","Stack","Text","useColorModeValue","ForgotPassword","history","isLoading","setLoading","onFinish","values","track","firebaseResult","resetPassword","isSuccess","Response","message","push","login","alert","base","md","sm","color","bg"],"mappings":"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","sourcesContent":["import React, { ReactElement, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Form, Card } from \"antd\";\nimport \"./ForgotPassword.less\";\nimport { BackHeader, EmailField, FormButton } from \"../../utils/components\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { useHistory } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport mixpanel from \"mixpanel-browser\";\nimport {\n\tButton,\n\tFormControl,\n\tFlex,\n\tHeading,\n\tInput,\n\tStack,\n\tText,\n\tuseColorModeValue,\n  } from '@chakra-ui/react';\n\nexport const ForgotPassword: React.FC<any> = () => {\n\tlet history = useHistory();\n\n\tconst [isLoading, setLoading] = useState(false);\n\n\tconst onFinish = async (values: any) => {\n\t\tsetLoading(true);\n\t\tmixpanel.track(\"Forgot_Password_Excecute_Reset_Password_Click\");\n\t\tlet firebaseResult = await FirebaseServices.resetPassword(\n\t\t\tvalues[\"email\"]\n\t\t);\n\n\t\tif (firebaseResult.isSuccess) {\n\t\t\t// Go to login page\n\t\t\tmixpanel.track(\"Forgot_Password_Excecute_Reset_Password_Click\", {\n\t\t\t\tResponse: firebaseResult.message,\n\t\t\t});\n\n\t\t\thistory.push(RoutePath.login);\n\t\t\tsetLoading(false);\n\t\t} else {\n\t\t\tmixpanel.track(\"Forgot_Password_Excecute_Reset_Password_Click\", {\n\t\t\t\tResponse: firebaseResult.message,\n\t\t\t});\n\n\t\t\talert(firebaseResult.message);\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\treturn (\n\n\t\t<Flex\n\t\tminH={'100vh'}\n\t\talign={'center'}\n\t\tjustify={'center'}\n\t\tbg={useColorModeValue('gray.50', 'gray.800')}>\n\t\t<Stack\n\t\t  spacing={4}\n\t\t  w={'full'}\n\t\t  maxW={'md'}\n\t\t  bg={useColorModeValue('white', 'gray.700')}\n\t\t  rounded={'xl'}\n\t\t  boxShadow={'lg'}\n\t\t  p={6}\n\t\t  my={12}>\n\t\t  <Heading lineHeight={1.1} fontSize={{ base: '2xl', md: '3xl' }}>\n\t\t\tForgot your password?\n\t\t  </Heading>\n\t\t  <Text\n\t\t\tfontSize={{ base: 'sm', sm: 'md' }}\n\t\t\tcolor={useColorModeValue('gray.800', 'gray.400')}>\n\t\t\tYou&apos;ll get an email with a reset link\n\t\t  </Text>\n\t\t  <FormControl id=\"email\">\n\t\t\t<Input\n\t\t\t  placeholder=\"your-email@example.com\"\n\t\t\t  _placeholder={{ color: 'gray.500' }}\n\t\t\t  type=\"email\"\n\t\t\t/>\n\t\t  </FormControl>\n\t\t  <Stack spacing={6}>\n\t\t\t<Button\n\t\t\t  bg={'blue.400'}\n\t\t\t  color={'white'}\n\t\t\t  _hover={{\n\t\t\t\tbg: 'blue.500',\n\t\t\t  }}>\n\t\t\t  Request Reset\n\t\t\t</Button>\n\t\t  </Stack>\n\t\t</Stack>\n\t  </Flex>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}