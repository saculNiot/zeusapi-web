{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/register/Register.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Layout, Row, Col, Form, Checkbox, Input, Card, Radio } from \"antd\";\nimport \"./Register.less\";\nimport { useHistory } from \"react-router-dom\";\nimport \"antd-country-phone-input/dist/index.css\";\nimport { ConfigProvider } from \"antd-country-phone-input\";\nimport en from \"world_countries_lists/data/en/world.json\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { BackHeader, ConfirmPasswordField, EmailField, FormButton, FormPhoneInput, PasswordField } from \"../../utils/components\";\nimport { Encryption } from \"../../utils/encryption\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { formatPhoneNumberIntl } from \"react-phone-number-input\";\nimport mixpanel from \"mixpanel-browser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\nexport const Register = () => {\n  _s();\n\n  let userRepo = new UserRepo();\n  let history = useHistory(); // Is loading flag\n\n  const [isLoading, setLoading] = useState(false);\n\n  const onFinish = async values => {\n    setLoading(true);\n    console.log(\"Received values of form: \", values);\n    let firebaseResult = await FirebaseServices.createAccount(values[\"email\"], values[\"password\"]);\n\n    if (firebaseResult.isSuccess) {\n      let apiResult = await userRepo.saveUser({\n        purpose: \"new_user\",\n        userId: firebaseResult.data.uid,\n        email: values[\"email\"],\n        password: Encryption.encrypt(values[\"password\"]),\n        nickname: values[\"nickname\"],\n        phoneNo: formatPhoneNumberIntl(values[\"phone_number\"]),\n        acctType: values[\"account_type\"],\n        orgName: values[\"organisation_name\"],\n        packagePlan: \"free\"\n      });\n\n      if (apiResult.isSuccess) {\n        alert(\"Email verification has sent to your mail box.\");\n        mixpanel.identify(firebaseResult.data.uid);\n        mixpanel.track(\"Home_Execute_Sign_Up_Click\");\n        mixpanel.people.set({\n          Email: values[\"email\"],\n          Nickname: values[\"nickname\"],\n          PhoneNo: formatPhoneNumberIntl(values[\"phone_number\"]),\n          AcctType: values[\"account_type\"],\n          OrgName: values[\"organisation_name\"],\n          PackagePlan: \"free\"\n        });\n        history.replace(RoutePath.product_choices);\n        setLoading(false);\n      } else {\n        alert(apiResult.message);\n        setLoading(false);\n      }\n    } else {\n      alert(firebaseResult.message);\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    className: \"register_layout\",\n    style: {\n      overflow: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register_navbar\",\n      style: {\n        backgroundColor: \"#fff\"\n      },\n      children: /*#__PURE__*/_jsxDEV(BackHeader, {\n        title: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      className: \"register_content\",\n      style: {\n        backgroundColor: \"white\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"register_form_row\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 8,\n          className: \"register_form_col\",\n          span: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 8,\n          className: \"register_form_col\",\n          span: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(ConfigProvider, {\n              locale: en,\n              children: /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n                name: \"register\",\n                className: \"register_form\",\n                initialValues: {\n                  remember: true\n                },\n                onFinish: onFinish,\n                children: [/*#__PURE__*/_jsxDEV(EmailField, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(PasswordField, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(ConfirmPasswordField, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"nickname\",\n                  label: \"Nickname\",\n                  tooltip: \"What do you want others to call you?\",\n                  rules: [{\n                    required: true,\n                    message: \"Please input your nickname!\",\n                    whitespace: true\n                  }],\n                  children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(FormPhoneInput, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                  label: \"Type\",\n                  name: \"account_type\",\n                  rules: [{\n                    required: true,\n                    message: \"Please choose your account type!\"\n                  }],\n                  children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Radio.Button, {\n                      value: \"institute\",\n                      children: \"Institute\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n                      value: \"company\",\n                      children: \"Company\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                  label: \"Org Name\",\n                  name: \"organisation_name\",\n                  tooltip: \"Please input your Company/Institution name\",\n                  rules: [{\n                    required: true,\n                    message: \"Please input your Company/Institution name!\"\n                  }],\n                  children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                  name: \"agreement\",\n                  valuePropName: \"checked\",\n                  rules: [{\n                    validator: (_, value) => value ? Promise.resolve() : Promise.reject(new Error(\"Should accept agreement\"))\n                  }],\n                  ...tailFormItemLayout,\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    children: [\"I have read the\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"https://codagence.notion.site/TERMS-AND-CONDITIONS-416ed24afab14050a68e2f0d80357f65\",\n                      children: \"agreement\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n                  children: /*#__PURE__*/_jsxDEV(FormButton, {\n                    title: \"Register\",\n                    isLoading: isLoading\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 8,\n          className: \"register_form_col\",\n          span: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Register, \"NIAzi6gPcp68SBVGgvdrLXl2T+s=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/register/Register.tsx"],"names":["React","useState","Layout","Row","Col","Form","Checkbox","Input","Card","Radio","useHistory","ConfigProvider","en","FirebaseServices","UserRepo","BackHeader","ConfirmPasswordField","EmailField","FormButton","FormPhoneInput","PasswordField","Encryption","RoutePath","formatPhoneNumberIntl","mixpanel","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Register","userRepo","history","isLoading","setLoading","onFinish","values","console","log","firebaseResult","createAccount","isSuccess","apiResult","saveUser","purpose","userId","data","uid","email","password","encrypt","nickname","phoneNo","acctType","orgName","packagePlan","alert","identify","track","people","set","Email","Nickname","PhoneNo","AcctType","OrgName","PackagePlan","replace","product_choices","message","overflow","backgroundColor","remember","required","whitespace","validator","_","value","Promise","resolve","reject","Error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Form, Checkbox, Input, Card, Radio } from \"antd\";\nimport \"./Register.less\";\nimport { useHistory } from \"react-router-dom\";\nimport \"antd-country-phone-input/dist/index.css\";\nimport { ConfigProvider } from \"antd-country-phone-input\";\nimport en from \"world_countries_lists/data/en/world.json\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport {\n\tBackHeader,\n\tConfirmPasswordField,\n\tEmailField,\n\tFormButton,\n\tFormPhoneInput,\n\tPasswordField,\n} from \"../../utils/components\";\nimport { Encryption } from \"../../utils/encryption\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport PhoneInput, { formatPhoneNumberIntl } from \"react-phone-number-input\";\nimport mixpanel from \"mixpanel-browser\";\n\nconst formItemLayout = {\n\tlabelCol: {\n\t\txs: { span: 24 },\n\t\tsm: { span: 8 },\n\t},\n\twrapperCol: {\n\t\txs: { span: 24 },\n\t\tsm: { span: 16 },\n\t},\n};\nconst tailFormItemLayout = {\n\twrapperCol: {\n\t\txs: {\n\t\t\tspan: 24,\n\t\t\toffset: 0,\n\t\t},\n\t\tsm: {\n\t\t\tspan: 16,\n\t\t\toffset: 8,\n\t\t},\n\t},\n};\n\nexport const Register: React.FC<any> = () => {\n\tlet userRepo = new UserRepo();\n\n\tlet history = useHistory();\n\n\t// Is loading flag\n\tconst [isLoading, setLoading] = useState(false);\n\n\tconst onFinish = async (values: any) => {\n\t\tsetLoading(true);\n\n\t\tconsole.log(\"Received values of form: \", values);\n\t\tlet firebaseResult = await FirebaseServices.createAccount(\n\t\t\tvalues[\"email\"],\n\t\t\tvalues[\"password\"]\n\t\t);\n\n\t\tif (firebaseResult.isSuccess) {\n\t\t\tlet apiResult = await userRepo.saveUser({\n\t\t\t\tpurpose: \"new_user\",\n\t\t\t\tuserId: firebaseResult.data.uid,\n\t\t\t\temail: values[\"email\"],\n\t\t\t\tpassword: Encryption.encrypt(values[\"password\"]),\n\t\t\t\tnickname: values[\"nickname\"],\n\t\t\t\tphoneNo: formatPhoneNumberIntl(values[\"phone_number\"]),\n\t\t\t\tacctType: values[\"account_type\"],\n\t\t\t\torgName: values[\"organisation_name\"],\n\t\t\t\tpackagePlan: \"free\",\n\t\t\t});\n\n\t\t\tif (apiResult.isSuccess) {\n\t\t\t\talert(\"Email verification has sent to your mail box.\");\n\t\t\t\tmixpanel.identify(firebaseResult.data.uid);\n\t\t\t\tmixpanel.track(\"Home_Execute_Sign_Up_Click\");\n\t\t\t\tmixpanel.people.set({\n\t\t\t\t\tEmail: values[\"email\"],\n\t\t\t\t\tNickname: values[\"nickname\"],\n\t\t\t\t\tPhoneNo: formatPhoneNumberIntl(values[\"phone_number\"]),\n\t\t\t\t\tAcctType: values[\"account_type\"],\n\t\t\t\t\tOrgName: values[\"organisation_name\"],\n\t\t\t\t\tPackagePlan: \"free\",\n\t\t\t\t});\n\t\t\t\thistory.replace(RoutePath.product_choices);\n\t\t\t\tsetLoading(false);\n\t\t\t} else {\n\t\t\t\talert(apiResult.message);\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t} else {\n\t\t\talert(firebaseResult.message);\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Layout className=\"register_layout\" style={{ overflow: \"auto\" }}>\n\t\t\t<div\n\t\t\t\tclassName=\"register_navbar\"\n\t\t\t\tstyle={{ backgroundColor: \"#fff\" }}\n\t\t\t>\n\t\t\t\t<BackHeader title=\"Register\" />\n\t\t\t</div>\n\t\t\t<Layout\n\t\t\t\tclassName=\"register_content\"\n\t\t\t\tstyle={{ backgroundColor: \"white\" }}\n\t\t\t>\n\t\t\t\t<Row className=\"register_form_row\">\n\t\t\t\t\t<Col\n\t\t\t\t\t\txs={24}\n\t\t\t\t\t\txl={8}\n\t\t\t\t\t\tclassName=\"register_form_col\"\n\t\t\t\t\t\tspan={8}\n\t\t\t\t\t/>\n\t\t\t\t\t<Col xs={24} xl={8} className=\"register_form_col\" span={8}>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<ConfigProvider locale={en}>\n\t\t\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\t\t\t{...formItemLayout}\n\t\t\t\t\t\t\t\t\tname=\"register\"\n\t\t\t\t\t\t\t\t\tclassName=\"register_form\"\n\t\t\t\t\t\t\t\t\tinitialValues={{ remember: true }}\n\t\t\t\t\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<EmailField />\n\n\t\t\t\t\t\t\t\t\t<PasswordField />\n\n\t\t\t\t\t\t\t\t\t<ConfirmPasswordField />\n\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\tname=\"nickname\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Nickname\"\n\t\t\t\t\t\t\t\t\t\ttooltip=\"What do you want others to call you?\"\n\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Please input your nickname!\",\n\t\t\t\t\t\t\t\t\t\t\t\twhitespace: true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input />\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t<FormPhoneInput />\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\tlabel=\"Type\"\n\t\t\t\t\t\t\t\t\t\tname=\"account_type\"\n\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Please choose your account type!\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Radio.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Radio.Button value=\"institute\">\n\t\t\t\t\t\t\t\t\t\t\t\tInstitute\n\t\t\t\t\t\t\t\t\t\t\t</Radio.Button>\n\t\t\t\t\t\t\t\t\t\t\t<Radio.Button value=\"company\">\n\t\t\t\t\t\t\t\t\t\t\t\tCompany\n\t\t\t\t\t\t\t\t\t\t\t</Radio.Button>\n\t\t\t\t\t\t\t\t\t\t</Radio.Group>\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\tlabel=\"Org Name\"\n\t\t\t\t\t\t\t\t\t\tname=\"organisation_name\"\n\t\t\t\t\t\t\t\t\t\ttooltip=\"Please input your Company/Institution name\"\n\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Please input your Company/Institution name!\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input />\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\tname=\"agreement\"\n\t\t\t\t\t\t\t\t\t\tvaluePropName=\"checked\"\n\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvalidator: (_, value) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? Promise.resolve()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: Promise.reject(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Should accept agreement\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t{...tailFormItemLayout}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Checkbox>\n\t\t\t\t\t\t\t\t\t\t\tI have read the{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t<a href=\"https://codagence.notion.site/TERMS-AND-CONDITIONS-416ed24afab14050a68e2f0d80357f65\">\n\t\t\t\t\t\t\t\t\t\t\t\tagreement\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t</Checkbox>\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t<Form.Item {...tailFormItemLayout}>\n\t\t\t\t\t\t\t\t\t\t<FormButton\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Register\"\n\t\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t</ConfigProvider>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col\n\t\t\t\t\t\txs={24}\n\t\t\t\t\t\txl={8}\n\t\t\t\t\t\tclassName=\"register_form_col\"\n\t\t\t\t\t\tspan={8}\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t</Layout>\n\t\t</Layout>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}