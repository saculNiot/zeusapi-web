{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/register/EmailVerification.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { Form } from \"antd\";\nimport \"./Register.less\";\nimport \"antd-country-phone-input/dist/index.css\";\nimport { FormButton } from \"../../utils/components\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTimer } from \"react-timer-hook\";\nimport { Flex, Heading, Stack, Text, useColorModeValue } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EmailVerification = () => {\n  _s();\n\n  let history = useHistory();\n  const time = new Date();\n  time.setSeconds(time.getSeconds() + 60);\n  const {\n    seconds,\n    start,\n    restart\n  } = useTimer({\n    autoStart: false,\n    expiryTimestamp: time,\n    onExpire: () => {\n      // Show the button on expiring time\n      setBtn(true); // Reset the time to 60 seconds after the expiring time\n\n      restart(time, false);\n    }\n  }); // Get current sign in User\n\n  const user = useContext(AuthContext); // Is loading flag\n\n  const [isLoading, setLoading] = useState(false);\n  const [isBtnEnabled, setBtn] = useState(true);\n\n  const onFinish = async values => {\n    setLoading(true); // If user not found, then proceed to log in page\n\n    if (user) {\n      //If the meail has verified, proceed to home page\n      if (user === null || user === void 0 ? void 0 : user.emailVerified) history.replace(RoutePath.home);\n      await FirebaseServices.sendEmailVerification(user);\n      alert(\"Email verification has sent\"); // Start the timer\n\n      setBtn(false);\n      start();\n    } else {\n      history.replace(RoutePath.login);\n    }\n\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    minH: \"100vh\",\n    align: \"center\",\n    justify: \"center\",\n    bg: useColorModeValue(\"gray.50\", \"gray.800\"),\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 4,\n      w: \"full\",\n      maxW: \"md\",\n      bg: useColorModeValue(\"white\", \"gray.700\"),\n      rounded: \"xl\",\n      boxShadow: \"lg\",\n      p: 6,\n      my: 12,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        lineHeight: 1.1,\n        fontSize: {\n          base: \"2xl\",\n          md: \"3xl\"\n        },\n        children: \"Email verification has sent to your mailbox.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: {\n          base: \"sm\",\n          sm: \"md\"\n        },\n        color: useColorModeValue(\"gray.800\", \"gray.400\"),\n        children: [\"If not found, please check your junk mail.\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        name: \"register\",\n        className: \"register_form\",\n        initialValues: {\n          remember: true\n        },\n        onFinish: onFinish,\n        children: isBtnEnabled ? /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(FormButton, {\n            title: \"Send Email Verification\",\n            isLoading: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", \"Please send again in \", seconds, \" second if not found.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }, this);\n};\n\n_s(EmailVerification, \"BmE+K4CjIMqMzyT1cPMgfE3hglY=\", false, function () {\n  return [useHistory, useTimer, useColorModeValue, useColorModeValue, useColorModeValue];\n});\n\n_c = EmailVerification;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailVerification\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/register/EmailVerification.tsx"],"names":["React","useContext","useState","Form","FormButton","FirebaseServices","AuthContext","RoutePath","useHistory","useTimer","Flex","Heading","Stack","Text","useColorModeValue","EmailVerification","history","time","Date","setSeconds","getSeconds","seconds","start","restart","autoStart","expiryTimestamp","onExpire","setBtn","user","isLoading","setLoading","isBtnEnabled","onFinish","values","emailVerified","replace","home","sendEmailVerification","alert","login","base","md","sm","remember"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,SAAiCC,IAAjC,QAA6C,MAA7C;AACA,OAAO,iBAAP;AACA,OAAO,yCAAP;AACA,SAAqBC,UAArB,QAAuC,wBAAvC;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SACCC,IADD,EAECC,OAFD,EAGCC,KAHD,EAICC,IAJD,EAKCC,iBALD,QAMO,kBANP;;AAQA,OAAO,MAAMC,iBAAgC,GAAG,MAAM;AAAA;;AACrD,MAAIC,OAAO,GAAGR,UAAU,EAAxB;AAEA,QAAMS,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAD,EAAAA,IAAI,CAACE,UAAL,CAAgBF,IAAI,CAACG,UAAL,KAAoB,EAApC;AAEA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA8Bd,QAAQ,CAAC;AAC5Ce,IAAAA,SAAS,EAAE,KADiC;AAE5CC,IAAAA,eAAe,EAAER,IAF2B;AAG5CS,IAAAA,QAAQ,EAAE,MAAM;AACf;AACAC,MAAAA,MAAM,CAAC,IAAD,CAAN,CAFe,CAGf;;AACAJ,MAAAA,OAAO,CAACN,IAAD,EAAO,KAAP,CAAP;AACA;AAR2C,GAAD,CAA5C,CANqD,CAiBrD;;AACA,QAAMW,IAAI,GAAG3B,UAAU,CAACK,WAAD,CAAvB,CAlBqD,CAoBrD;;AACA,QAAM,CAACuB,SAAD,EAAYC,UAAZ,IAA0B5B,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAAC6B,YAAD,EAAeJ,MAAf,IAAyBzB,QAAQ,CAAC,IAAD,CAAvC;;AAEA,QAAM8B,QAAQ,GAAG,MAAOC,MAAP,IAAuB;AACvCH,IAAAA,UAAU,CAAC,IAAD,CAAV,CADuC,CAGvC;;AACA,QAAIF,IAAJ,EAAU;AACT;AACA,UAAIA,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEM,aAAV,EAAyBlB,OAAO,CAACmB,OAAR,CAAgB5B,SAAS,CAAC6B,IAA1B;AACzB,YAAM/B,gBAAgB,CAACgC,qBAAjB,CAAuCT,IAAvC,CAAN;AACAU,MAAAA,KAAK,CAAC,6BAAD,CAAL,CAJS,CAKT;;AACAX,MAAAA,MAAM,CAAC,KAAD,CAAN;AACAL,MAAAA,KAAK;AACL,KARD,MAQO;AACNN,MAAAA,OAAO,CAACmB,OAAR,CAAgB5B,SAAS,CAACgC,KAA1B;AACA;;AAEDT,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,GAjBD;;AAmBA,sBACC,QAAC,IAAD;AACC,IAAA,IAAI,EAAE,OADP;AAEC,IAAA,KAAK,EAAE,QAFR;AAGC,IAAA,OAAO,EAAE,QAHV;AAIC,IAAA,EAAE,EAAEhB,iBAAiB,CAAC,SAAD,EAAY,UAAZ,CAJtB;AAAA,2BAMC,QAAC,KAAD;AACC,MAAA,OAAO,EAAE,CADV;AAEC,MAAA,CAAC,EAAE,MAFJ;AAGC,MAAA,IAAI,EAAE,IAHP;AAIC,MAAA,EAAE,EAAEA,iBAAiB,CAAC,OAAD,EAAU,UAAV,CAJtB;AAKC,MAAA,OAAO,EAAE,IALV;AAMC,MAAA,SAAS,EAAE,IANZ;AAOC,MAAA,CAAC,EAAE,CAPJ;AAQC,MAAA,EAAE,EAAE,EARL;AAAA,8BAUC,QAAC,OAAD;AAAS,QAAA,UAAU,EAAE,GAArB;AAA0B,QAAA,QAAQ,EAAE;AAAE0B,UAAAA,IAAI,EAAE,KAAR;AAAeC,UAAAA,EAAE,EAAE;AAAnB,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVD,eAaC,QAAC,IAAD;AACC,QAAA,QAAQ,EAAE;AAAED,UAAAA,IAAI,EAAE,IAAR;AAAcE,UAAAA,EAAE,EAAE;AAAlB,SADX;AAEC,QAAA,KAAK,EAAE5B,iBAAiB,CAAC,UAAD,EAAa,UAAb,CAFzB;AAAA,iEAI4C,GAJ5C;AAAA;AAAA;AAAA;AAAA;AAAA,cAbD,eAmBC,QAAC,IAAD;AACC,QAAA,IAAI,EAAC,UADN;AAEC,QAAA,SAAS,EAAC,eAFX;AAGC,QAAA,aAAa,EAAE;AAAE6B,UAAAA,QAAQ,EAAE;AAAZ,SAHhB;AAIC,QAAA,QAAQ,EAAEX,QAJX;AAAA,kBAMED,YAAY,gBACZ,QAAC,IAAD,CAAM,IAAN;AAAA,iCACC,QAAC,UAAD;AACC,YAAA,KAAK,EAAC,yBADP;AAEC,YAAA,SAAS,EAAEF;AAFZ;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADY,gBAQZ;AAAA,qBACE,GADF,2BAEuBR,OAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA,cAnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAND;AAAA;AAAA;AAAA;AAAA,UADD;AAiDA,CA7FM;;GAAMN,iB;UACEP,U,EAKsBC,Q,EA2C9BK,iB,EAMCA,iB,EAWIA,iB;;;KAlECC,iB","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Card, Form } from \"antd\";\nimport \"./Register.less\";\nimport \"antd-country-phone-input/dist/index.css\";\nimport { BackHeader, FormButton } from \"../../utils/components\";\nimport Title from \"antd/lib/typography/Title\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTimer } from \"react-timer-hook\";\nimport {\n\tFlex,\n\tHeading,\n\tStack,\n\tText,\n\tuseColorModeValue,\n} from \"@chakra-ui/react\";\n\nexport const EmailVerification: React.FC<any> = () => {\n\tlet history = useHistory();\n\n\tconst time = new Date();\n\ttime.setSeconds(time.getSeconds() + 60);\n\n\tconst { seconds, start, restart } = useTimer({\n\t\tautoStart: false,\n\t\texpiryTimestamp: time,\n\t\tonExpire: () => {\n\t\t\t// Show the button on expiring time\n\t\t\tsetBtn(true);\n\t\t\t// Reset the time to 60 seconds after the expiring time\n\t\t\trestart(time, false);\n\t\t},\n\t});\n\n\t// Get current sign in User\n\tconst user = useContext(AuthContext);\n\n\t// Is loading flag\n\tconst [isLoading, setLoading] = useState(false);\n\n\tconst [isBtnEnabled, setBtn] = useState(true);\n\n\tconst onFinish = async (values: any) => {\n\t\tsetLoading(true);\n\n\t\t// If user not found, then proceed to log in page\n\t\tif (user) {\n\t\t\t//If the meail has verified, proceed to home page\n\t\t\tif (user?.emailVerified) history.replace(RoutePath.home);\n\t\t\tawait FirebaseServices.sendEmailVerification(user);\n\t\t\talert(\"Email verification has sent\");\n\t\t\t// Start the timer\n\t\t\tsetBtn(false);\n\t\t\tstart();\n\t\t} else {\n\t\t\thistory.replace(RoutePath.login);\n\t\t}\n\n\t\tsetLoading(false);\n\t};\n\n\treturn (\n\t\t<Flex\n\t\t\tminH={\"100vh\"}\n\t\t\talign={\"center\"}\n\t\t\tjustify={\"center\"}\n\t\t\tbg={useColorModeValue(\"gray.50\", \"gray.800\")}\n\t\t>\n\t\t\t<Stack\n\t\t\t\tspacing={4}\n\t\t\t\tw={\"full\"}\n\t\t\t\tmaxW={\"md\"}\n\t\t\t\tbg={useColorModeValue(\"white\", \"gray.700\")}\n\t\t\t\trounded={\"xl\"}\n\t\t\t\tboxShadow={\"lg\"}\n\t\t\t\tp={6}\n\t\t\t\tmy={12}\n\t\t\t>\n\t\t\t\t<Heading lineHeight={1.1} fontSize={{ base: \"2xl\", md: \"3xl\" }}>\n\t\t\t\t\tEmail verification has sent to your mailbox.\n\t\t\t\t</Heading>\n\t\t\t\t<Text\n\t\t\t\t\tfontSize={{ base: \"sm\", sm: \"md\" }}\n\t\t\t\t\tcolor={useColorModeValue(\"gray.800\", \"gray.400\")}\n\t\t\t\t>\n\t\t\t\t\tIf not found, please check your junk mail.{\" \"}\n\t\t\t\t</Text>\n\t\t\t\t<Form\n\t\t\t\t\tname=\"register\"\n\t\t\t\t\tclassName=\"register_form\"\n\t\t\t\t\tinitialValues={{ remember: true }}\n\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t>\n\t\t\t\t\t{isBtnEnabled ? (\n\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t<FormButton\n\t\t\t\t\t\t\t\ttitle=\"Send Email Verification\"\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\tPlease send again in {seconds} second if not found.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t)}\n\t\t\t\t</Form>\n\t\t\t</Stack>\n\t\t</Flex>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}