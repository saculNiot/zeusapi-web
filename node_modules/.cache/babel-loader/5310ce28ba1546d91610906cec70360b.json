{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/login/ForgotPassword.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"antd\";\nimport \"./ForgotPassword.less\";\nimport { EmailField, FormButton } from \"../../utils/components\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { useHistory } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { Flex, Heading, Stack, Text, useColorModeValue } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ForgotPassword = () => {\n  _s();\n\n  let history = useHistory();\n  const [isLoading, setLoading] = useState(false);\n\n  const onFinish = async values => {\n    setLoading(true);\n    let firebaseResult = await FirebaseServices.resetPassword(values[\"email\"]);\n\n    if (firebaseResult.isSuccess) {\n      // Go to login page\n      history.push(RoutePath.login);\n      setLoading(false);\n    } else {\n      alert(firebaseResult.message);\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    minH: \"100vh\",\n    align: \"center\",\n    justify: \"center\",\n    bg: useColorModeValue(\"gray.50\", \"gray.800\"),\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 4,\n      w: \"full\",\n      maxW: \"md\",\n      bg: useColorModeValue(\"white\", \"gray.700\"),\n      rounded: \"xl\",\n      boxShadow: \"lg\",\n      p: 6,\n      my: 12,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        lineHeight: 1.1,\n        fontSize: {\n          base: \"2xl\",\n          md: \"3xl\"\n        },\n        children: \"Forgot your password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: {\n          base: \"sm\",\n          sm: \"md\"\n        },\n        color: useColorModeValue(\"gray.800\", \"gray.400\"),\n        children: \"You'll get an email with a reset link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        name: \"forgot_password\",\n        className: \"forgot_password_form\",\n        initialValues: {\n          remember: true\n        },\n        onFinish: onFinish,\n        children: [/*#__PURE__*/_jsxDEV(EmailField, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 6,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(FormButton, {\n              title: \"Request Password Reset\",\n              isLoading: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ForgotPassword, \"xH8GQ95QUbSumkF4zExBewfsMyc=\", false, function () {\n  return [useHistory, useColorModeValue, useColorModeValue, useColorModeValue];\n});\n\n_c = ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/login/ForgotPassword.tsx"],"names":["React","useState","Form","EmailField","FormButton","FirebaseServices","useHistory","RoutePath","Flex","Heading","Stack","Text","useColorModeValue","ForgotPassword","history","isLoading","setLoading","onFinish","values","firebaseResult","resetPassword","isSuccess","push","login","alert","message","base","md","sm","remember"],"mappings":"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","sourcesContent":["import React, { ReactElement, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Form, Card } from \"antd\";\nimport \"./ForgotPassword.less\";\nimport { BackHeader, EmailField, FormButton } from \"../../utils/components\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { useHistory } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport {\n\tButton,\n\tFormControl,\n\tFlex,\n\tHeading,\n\tInput,\n\tStack,\n\tText,\n\tuseColorModeValue,\n} from \"@chakra-ui/react\";\n\nexport const ForgotPassword: React.FC<any> = () => {\n\tlet history = useHistory();\n\n\tconst [isLoading, setLoading] = useState(false);\n\n\tconst onFinish = async (values: any) => {\n\t\tsetLoading(true);\n\t\tlet firebaseResult = await FirebaseServices.resetPassword(\n\t\t\tvalues[\"email\"]\n\t\t);\n\n\t\tif (firebaseResult.isSuccess) {\n\t\t\t// Go to login page\n\t\t\thistory.push(RoutePath.login);\n\t\t\tsetLoading(false);\n\t\t} else {\n\n\t\t\talert(firebaseResult.message);\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Flex\n\t\t\tminH={\"100vh\"}\n\t\t\talign={\"center\"}\n\t\t\tjustify={\"center\"}\n\t\t\tbg={useColorModeValue(\"gray.50\", \"gray.800\")}\n\t\t>\n\t\t\t<Stack\n\t\t\t\tspacing={4}\n\t\t\t\tw={\"full\"}\n\t\t\t\tmaxW={\"md\"}\n\t\t\t\tbg={useColorModeValue(\"white\", \"gray.700\")}\n\t\t\t\trounded={\"xl\"}\n\t\t\t\tboxShadow={\"lg\"}\n\t\t\t\tp={6}\n\t\t\t\tmy={12}\n\t\t\t>\n\t\t\t\t<Heading lineHeight={1.1} fontSize={{ base: \"2xl\", md: \"3xl\" }}>\n\t\t\t\t\tForgot your password?\n\t\t\t\t</Heading>\n\t\t\t\t<Text\n\t\t\t\t\tfontSize={{ base: \"sm\", sm: \"md\" }}\n\t\t\t\t\tcolor={useColorModeValue(\"gray.800\", \"gray.400\")}\n\t\t\t\t>\n\t\t\t\t\tYou&apos;ll get an email with a reset link\n\t\t\t\t</Text>\n\t\t\t\t<Form\n\t\t\t\t\tname=\"forgot_password\"\n\t\t\t\t\tclassName=\"forgot_password_form\"\n\t\t\t\t\tinitialValues={{ remember: true }}\n\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t>\n\t\t\t\t\t<EmailField />\n\n\t\t\t\t\t<Stack spacing={6}>\n\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t<FormButton\n\t\t\t\t\t\t\t\ttitle=\"Request Password Reset\"\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t</Stack>\n\t\t\t\t</Form>\n\t\t\t</Stack>\n\t\t</Flex>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}