{"ast":null,"code":"export class Client {\n  constructor(props) {\n    this.clientId = void 0;\n    this.name = void 0;\n    this.createdDateTime = void 0;\n    this.createdById = void 0;\n    this.attribute = void 0;\n    this.roles = void 0;\n    this.clientId = props.clientId;\n    this.name = props.name;\n    this.createdById = props.createdById;\n    this.createdDateTime = props.createdDateTime;\n    this.attribute = props.attribute;\n    this.roles = props.roles;\n  } // Convert the map into the User object\n\n\n  fromJson(json) {\n    this.clientId = json.get(\"client_id\");\n    this.name = json.get(\"name\");\n    this.createdById = json.get(\"created_by_id\");\n    this.createdDateTime = json.get(\"created_date_time\");\n    this.attribute = new GetClientAttributeResponse().fromJson(json.get(\"attribute\"));\n    this.roles = new GetClientAttributeResponse().fromJson(json.get(\"relationship\"));\n    return this;\n  } // Convert User Object into map\n\n\n  toJson() {\n    let data = new Map();\n    data.set(\"clientId\", this.clientId);\n    data.set(\"name\", this.name);\n    data.set(\"createdById\", this.createdById);\n    data.set(\"createdDateTime\", this.createdDateTime);\n    data.set(\"attribute\", this.attribute);\n    return data;\n  }\n\n}\nexport class GetClientResponse {\n  constructor(client) {\n    this.client = void 0;\n    this.client = client;\n  } // Convert JSON (containing list of data) to array\n\n\n  fromJson(json) {\n    if (json.get(\"Client\") != null) {\n      this.client = [];\n      json.get(\"Client\").forEach(v => {\n        var _this$client;\n\n        (_this$client = this.client) === null || _this$client === void 0 ? void 0 : _this$client.push(new Client({}).fromJson(new Map(Object.entries(v))));\n      });\n    }\n\n    return this.client;\n  }\n\n}\nexport class ClientAttribute {\n  constructor(props) {\n    this.attributeId = void 0;\n    this.key = void 0;\n    this.value = void 0;\n    this.attributeId = props.attributeId;\n    this.key = props.key;\n    this.value = props.value;\n  } // Convert the map into the User object\n\n\n  fromJson(json) {\n    this.attributeId = json.get(\"client_attr_id\");\n    this.key = json.get(\"key\");\n    this.value = json.get(\"value\");\n    return this;\n  } // Convert User Object into map\n\n\n  toJson() {\n    let data = new Map();\n    data.set(\"client_attr_id\", this.attributeId);\n    data.set(\"key\", this.key);\n    data.set(\"value\", this.value);\n    return data;\n  }\n\n}\nexport class GetClientAttributeResponse {\n  constructor(attribute) {\n    this.attribute = void 0;\n    this.attribute = attribute;\n  } // Convert JSON (containing list of data) to array\n\n\n  fromJson(json) {\n    if (json.get(\"attribute\") != null) {\n      this.attribute = [];\n      json.get(\"attribute\").forEach(v => {\n        var _this$attribute;\n\n        (_this$attribute = this.attribute) === null || _this$attribute === void 0 ? void 0 : _this$attribute.push(new ClientAttribute({}).fromJson(new Map(Object.entries(v))));\n      });\n    }\n\n    return this.attribute;\n  }\n\n}","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/client_model.tsx"],"names":["Client","constructor","props","clientId","name","createdDateTime","createdById","attribute","roles","fromJson","json","get","GetClientAttributeResponse","toJson","data","Map","set","GetClientResponse","client","forEach","v","push","Object","entries","ClientAttribute","attributeId","key","value"],"mappings":"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","sourcesContent":["import { Role } from \"./role_model\";\n\nexport class Client {\n\tclientId?: string;\n\tname?: string;\n\tcreatedDateTime?: string;\n\tcreatedById?: string;\n\tattribute?: Array<ClientAttribute>;\n\troles?: Array<Role>;\n\n\tconstructor(props: {\n\t\tclientId?: string;\n\t\tname?: string;\n\t\tcreatedDateTime?: string;\n\t\tcreatedById?: string;\n\t\tattribute?: Array<ClientAttribute>;\n\t\troles?: Array<Role>;\n\t}) {\n\t\tthis.clientId = props.clientId;\n\t\tthis.name = props.name;\n\t\tthis.createdById = props.createdById;\n\t\tthis.createdDateTime = props.createdDateTime;\n\t\tthis.attribute = props.attribute;\n\t\tthis.roles = props.roles;\n\t}\n\n\t// Convert the map into the User object\n\tfromJson(json: Map<String, any>) {\n\t\tthis.clientId = json.get(\"client_id\");\n\t\tthis.name = json.get(\"name\");\n\t\tthis.createdById = json.get(\"created_by_id\");\n\t\tthis.createdDateTime = json.get(\"created_date_time\");\n\t\tthis.attribute = new GetClientAttributeResponse().fromJson(\n\t\t\tjson.get(\"attribute\")\n\t\t);\n\t\tthis.roles = new GetClientAttributeResponse().fromJson(\n\t\t\tjson.get(\"relationship\")\n\t\t);\n\t\treturn this;\n\t}\n\n\t// Convert User Object into map\n\ttoJson() {\n\t\tlet data = new Map<String, any>();\n\t\tdata.set(\"clientId\", this.clientId);\n\t\tdata.set(\"name\", this.name);\n\t\tdata.set(\"createdById\", this.createdById)\n\t\tdata.set(\"createdDateTime\", this.createdDateTime);\n\t\tdata.set(\"attribute\", this.attribute);\n\n\t\treturn data;\n\t}\n}\n\nexport class GetClientResponse {\n\tclient?: Array<Client>;\n\n\tconstructor(client?: Array<Client>) {\n\t\tthis.client = client;\n\t}\n\n\t// Convert JSON (containing list of data) to array\n\tfromJson(json: Map<String, any>) {\n\t\tif (json.get(\"Client\") != null) {\n\t\t\tthis.client = [];\n\t\t\tjson.get(\"Client\").forEach((v: Map<String, any>) => {\n\t\t\t\tthis.client?.push(\n\t\t\t\t\tnew Client({}).fromJson(new Map(Object.entries(v)))\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\treturn this.client;\n\t}\n}\n\nexport class ClientAttribute {\n\tattributeId?: string;\n\tkey?: string;\n\tvalue?: string;\n\n\tconstructor(props: { attributeId?: string; key?: string; value?: string }) {\n\t\tthis.attributeId = props.attributeId;\n\t\tthis.key = props.key;\n\t\tthis.value = props.value;\n\t}\n\n\t// Convert the map into the User object\n\tfromJson(json: Map<String, any>) {\n\t\tthis.attributeId = json.get(\"client_attr_id\");\n\t\tthis.key = json.get(\"key\");\n\t\tthis.value = json.get(\"value\");\n\n\t\treturn this;\n\t}\n\n\t// Convert User Object into map\n\ttoJson() {\n\t\tlet data = new Map<String, any>();\n\t\tdata.set(\"client_attr_id\", this.attributeId);\n\t\tdata.set(\"key\", this.key);\n\t\tdata.set(\"value\", this.value);\n\n\t\treturn data;\n\t}\n}\n\nexport class GetClientAttributeResponse {\n\tattribute?: Array<ClientAttribute>;\n\n\tconstructor(attribute?: Array<ClientAttribute>) {\n\t\tthis.attribute = attribute;\n\t}\n\n\t// Convert JSON (containing list of data) to array\n\tfromJson(json: Map<String, any>) {\n\t\tif (json.get(\"attribute\") != null) {\n\t\t\tthis.attribute = [];\n\t\t\tjson.get(\"attribute\").forEach((v: Map<String, any>) => {\n\t\t\t\tthis.attribute?.push(\n\t\t\t\t\tnew ClientAttribute({}).fromJson(new Map(Object.entries(v)))\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\treturn this.attribute;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}