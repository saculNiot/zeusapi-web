{"ast":null,"code":"var _jsxFileName = \"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/dashboard/MainDashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Layout, Row, Col, List, message, Skeleton, Popconfirm, Tooltip } from \"antd\";\nimport \"./MainDashboard.less\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { CopyTwoTone, DeleteOutlined, HeartOutlined, ReconciliationOutlined, UserOutlined } from \"@ant-design/icons\";\nimport Nav from \"./Nav\";\nimport { Link, Button as ChakraButton, Stack } from \"@chakra-ui/react\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport Title from \"antd/lib/typography/Title\";\nimport { ClientRepo } from \"../../services/api/repositories/client_repo\";\nimport { RoleRepo } from \"../../services/api/repositories/role_repo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MainDashboard = () => {\n  _s();\n\n  let clientRepo = new ClientRepo();\n  let userRepo = new UserRepo();\n  let roleRepo = new RoleRepo();\n  let history = useHistory(); // Get current sign in User\n\n  const user = useContext(AuthContext); // Handle the state of each option in Menu bar\n\n  const [_viewTitle, setViewTitle] = useState(\"Clients\");\n  const [_viewList, setViewList] = useState([]);\n  const [_listLoading, setListLoading] = useState(true);\n\n  async function getClients() {\n    setViewList([]);\n    let userId = await LocalStorage.getUserID();\n    let apiResult = await clientRepo.getAllClients({\n      userId: userId\n    });\n\n    if (apiResult.isSuccess) {\n      if (apiResult.data.length > 0) apiResult.data.forEach(element => {\n        setViewList(prevState => {\n          return [...prevState, element];\n        });\n      });\n    }\n\n    setListLoading(false);\n  }\n\n  async function getRoles() {\n    setViewList([]);\n    let userId = await LocalStorage.getUserID();\n    let apiResult = await roleRepo.getAllRoles({\n      userId: userId\n    });\n\n    if (apiResult.isSuccess) {\n      if (apiResult.data.length > 0) apiResult.data.forEach(element => {\n        setViewList(prevState => {\n          return [...prevState, element];\n        });\n      });\n    }\n\n    setListLoading(false);\n  }\n\n  async function deleteClient(clientId) {\n    let apiResult = await clientRepo.deleteClient({\n      clientId: clientId\n    });\n\n    if (apiResult.isSuccess) {\n      setListLoading(true);\n      getClients();\n      message.success(\"Delete client success\");\n    } else {\n      message.success(\"Delete Fail\");\n    }\n\n    setListLoading(false);\n  }\n\n  async function deleteRole(roleId) {\n    let apiResult = await roleRepo.deleteRole({\n      roleId: roleId\n    });\n\n    if (apiResult.isSuccess) {\n      setListLoading(true);\n      getRoles();\n      message.success(\"Delete role success\");\n    } else {\n      message.success(\"Delete Fail\");\n    }\n\n    setListLoading(false);\n  }\n\n  useEffect(() => {\n    async function initState() {\n      let userId = await LocalStorage.getUserID();\n      let apiResult = await userRepo.getUserById({\n        userId: userId\n      });\n\n      if (apiResult.isSuccess) {\n        var _usermodel$email, _usermodel$username, _usermodel$packagePla;\n\n        let usermodel = apiResult.data[0];\n        await LocalStorage.setEmail((_usermodel$email = usermodel === null || usermodel === void 0 ? void 0 : usermodel.email) !== null && _usermodel$email !== void 0 ? _usermodel$email : \"\");\n        await LocalStorage.setNickName((_usermodel$username = usermodel === null || usermodel === void 0 ? void 0 : usermodel.username) !== null && _usermodel$username !== void 0 ? _usermodel$username : \"\");\n        await LocalStorage.setPackagePlan((_usermodel$packagePla = usermodel === null || usermodel === void 0 ? void 0 : usermodel.packagePlan) !== null && _usermodel$packagePla !== void 0 ? _usermodel$packagePla : \"free\");\n      }\n    }\n\n    initState();\n    getClients();\n    return () => {\n      setViewTitle(\"\");\n      setViewList([]);\n      setListLoading(true);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"dashboard_row\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 6,\n          className: \"dashboard_col\",\n          span: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 12,\n          className: \"dashboard_col\",\n          span: 12,\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 6,\n            children: [/*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 4,\n              children: [/*#__PURE__*/_jsxDEV(ChakraButton, {\n                leftIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 20\n                }, this),\n                colorScheme: \"blue\",\n                variant: \"solid\",\n                onClick: () => {\n                  history.push(RoutePath.create_client);\n                },\n                children: \"Add client\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(ChakraButton, {\n                leftIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 20\n                }, this),\n                colorScheme: \"orange\",\n                variant: \"solid\",\n                onClick: () => {\n                  history.push(RoutePath.create_role);\n                },\n                children: \"Add Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(ChakraButton, {\n                leftIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 20\n                }, this),\n                colorScheme: \"purple\",\n                variant: \"solid\",\n                onClick: () => {\n                  history.push({\n                    pathname: RoutePath.create_relationship\n                  });\n                },\n                children: \"Add Relationship\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 4,\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                placement: \"topLeft\",\n                title: \"View clients\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: /*#__PURE__*/_jsxDEV(UserOutlined, {\n                    style: {\n                      color: \"#1E90FF\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 12\n                  }, this),\n                  shape: \"round\",\n                  size: \"large\",\n                  onClick: async () => {\n                    setListLoading(true);\n                    setViewTitle(\"Clients\");\n                    getClients();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                placement: \"topLeft\",\n                title: \"View Roles\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: /*#__PURE__*/_jsxDEV(ReconciliationOutlined, {\n                    style: {\n                      color: \"\t#FFA500\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 12\n                  }, this),\n                  shape: \"round\",\n                  size: \"large\",\n                  onClick: () => {\n                    setListLoading(true);\n                    setViewTitle(\"Roles\");\n                    getRoles();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                placement: \"topLeft\",\n                title: \"View Relationship\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: /*#__PURE__*/_jsxDEV(HeartOutlined, {\n                    style: {\n                      color: \"#BA55D3\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 12\n                  }, this),\n                  shape: \"round\",\n                  size: \"large\",\n                  onClick: () => {\n                    setViewTitle(\"Relationships\");\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Title, {\n              level: 3,\n              children: _viewTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n            active: true,\n            loading: _listLoading,\n            children: [/*#__PURE__*/_jsxDEV(List, {\n              itemLayout: \"horizontal\",\n              dataSource: _viewList,\n              renderItem: (item, index) => {\n                var _item$createdDateTime;\n\n                return /*#__PURE__*/_jsxDEV(List.Item, {\n                  actions: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                    placement: \"topLeft\",\n                    title: \"Copy graph iframe\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      shape: \"round\",\n                      icon: /*#__PURE__*/_jsxDEV(CopyTwoTone, {\n                        twoToneColor: \"#270949\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 276,\n                        columnNumber: 15\n                      }, this),\n                      size: \"large\",\n                      onClick: async () => {}\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 13\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n                    title: \"Are you sure you want to delete?\",\n                    onCancel: () => {},\n                    onConfirm: async () => {\n                      switch (_viewTitle) {\n                        case \"Clients\":\n                          deleteClient(item.clientId);\n                          break;\n\n                        case \"Roles\":\n                          deleteRole(item.roleId);\n                          break;\n\n                        default:\n                          break;\n                      }\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      shape: \"round\",\n                      icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n                        style: {\n                          color: \"red\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 305,\n                        columnNumber: 15\n                      }, this),\n                      size: \"large\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 13\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 12\n                  }, this)],\n                  children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n                    title: /*#__PURE__*/_jsxDEV(Link, {\n                      onClick: () => {\n                        switch (_viewTitle) {\n                          case \"Clients\":\n                            history.push({\n                              pathname: RoutePath.create_client,\n                              state: {\n                                clientId: item.clientId\n                              }\n                            });\n                            break;\n\n                          case \"Roles\":\n                            history.push({\n                              pathname: RoutePath.create_role,\n                              state: {\n                                roleId: item.roleId\n                              }\n                            });\n                            break;\n\n                          default:\n                            break;\n                        }\n                      },\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 13\n                    }, this),\n                    description: `Created on ${new Date((_item$createdDateTime = item.createdDateTime) !== null && _item$createdDateTime !== void 0 ? _item$createdDateTime : \"\").toLocaleString()}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 10\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 8\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          xl: 12,\n          className: \"dashboard_col\",\n          span: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MainDashboard, \"qpAEucZbR4vZvk1PuSHE4BxXCAc=\", false, function () {\n  return [useHistory];\n});\n\n_c = MainDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainDashboard\");","map":{"version":3,"sources":["/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/dashboard/MainDashboard.tsx"],"names":["React","useContext","useEffect","useState","useHistory","Button","Layout","Row","Col","List","message","Skeleton","Popconfirm","Tooltip","RoutePath","AuthContext","LocalStorage","UserRepo","CopyTwoTone","DeleteOutlined","HeartOutlined","ReconciliationOutlined","UserOutlined","Nav","Link","ChakraButton","Stack","AddIcon","Title","ClientRepo","RoleRepo","MainDashboard","clientRepo","userRepo","roleRepo","history","user","_viewTitle","setViewTitle","_viewList","setViewList","_listLoading","setListLoading","getClients","userId","getUserID","apiResult","getAllClients","isSuccess","data","length","forEach","element","prevState","getRoles","getAllRoles","deleteClient","clientId","success","deleteRole","roleId","initState","getUserById","usermodel","setEmail","email","setNickName","username","setPackagePlan","packagePlan","push","create_client","create_role","pathname","create_relationship","color","height","item","index","state","name","Date","createdDateTime","toLocaleString"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport {\n\tButton,\n\tLayout,\n\tMenu,\n\tTypography,\n\tRow,\n\tCol,\n\tSpace,\n\tDivider,\n\tCard,\n\tList,\n\tAvatar,\n\tmessage,\n\tSkeleton,\n\tPopconfirm,\n\tSpin,\n\tTooltip,\n} from \"antd\";\nimport \"./MainDashboard.less\";\nimport codagenceWordLogo from \"../../assets/logo/Codagence_main_logo.png\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { User } from \"../../services/api/models/user_model\";\nimport {\n\tCopyTwoTone,\n\tDeleteOutlined,\n\tEditTwoTone,\n\tEyeInvisibleOutlined,\n\tHeartOutlined,\n\tHomeTwoTone,\n\tPlusCircleOutlined,\n\tReconciliationOutlined,\n\tUserOutlined,\n} from \"@ant-design/icons\";\nimport { UserUrl } from \"../../services/api/models/url_model\";\nimport Nav from \"./Nav\";\nimport mixpanel from \"mixpanel-browser\";\nimport { Link, Button as ChakraButton, Stack } from \"@chakra-ui/react\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport Title from \"antd/lib/typography/Title\";\nimport { ClientRepo } from \"../../services/api/repositories/client_repo\";\nimport { Client } from \"../../services/api/models/client_model\";\nimport { RoleRepo } from \"../../services/api/repositories/role_repo\";\n\nexport const MainDashboard: React.FC<any> = () => {\n\tlet clientRepo = new ClientRepo();\n\n\tlet userRepo = new UserRepo();\n\n\tlet roleRepo = new RoleRepo();\n\n\tlet history = useHistory();\n\n\t// Get current sign in User\n\tconst user = useContext(AuthContext);\n\n\t// Handle the state of each option in Menu bar\n\n\tconst [_viewTitle, setViewTitle] = useState<string>(\"Clients\");\n\n\tconst [_viewList, setViewList] = useState<Array<any>>([]);\n\n\tconst [_listLoading, setListLoading] = useState<boolean>(true);\n\n\tasync function getClients() {\n\t\tsetViewList([]);\n\n\t\tlet userId = await LocalStorage.getUserID();\n\t\tlet apiResult = await clientRepo.getAllClients({\n\t\t\tuserId: userId!,\n\t\t});\n\n\t\tif (apiResult.isSuccess) {\n\t\t\tif (apiResult.data.length > 0)\n\t\t\t\tapiResult.data.forEach((element: Client) => {\n\t\t\t\t\tsetViewList((prevState) => {\n\t\t\t\t\t\treturn [...prevState, element];\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\n\tasync function getRoles() {\n\t\tsetViewList([]);\n\t\tlet userId = await LocalStorage.getUserID();\n\t\tlet apiResult = await roleRepo.getAllRoles({\n\t\t\tuserId: userId!,\n\t\t});\n\n\t\tif (apiResult.isSuccess) {\n\t\t\tif (apiResult.data.length > 0)\n\t\t\t\tapiResult.data.forEach((element: Client) => {\n\t\t\t\t\tsetViewList((prevState) => {\n\t\t\t\t\t\treturn [...prevState, element];\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\n\tasync function deleteClient(clientId: string) {\n\t\tlet apiResult = await clientRepo.deleteClient({\n\t\t\tclientId: clientId!,\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tsetListLoading(true);\n\t\t\tgetClients();\n\t\t\tmessage.success(\"Delete client success\");\n\t\t} else {\n\t\t\tmessage.success(\"Delete Fail\");\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\tasync function deleteRole(roleId: string) {\n\t\tlet apiResult = await roleRepo.deleteRole({\n\t\t\troleId: roleId!,\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tsetListLoading(true);\n\t\t\tgetRoles();\n\t\t\tmessage.success(\"Delete role success\");\n\t\t} else {\n\t\t\tmessage.success(\"Delete Fail\");\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\tuseEffect(() => {\n\t\tasync function initState() {\n\t\t\tlet userId = await LocalStorage.getUserID();\n\t\t\tlet apiResult = await userRepo.getUserById({\n\t\t\t\tuserId: userId!,\n\t\t\t});\n\t\t\tif (apiResult.isSuccess) {\n\t\t\t\tlet usermodel: User = apiResult.data[0];\n\t\t\t\tawait LocalStorage.setEmail(usermodel?.email ?? \"\");\n\t\t\t\tawait LocalStorage.setNickName(usermodel?.username ?? \"\");\n\t\t\t\tawait LocalStorage.setPackagePlan(\n\t\t\t\t\tusermodel?.packagePlan ?? \"free\"\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tinitState();\n\t\tgetClients();\n\n\t\treturn () => {\n\t\t\tsetViewTitle(\"\");\n\t\t\tsetViewList([]);\n\t\t\tsetListLoading(true);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Nav />\n\t\t\t<Layout>\n\t\t\t\t<Row className=\"dashboard_row\">\n\t\t\t\t\t<Col xs={24} xl={6} className=\"dashboard_col\" span={6} />\n\t\t\t\t\t<Col xs={24} xl={12} className=\"dashboard_col\" span={12}>\n\t\t\t\t\t\t<Stack spacing={6}>\n\t\t\t\t\t\t\t<Stack direction=\"row\" spacing={4}>\n\t\t\t\t\t\t\t\t<ChakraButton\n\t\t\t\t\t\t\t\t\tleftIcon={<AddIcon />}\n\t\t\t\t\t\t\t\t\tcolorScheme=\"blue\"\n\t\t\t\t\t\t\t\t\tvariant=\"solid\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\thistory.push(RoutePath.create_client);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd client\n\t\t\t\t\t\t\t\t</ChakraButton>\n\n\t\t\t\t\t\t\t\t<ChakraButton\n\t\t\t\t\t\t\t\t\tleftIcon={<AddIcon />}\n\t\t\t\t\t\t\t\t\tcolorScheme=\"orange\"\n\t\t\t\t\t\t\t\t\tvariant=\"solid\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\thistory.push(RoutePath.create_role);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd Role\n\t\t\t\t\t\t\t\t</ChakraButton>\n\n\t\t\t\t\t\t\t\t<ChakraButton\n\t\t\t\t\t\t\t\t\tleftIcon={<AddIcon />}\n\t\t\t\t\t\t\t\t\tcolorScheme=\"purple\"\n\t\t\t\t\t\t\t\t\tvariant=\"solid\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\thistory.push({\n\t\t\t\t\t\t\t\t\t\t\tpathname: RoutePath.create_relationship,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd Relationship\n\t\t\t\t\t\t\t\t</ChakraButton>\n\t\t\t\t\t\t\t</Stack>\n\n\t\t\t\t\t\t\t<Stack direction=\"row\" spacing={4}>\n\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\tplacement=\"topLeft\"\n\t\t\t\t\t\t\t\t\ttitle=\"View clients\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t<UserOutlined\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"#1E90FF\" }}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\t\tsetListLoading(true);\n\t\t\t\t\t\t\t\t\t\t\tsetViewTitle(\"Clients\");\n\t\t\t\t\t\t\t\t\t\t\tgetClients();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Button>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t<Tooltip placement=\"topLeft\" title=\"View Roles\">\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t<ReconciliationOutlined\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"\t#FFA500\" }}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetListLoading(true);\n\t\t\t\t\t\t\t\t\t\t\tsetViewTitle(\"Roles\");\n\t\t\t\t\t\t\t\t\t\t\tgetRoles();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Button>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\tplacement=\"topLeft\"\n\t\t\t\t\t\t\t\t\ttitle=\"View Relationship\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t<HeartOutlined\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"#BA55D3\" }}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetViewTitle(\"Relationships\");\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Button>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t<Title level={3}>{_viewTitle}</Title>\n\t\t\t\t\t\t</Stack>\n\n\t\t\t\t\t\t<div style={{ height: \"20px\" }}></div>\n\t\t\t\t\t\t<Skeleton active loading={_listLoading}>\n\t\t\t\t\t\t\t<List\n\t\t\t\t\t\t\t\titemLayout=\"horizontal\"\n\t\t\t\t\t\t\t\tdataSource={_viewList}\n\t\t\t\t\t\t\t\trenderItem={(item, index) => (\n\t\t\t\t\t\t\t\t\t<List.Item\n\t\t\t\t\t\t\t\t\t\tactions={[\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"topLeft\"\n\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Copy graph iframe\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CopyTwoTone twoToneColor=\"#270949\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={\"large\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={async () => {}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>,\n\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure you want to delete?\"\n\t\t\t\t\t\t\t\t\t\t\t\tonCancel={() => {}}\n\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tswitch (_viewTitle) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"Clients\":\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteClient(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.clientId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"Roles\":\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteRole(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.roleId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"red\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={\"large\"}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>,\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<List.Item.Meta\n\t\t\t\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tswitch (_viewTitle) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"Clients\":\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRoutePath.create_client,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclientId: item.clientId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"Roles\":\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRoutePath.create_role,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\troleId: item.roleId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tdescription={`Created on ${new Date(\n\t\t\t\t\t\t\t\t\t\t\t\titem.createdDateTime ?? \"\"\n\t\t\t\t\t\t\t\t\t\t\t).toLocaleString()}`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t\t</Skeleton>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={24} xl={12} className=\"dashboard_col\" span={6} />\n\t\t\t\t</Row>\n\t\t\t</Layout>\n\t\t</>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}