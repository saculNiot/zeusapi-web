[{"/Users/gohshengyang/Documents/GitHub/codagence-web/src/index.tsx":"1","/Users/gohshengyang/Documents/GitHub/codagence-web/src/reportWebVitals.ts":"2","/Users/gohshengyang/Documents/GitHub/codagence-web/src/App.tsx":"3","/Users/gohshengyang/Documents/GitHub/codagence-web/src/utils/AuthProvider.tsx":"4","/Users/gohshengyang/Documents/GitHub/codagence-web/src/utils/routePath.tsx":"5","/Users/gohshengyang/Documents/GitHub/codagence-web/src/utils/AuthContext.tsx":"6","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/login/ForgotPassword.tsx":"7","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/register/Register.tsx":"8","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/url/FillParam.tsx":"9","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/register/EmailVerification.tsx":"10","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/payment/CheckoutPayment.tsx":"11","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/url/FillUrl.tsx":"12","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/home/Home.tsx":"13","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/profile/UserProfile.tsx":"14","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/payment/ProductChoices.tsx":"15","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/report/report.tsx":"16","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/dashboard/MainDashboard.tsx":"17","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/url/FillField.tsx":"18","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/profile/ResetPassword.tsx":"19","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/graph_editor/GraphEditor.tsx":"20","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/login/Login.tsx":"21","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/support/Contact.tsx":"22","/Users/gohshengyang/Documents/GitHub/codagence-web/src/utils/firebaseServices.tsx":"23","/Users/gohshengyang/Documents/GitHub/codagence-web/src/utils/components.tsx":"24","/Users/gohshengyang/Documents/GitHub/codagence-web/src/utils/encryption.tsx":"25","/Users/gohshengyang/Documents/GitHub/codagence-web/src/utils/localStorage.tsx":"26","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/graph_display/GraphPreview.tsx":"27","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/chartManager/BarChart.tsx":"28","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/sider/PageSider.tsx":"29","/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/repositories/url_repo.tsx":"30","/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/repositories/support_repo.tsx":"31","/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/repositories/user_repo.tsx":"32","/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/repositories/payment_repo.tsx":"33","/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/repositories/report_repo.tsx":"34","/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/repositories/file_repo.tsx":"35","/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/models/user_model.tsx":"36","/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/response.tsx":"37","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/chartManager/ChartColor.tsx":"38","/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/networking.tsx":"39","/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/models/url_model.tsx":"40","/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/models/support_model.tsx":"41","/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/models/payment_model.tsx":"42","/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/models/report_model.tsx":"43","/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/models/file_model.tsx":"44","/Users/gohshengyang/Documents/GitHub/codagence-web/src/utils/constants.tsx":"45","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/graph_display/GraphDisplay.tsx":"46","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/home/Nav.tsx":"47","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/home/Hero.tsx":"48","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/home/Pricing.tsx":"49","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/home/Footer.tsx":"50","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/dashboard/Nav.tsx":"51","/Users/gohshengyang/Documents/GitHub/codagence-web/src/utils/configSetup.ts":"52","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/home/NewsLetter.tsx":"53","/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/repositories/newsletter_repo.tsx":"54","/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/models/newsletter_model.tsx":"55","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/home/Features.tsx":"56","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/index.tsx":"57","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/reportWebVitals.ts":"58","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/App.tsx":"59","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/utils/AuthProvider.tsx":"60","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/utils/configSetup.ts":"61","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/utils/routePath.tsx":"62","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/utils/localStorage.tsx":"63","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/utils/AuthContext.tsx":"64","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/home/Home.tsx":"65","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/login/ForgotPassword.tsx":"66","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/login/Login.tsx":"67","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/register/EmailVerification.tsx":"68","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/profile/ResetPassword.tsx":"69","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/url/FillUrl.tsx":"70","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/url/FillParam.tsx":"71","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/url/FillField.tsx":"72","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/dashboard/MainDashboard.tsx":"73","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/report/report.tsx":"74","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/graph_display/GraphDisplay.tsx":"75","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/graph_editor/GraphEditor.tsx":"76","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/profile/UserProfile.tsx":"77","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/register/Register.tsx":"78","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/payment/ProductChoices.tsx":"79","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/payment/CheckoutPayment.tsx":"80","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/home/Pricing.tsx":"81","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/utils/firebaseServices.tsx":"82","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/home/Features.tsx":"83","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/home/Footer.tsx":"84","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/home/Nav.tsx":"85","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/home/Hero.tsx":"86","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/home/NewsLetter.tsx":"87","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/utils/components.tsx":"88","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/utils/encryption.tsx":"89","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/repositories/user_repo.tsx":"90","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/models/user_model.tsx":"91","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/graph_display/GraphPreview.tsx":"92","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/repositories/url_repo.tsx":"93","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/sider/PageSider.tsx":"94","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/chartManager/BarChart.tsx":"95","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/repositories/file_repo.tsx":"96","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/repositories/report_repo.tsx":"97","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/response.tsx":"98","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/repositories/payment_repo.tsx":"99","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/repositories/newsletter_repo.tsx":"100","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/networking.tsx":"101","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/models/url_model.tsx":"102","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/chartManager/ChartColor.tsx":"103","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/models/file_model.tsx":"104","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/models/newsletter_model.tsx":"105","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/models/payment_model.tsx":"106","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/models/report_model.tsx":"107","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/utils/constants.tsx":"108","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/dashboard/Nav.tsx":"109","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/index.tsx":"110","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/reportWebVitals.ts":"111","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/App.tsx":"112","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/utils/AuthProvider.tsx":"113","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/utils/configSetup.ts":"114","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/utils/routePath.tsx":"115","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/utils/localStorage.tsx":"116","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/utils/AuthContext.tsx":"117","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/login/Login.tsx":"118","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/payment/ProductChoices.tsx":"119","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/payment/CheckoutPayment.tsx":"120","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/register/Register.tsx":"121","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/profile/ResetPassword.tsx":"122","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/login/ForgotPassword.tsx":"123","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/home/Home.tsx":"124","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/profile/UserProfile.tsx":"125","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/register/EmailVerification.tsx":"126","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/utils/components.tsx":"127","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/utils/firebaseServices.tsx":"128","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/utils/encryption.tsx":"129","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/home/Pricing.tsx":"130","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/repositories/user_repo.tsx":"131","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/home/Features.tsx":"132","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/home/NewsLetter.tsx":"133","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/home/Footer.tsx":"134","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/home/Hero.tsx":"135","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/repositories/payment_repo.tsx":"136","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/response.tsx":"137","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/user_model.tsx":"138","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/url_model.tsx":"139","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/networking.tsx":"140","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/repositories/newsletter_repo.tsx":"141","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/payment_model.tsx":"142","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/utils/constants.tsx":"143","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/newsletter_model.tsx":"144","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/home/Nav.tsx":"145","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/file_model.tsx":"146","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/report_model.tsx":"147","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/dashboard/MainDashboard.tsx":"148","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/dashboard/Nav.tsx":"149","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/client/CreateClient.tsx":"150","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/repositories/client_repo.tsx":"151","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/client_model.tsx":"152","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/role/CreateRole.tsx":"153","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/repositories/role_repo.tsx":"154","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/role_model.tsx":"155","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/relationship/CreateRelationship.tsx":"156","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/repositories/relationship_repo.tsx":"157","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/relationship_model.tsx":"158","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/client/ClientList.tsx":"159","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/role/RoleList.tsx":"160","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/accesslog/AccessLogList.tsx":"161","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/repositories/accesslog_repo.tsx":"162","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/accesslog_model.tsx":"163"},{"size":683,"mtime":1649139752708,"results":"164","hashOfConfig":"165"},{"size":425,"mtime":1639853399000,"results":"166","hashOfConfig":"165"},{"size":3559,"mtime":1650423414604,"results":"167","hashOfConfig":"165"},{"size":512,"mtime":1650422972621,"results":"168","hashOfConfig":"165"},{"size":888,"mtime":1648823074911,"results":"169","hashOfConfig":"165"},{"size":147,"mtime":1649922137958,"results":"170","hashOfConfig":"165"},{"size":2266,"mtime":1650080518060,"results":"171","hashOfConfig":"165"},{"size":6269,"mtime":1650377461878,"results":"172","hashOfConfig":"165"},{"size":6083,"mtime":1650377461878,"results":"173","hashOfConfig":"165"},{"size":4395,"mtime":1650081423573,"results":"174","hashOfConfig":"165"},{"size":2059,"mtime":1650093109244,"results":"175","hashOfConfig":"165"},{"size":6052,"mtime":1650134360088,"results":"176","hashOfConfig":"165"},{"size":3819,"mtime":1650455751037,"results":"177","hashOfConfig":"165"},{"size":5256,"mtime":1650377461878,"results":"178","hashOfConfig":"165"},{"size":265,"mtime":1650377461900,"results":"179","hashOfConfig":"165"},{"size":5793,"mtime":1650377461917,"results":"180","hashOfConfig":"165"},{"size":7727,"mtime":1650377461994,"results":"181","hashOfConfig":"165"},{"size":7027,"mtime":1650377461878,"results":"182","hashOfConfig":"165"},{"size":2361,"mtime":1650092280652,"results":"183","hashOfConfig":"165"},{"size":13290,"mtime":1650377461900,"results":"184","hashOfConfig":"165"},{"size":6605,"mtime":1650377461878,"results":"185","hashOfConfig":"165"},{"size":4019,"mtime":1641879137760,"results":"186","hashOfConfig":"165"},{"size":2009,"mtime":1649990177450,"results":"187","hashOfConfig":"165"},{"size":10820,"mtime":1650186903728,"results":"188","hashOfConfig":"165"},{"size":485,"mtime":1641543439151,"results":"189","hashOfConfig":"165"},{"size":1312,"mtime":1650118033568,"results":"190","hashOfConfig":"165"},{"size":2675,"mtime":1650358390803,"results":"191","hashOfConfig":"165"},{"size":2025,"mtime":1648561305505,"results":"192","hashOfConfig":"165"},{"size":9339,"mtime":1650377461878,"results":"193","hashOfConfig":"165"},{"size":14619,"mtime":1648972295566,"results":"194","hashOfConfig":"165"},{"size":1833,"mtime":1641543439148,"results":"195","hashOfConfig":"165"},{"size":4012,"mtime":1645098418761,"results":"196","hashOfConfig":"165"},{"size":4302,"mtime":1649857069418,"results":"197","hashOfConfig":"165"},{"size":1209,"mtime":1642776857710,"results":"198","hashOfConfig":"165"},{"size":1333,"mtime":1642776857710,"results":"199","hashOfConfig":"165"},{"size":2106,"mtime":1650377461877,"results":"200","hashOfConfig":"165"},{"size":236,"mtime":1641543439150,"results":"201","hashOfConfig":"165"},{"size":631,"mtime":1645804693904,"results":"202","hashOfConfig":"165"},{"size":4641,"mtime":1650377461877,"results":"203","hashOfConfig":"165"},{"size":8414,"mtime":1650377461877,"results":"204","hashOfConfig":"165"},{"size":1295,"mtime":1641543439147,"results":"205","hashOfConfig":"165"},{"size":1714,"mtime":1650377461878,"results":"206","hashOfConfig":"165"},{"size":743,"mtime":1642497288940,"results":"207","hashOfConfig":"165"},{"size":1547,"mtime":1642776857710,"results":"208","hashOfConfig":"165"},{"size":438,"mtime":1646328390591,"results":"209","hashOfConfig":"165"},{"size":3127,"mtime":1650377461900,"results":"210","hashOfConfig":"165"},{"size":8269,"mtime":1650094098155,"results":"211","hashOfConfig":"165"},{"size":4489,"mtime":1650471793535,"results":"212","hashOfConfig":"165"},{"size":4436,"mtime":1650269509213,"results":"213","hashOfConfig":"165"},{"size":3313,"mtime":1650248047896,"results":"214","hashOfConfig":"165"},{"size":5639,"mtime":1650094082043,"results":"215","hashOfConfig":"165"},{"size":689,"mtime":1650355280971,"results":"216","hashOfConfig":"165"},{"size":5110,"mtime":1650377461900,"results":"217","hashOfConfig":"165"},{"size":1481,"mtime":1650374492901,"results":"218","hashOfConfig":"165"},{"size":383,"mtime":1650374318506,"results":"219","hashOfConfig":"165"},{"size":2690,"mtime":1650471863707,"results":"220","hashOfConfig":"165"},{"size":683,"mtime":1649139752708,"results":"221","hashOfConfig":"222"},{"size":425,"mtime":1639853399000,"results":"223","hashOfConfig":"222"},{"size":3559,"mtime":1650423414604,"results":"224","hashOfConfig":"222"},{"size":512,"mtime":1650422972621,"results":"225","hashOfConfig":"222"},{"size":689,"mtime":1650355280971,"results":"226","hashOfConfig":"222"},{"size":888,"mtime":1648823074911,"results":"227","hashOfConfig":"222"},{"size":1312,"mtime":1650118033568,"results":"228","hashOfConfig":"222"},{"size":147,"mtime":1649922137958,"results":"229","hashOfConfig":"222"},{"size":3819,"mtime":1650455751037,"results":"230","hashOfConfig":"222"},{"size":2266,"mtime":1650080518060,"results":"231","hashOfConfig":"222"},{"size":6605,"mtime":1650377461878,"results":"232","hashOfConfig":"222"},{"size":4395,"mtime":1650081423573,"results":"233","hashOfConfig":"222"},{"size":2361,"mtime":1650092280652,"results":"234","hashOfConfig":"222"},{"size":6052,"mtime":1650134360088,"results":"235","hashOfConfig":"222"},{"size":6083,"mtime":1650377461878,"results":"236","hashOfConfig":"222"},{"size":7027,"mtime":1650377461878,"results":"237","hashOfConfig":"222"},{"size":7727,"mtime":1650377461994,"results":"238","hashOfConfig":"222"},{"size":5793,"mtime":1650377461917,"results":"239","hashOfConfig":"222"},{"size":3127,"mtime":1650377461900,"results":"240","hashOfConfig":"222"},{"size":13290,"mtime":1650377461900,"results":"241","hashOfConfig":"222"},{"size":5256,"mtime":1650377461878,"results":"242","hashOfConfig":"222"},{"size":6269,"mtime":1650377461878,"results":"243","hashOfConfig":"222"},{"size":265,"mtime":1650377461900,"results":"244","hashOfConfig":"222"},{"size":2059,"mtime":1650093109244,"results":"245","hashOfConfig":"222"},{"size":4436,"mtime":1650269509213,"results":"246","hashOfConfig":"222"},{"size":2009,"mtime":1649990177450,"results":"247","hashOfConfig":"222"},{"size":2690,"mtime":1650471863707,"results":"248","hashOfConfig":"222"},{"size":3313,"mtime":1650248047896,"results":"249","hashOfConfig":"222"},{"size":8269,"mtime":1650094098155,"results":"250","hashOfConfig":"222"},{"size":4489,"mtime":1650471793535,"results":"251","hashOfConfig":"222"},{"size":5110,"mtime":1650377461900,"results":"252","hashOfConfig":"222"},{"size":10820,"mtime":1650186903728,"results":"253","hashOfConfig":"222"},{"size":485,"mtime":1641543439151,"results":"254","hashOfConfig":"222"},{"size":4012,"mtime":1645098418761,"results":"255","hashOfConfig":"222"},{"size":2106,"mtime":1650377461877,"results":"256","hashOfConfig":"222"},{"size":2675,"mtime":1650358390803,"results":"257","hashOfConfig":"222"},{"size":14619,"mtime":1648972295566,"results":"258","hashOfConfig":"222"},{"size":9339,"mtime":1650377461878,"results":"259","hashOfConfig":"222"},{"size":2025,"mtime":1648561305505,"results":"260","hashOfConfig":"222"},{"size":1333,"mtime":1642776857710,"results":"261","hashOfConfig":"222"},{"size":1209,"mtime":1642776857710,"results":"262","hashOfConfig":"222"},{"size":236,"mtime":1641543439150,"results":"263","hashOfConfig":"222"},{"size":4302,"mtime":1649857069418,"results":"264","hashOfConfig":"222"},{"size":1481,"mtime":1650374492901,"results":"265","hashOfConfig":"222"},{"size":4641,"mtime":1650377461877,"results":"266","hashOfConfig":"222"},{"size":8414,"mtime":1650377461877,"results":"267","hashOfConfig":"222"},{"size":631,"mtime":1645804693904,"results":"268","hashOfConfig":"222"},{"size":1547,"mtime":1642776857710,"results":"269","hashOfConfig":"222"},{"size":383,"mtime":1650374318506,"results":"270","hashOfConfig":"222"},{"size":1714,"mtime":1650377461878,"results":"271","hashOfConfig":"222"},{"size":743,"mtime":1642497288940,"results":"272","hashOfConfig":"222"},{"size":438,"mtime":1646328390591,"results":"273","hashOfConfig":"222"},{"size":5639,"mtime":1650094082043,"results":"274","hashOfConfig":"222"},{"size":683,"mtime":1649139752708,"results":"275","hashOfConfig":"276"},{"size":425,"mtime":1639853399000,"results":"277","hashOfConfig":"276"},{"size":3592,"mtime":1653901182182,"results":"278","hashOfConfig":"276"},{"size":512,"mtime":1652440117418,"results":"279","hashOfConfig":"276"},{"size":676,"mtime":1652440135311,"results":"280","hashOfConfig":"276"},{"size":1206,"mtime":1653901161644,"results":"281","hashOfConfig":"276"},{"size":1292,"mtime":1652515110161,"results":"282","hashOfConfig":"276"},{"size":147,"mtime":1649922137958,"results":"283","hashOfConfig":"276"},{"size":4247,"mtime":1652529551032,"results":"284","hashOfConfig":"276"},{"size":265,"mtime":1650377461900,"results":"285","hashOfConfig":"276"},{"size":1960,"mtime":1652437909791,"results":"286","hashOfConfig":"276"},{"size":6257,"mtime":1652535035060,"results":"287","hashOfConfig":"276"},{"size":2083,"mtime":1652534551843,"results":"288","hashOfConfig":"276"},{"size":1966,"mtime":1652437909750,"results":"289","hashOfConfig":"276"},{"size":3590,"mtime":1653375105945,"results":"290","hashOfConfig":"276"},{"size":4909,"mtime":1652538262324,"results":"291","hashOfConfig":"276"},{"size":2808,"mtime":1652533737982,"results":"292","hashOfConfig":"276"},{"size":13140,"mtime":1653462611072,"results":"293","hashOfConfig":"276"},{"size":2009,"mtime":1649990177450,"results":"294","hashOfConfig":"276"},{"size":637,"mtime":1652521350033,"results":"295","hashOfConfig":"276"},{"size":3939,"mtime":1653462611117,"results":"296","hashOfConfig":"276"},{"size":5468,"mtime":1652534930218,"results":"297","hashOfConfig":"276"},{"size":2690,"mtime":1650471863707,"results":"298","hashOfConfig":"276"},{"size":5203,"mtime":1653462611116,"results":"299","hashOfConfig":"276"},{"size":2646,"mtime":1653375608473,"results":"300","hashOfConfig":"276"},{"size":3137,"mtime":1653371467438,"results":"301","hashOfConfig":"276"},{"size":5808,"mtime":1653887643417,"results":"302","hashOfConfig":"276"},{"size":236,"mtime":1641543439150,"results":"303","hashOfConfig":"276"},{"size":2432,"mtime":1652538331591,"results":"304","hashOfConfig":"276"},{"size":8414,"mtime":1652529468310,"results":"305","hashOfConfig":"276"},{"size":6764,"mtime":1653894872691,"results":"306","hashOfConfig":"276"},{"size":2072,"mtime":1653887643417,"results":"307","hashOfConfig":"276"},{"size":1714,"mtime":1650377461878,"results":"308","hashOfConfig":"276"},{"size":433,"mtime":1652440453336,"results":"309","hashOfConfig":"276"},{"size":383,"mtime":1650374318506,"results":"310","hashOfConfig":"276"},{"size":8014,"mtime":1653830519076,"results":"311","hashOfConfig":"276"},{"size":1547,"mtime":1642776857710,"results":"312","hashOfConfig":"276"},{"size":743,"mtime":1642497288940,"results":"313","hashOfConfig":"276"},{"size":11815,"mtime":1653901468140,"results":"314","hashOfConfig":"276"},{"size":5639,"mtime":1652603225698,"results":"315","hashOfConfig":"276"},{"size":4160,"mtime":1653462611136,"results":"316","hashOfConfig":"276"},{"size":8010,"mtime":1653895384546,"results":"317","hashOfConfig":"276"},{"size":3314,"mtime":1654021402010,"results":"318","hashOfConfig":"276"},{"size":4122,"mtime":1653495684273,"results":"319","hashOfConfig":"276"},{"size":7967,"mtime":1653895171630,"results":"320","hashOfConfig":"276"},{"size":3199,"mtime":1654021387264,"results":"321","hashOfConfig":"276"},{"size":6404,"mtime":1654056884598,"results":"322","hashOfConfig":"276"},{"size":8382,"mtime":1654056880288,"results":"323","hashOfConfig":"276"},{"size":2181,"mtime":1652980947723,"results":"324","hashOfConfig":"276"},{"size":5265,"mtime":1653901031331,"results":"325","hashOfConfig":"276"},{"size":5141,"mtime":1653462611073,"results":"326","hashOfConfig":"276"},{"size":4918,"mtime":1653917565158,"results":"327","hashOfConfig":"276"},{"size":2175,"mtime":1653915281917,"results":"328","hashOfConfig":"276"},{"size":1815,"mtime":1653905630879,"results":"329","hashOfConfig":"276"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},"mhb0kb",{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"332"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"332"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"332"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"332"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"332"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"332"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"332"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"332"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"332"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"332"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"332"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"332"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"332"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"332"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"332"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"332"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"392"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"332"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"332"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"332"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"332"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"332"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"332"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"332"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"332"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"332"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"332"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"332"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tsteyp",{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"492","messages":"493","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"494","messages":"495","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"496","messages":"497","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"498","messages":"499","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"500","messages":"501","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"502","messages":"503","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"504","messages":"505","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"506","messages":"507","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"508","messages":"509","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"510","messages":"511","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"512","messages":"513","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"514","messages":"515","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"516","messages":"517","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"518","messages":"519","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"520","messages":"521","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"526","messages":"527","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"528","messages":"529","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"534","messages":"535","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"536","messages":"537","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"544","messages":"545","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"546","messages":"547","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"550","messages":"551","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"560","messages":"561","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},"180dp59",{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591","usedDeprecatedRules":"582"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"582"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"582"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"582"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"582"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"582"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614","usedDeprecatedRules":"582"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"582"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"582"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"582"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"582"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"637"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640","usedDeprecatedRules":"582"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"582"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"582"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"655"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"658","usedDeprecatedRules":"582"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"655"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"676","usedDeprecatedRules":"582"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"582"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"681","usedDeprecatedRules":"582"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"582"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"689","usedDeprecatedRules":"582"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"698","messages":"699","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"700","usedDeprecatedRules":"582"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"582"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706","usedDeprecatedRules":"582"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"582"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"582"},"/Users/gohshengyang/Documents/GitHub/codagence-web/src/index.tsx",[],["714","715"],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/reportWebVitals.ts",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/App.tsx",["716","717","718","719","720","721","722"],"import {\n\tBrowserRouter,\n\tRedirect,\n\tRoute,\n\tSwitch,\n\tuseHistory,\n\tuseLocation,\n} from \"react-router-dom\";\nimport { Home } from \"./pages/home/Home\";\nimport { ForgotPassword } from \"./pages/login/ForgotPassword\";\nimport { Login } from \"./pages/login/Login\";\nimport { CheckoutPayment } from \"./pages/payment/CheckoutPayment\";\nimport { ProductChoices } from \"./pages/payment/ProductChoices\";\nimport { EmailVerification } from \"./pages/register/EmailVerification\";\nimport { Register } from \"./pages/register/Register\";\nimport { ReportPage } from \"./pages/report/report\";\nimport { Contact } from \"./pages/support/Contact\";\nimport { RoutePath } from \"./utils/routePath\";\nimport { UserProfile } from \"./pages/profile/UserProfile\";\nimport { ResetPassword } from \"./pages/profile/ResetPassword\";\nimport { FillUrl } from \"./pages/url/FillUrl\";\nimport { FillParam } from \"./pages/url/FillParam\";\nimport { FillField } from \"./pages/url/FillField\";\nimport { MainDashboard } from \"./pages/dashboard/MainDashboard\";\nimport { GraphEditor } from \"./pages/graph_editor/GraphEditor\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { GraphDisplay } from \"./pages/graph_display/GraphDisplay\";\nimport { AuthContext } from \"./utils/AuthContext\";\nimport { LocalStorage } from \"./utils/localStorage\";\nimport mixpanel from \"mixpanel-browser\";\n\ninterface AppProps {}\n\nexport const App: React.FC<AppProps> = () => {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Switch>\n\t\t\t\t<Route path={RoutePath.default} exact component={Home} />\n\t\t\t\t<Route path={RoutePath.login} exact component={Login} />\n\t\t\t\t<Route path={RoutePath.register} exact component={Register} />\n\t\t\t\t<Route\n\t\t\t\t\tpath={RoutePath.forgot_password}\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={ForgotPassword}\n\t\t\t\t/>\n\t\t\t\t<Route path={RoutePath.home} exact component={Home} />\n\t\t\t\t<Route\n\t\t\t\t\tpath={RoutePath.email_verification}\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={EmailVerification}\n\t\t\t\t/>\n\t\t\t\t<ProtectedRoute\n\t\t\t\t\tpath={RoutePath.dashboard}\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={MainDashboard}\n\t\t\t\t/>\n\t\t\t\t)\n\t\t\t\t<Route\n\t\t\t\t\tpath={RoutePath.product_choices}\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={ProductChoices}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath={RoutePath.checkout_payment}\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={CheckoutPayment}\n\t\t\t\t/>\n\t\t\t\t<ProtectedRoute\n\t\t\t\t\tpath={RoutePath.user_profile}\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={UserProfile}\n\t\t\t\t/>\n\t\t\t\t<ProtectedRoute\n\t\t\t\t\tpath={RoutePath.report}\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={ReportPage}\n\t\t\t\t/>\n\t\t\t\t<ProtectedRoute\n\t\t\t\t\tpath={RoutePath.reset_password}\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={ResetPassword}\n\t\t\t\t/>\n\t\t\t\t<ProtectedRoute\n\t\t\t\t\tpath={RoutePath.fill_url}\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={FillUrl}\n\t\t\t\t/>\n\t\t\t\t<ProtectedRoute\n\t\t\t\t\tpath={RoutePath.fill_param}\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={FillParam}\n\t\t\t\t/>\n\t\t\t\t<ProtectedRoute\n\t\t\t\t\tpath={RoutePath.fill_field}\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={FillField}\n\t\t\t\t/>\n\t\t\t\t<ProtectedRoute\n\t\t\t\t\tpath={RoutePath.graph_editor}\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={GraphEditor}\n\t\t\t\t/>\n\t\t\t\t{/* Wthout Protector is to This allows the graph viewr to access the graph without login */}\n\t\t\t\t<Route\n\t\t\t\t\tpath={RoutePath.graph_display}\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={GraphDisplay}\n\t\t\t\t/>\n\t\t\t</Switch>\n\t\t</BrowserRouter>\n\t);\n};\n\n// Auth Protector\nconst ProtectedRoute = (props: any) => {\n\tmixpanel.people.set({});\n\treturn LocalStorage.getAuth() ? (\n\t\tLocalStorage.getEmailVerified() === \"false\" ? (\n\t\t\t<Redirect exact to={RoutePath.email_verification} />\n\t\t) : LocalStorage.getPackagePlan() === \"free\" ? (\n\t\t\t<Redirect exact to={RoutePath.product_choices}  />\n\t\t) : (\n\t\t\t<Route {...props} />\n\t\t)\n\t) : (\n\t\t<Redirect exact  to={RoutePath.default}  />\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/utils/AuthProvider.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/utils/routePath.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/utils/AuthContext.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/login/ForgotPassword.tsx",["723","724"],"import React, { ReactElement, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Form, Card } from \"antd\";\nimport \"./ForgotPassword.less\";\nimport { BackHeader, EmailField, FormButton } from \"../../utils/components\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { useHistory } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport mixpanel from \"mixpanel-browser\";\n\nexport const ForgotPassword: React.FC<any> = () => {\n\tlet history = useHistory();\n\n\tconst [isLoading, setLoading] = useState(false);\n\n\tconst onFinish = async (values: any) => {\n\t\tsetLoading(true);\n\t\tmixpanel.track(\"Forgot_Password_Excecute_Reset_Password_Click\");\n\t\tlet firebaseResult = await FirebaseServices.resetPassword(\n\t\t\tvalues[\"email\"]\n\t\t);\n\n\t\tif (firebaseResult.isSuccess) {\n\t\t\t// Go to login page\n\t\t\tmixpanel.track(\"Forgot_Password_Excecute_Reset_Password_Click\", {\n\t\t\t\tResponse: firebaseResult.message,\n\t\t\t});\n\n\t\t\thistory.push(RoutePath.login);\n\t\t\tsetLoading(false);\n\t\t} else {\n\t\t\tmixpanel.track(\"Forgot_Password_Excecute_Reset_Password_Click\", {\n\t\t\t\tResponse: firebaseResult.message,\n\t\t\t});\n\n\t\t\talert(firebaseResult.message);\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Layout className=\"layout\" style={{ overflow: \"auto\" }}>\n\t\t\t<div className=\"navbar\" style={{ backgroundColor: \"#fff\" }}>\n\t\t\t\t<BackHeader title=\"Forgot Password\" />\n\t\t\t</div>\n\t\t\t<Layout\n\t\t\t\tclassName=\"forget_password_content\"\n\t\t\t\tstyle={{ backgroundColor: \"white\" }}\n\t\t\t>\n\t\t\t\t<Row className=\"forgot_password_row\">\n\t\t\t\t\t<Col\n\t\t\t\t\t\txs={24}\n\t\t\t\t\t\txl={8}\n\t\t\t\t\t\tclassName=\"forgot_password_col\"\n\t\t\t\t\t\tspan={8}\n\t\t\t\t\t/>\n\t\t\t\t\t<Col\n\t\t\t\t\t\txs={24}\n\t\t\t\t\t\txl={8}\n\t\t\t\t\t\tclassName=\"forgot_password_col\"\n\t\t\t\t\t\tspan={8}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\t\tname=\"forgot_password\"\n\t\t\t\t\t\t\t\tclassName=\"forgot_password_form\"\n\t\t\t\t\t\t\t\tinitialValues={{ remember: true }}\n\t\t\t\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<EmailField />\n\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t<FormButton\n\t\t\t\t\t\t\t\t\t\ttitle=\"Send Email Verification\"\n\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col\n\t\t\t\t\t\txs={24}\n\t\t\t\t\t\txl={8}\n\t\t\t\t\t\tclassName=\"forgot_password_col\"\n\t\t\t\t\t\tspan={8}\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t</Layout>\n\t\t</Layout>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/register/Register.tsx",["725","726"],"import React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Form, Checkbox, Input, Card, Radio } from \"antd\";\nimport \"./Register.less\";\nimport { useHistory } from \"react-router-dom\";\nimport \"antd-country-phone-input/dist/index.css\";\nimport { ConfigProvider } from \"antd-country-phone-input\";\nimport en from \"world_countries_lists/data/en/world.json\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport {\n\tBackHeader,\n\tConfirmPasswordField,\n\tEmailField,\n\tFormButton,\n\tFormPhoneInput,\n\tPasswordField,\n} from \"../../utils/components\";\nimport { Encryption } from \"../../utils/encryption\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport PhoneInput, { formatPhoneNumberIntl } from \"react-phone-number-input\";\nimport mixpanel from \"mixpanel-browser\";\n\nconst formItemLayout = {\n\tlabelCol: {\n\t\txs: { span: 24 },\n\t\tsm: { span: 8 },\n\t},\n\twrapperCol: {\n\t\txs: { span: 24 },\n\t\tsm: { span: 16 },\n\t},\n};\nconst tailFormItemLayout = {\n\twrapperCol: {\n\t\txs: {\n\t\t\tspan: 24,\n\t\t\toffset: 0,\n\t\t},\n\t\tsm: {\n\t\t\tspan: 16,\n\t\t\toffset: 8,\n\t\t},\n\t},\n};\n\nexport const Register: React.FC<any> = () => {\n\tlet userRepo = new UserRepo();\n\n\tlet history = useHistory();\n\n\t// Is loading flag\n\tconst [isLoading, setLoading] = useState(false);\n\n\tconst onFinish = async (values: any) => {\n\t\tsetLoading(true);\n\n\t\tmixpanel.track(\"Register_Execute_Sign_Up_Click\");\n\n\t\tlet firebaseResult = await FirebaseServices.createAccount(\n\t\t\tvalues[\"email\"],\n\t\t\tvalues[\"password\"]\n\t\t);\n\n\t\tif (firebaseResult.isSuccess) {\n\t\t\tmixpanel.identify(firebaseResult.data.uid);\n\t\t\tmixpanel.track(\"Register_Execute_Sign_Up_Click\", {\n\t\t\t\tfirebaseResult: firebaseResult.message,\n\t\t\t});\n\n\t\t\tlet apiResult = await userRepo.saveUser({\n\t\t\t\tpurpose: \"new_user\",\n\t\t\t\tuserId: firebaseResult.data.uid,\n\t\t\t\temail: values[\"email\"],\n\t\t\t\tpassword: Encryption.encrypt(values[\"password\"]),\n\t\t\t\tnickname: values[\"nickname\"],\n\t\t\t\tphoneNo: formatPhoneNumberIntl(values[\"phone_number\"]),\n\t\t\t\tacctType: values[\"account_type\"],\n\t\t\t\torgName: values[\"organisation_name\"],\n\t\t\t\tpackagePlan: \"free\",\n\t\t\t});\n\n\t\t\tif (apiResult.isSuccess) {\n\t\t\t\talert(\"Email verification has sent to your mail box.\");\n\t\t\t\tmixpanel.track(\"Register_Execute_Sign_Up_Click\", {\n\t\t\t\t\tapiResult: apiResult.message,\n\t\t\t\t});\n\t\t\t\tmixpanel.people.set({\n\t\t\t\t\tEmail: values[\"email\"],\n\t\t\t\t\tNickname: values[\"nickname\"],\n\t\t\t\t\tPhoneNo: formatPhoneNumberIntl(values[\"phone_number\"]),\n\t\t\t\t\tAcctType: values[\"account_type\"],\n\t\t\t\t\tOrgName: values[\"organisation_name\"],\n\t\t\t\t\tPackagePlan: \"free\",\n\t\t\t\t});\n\t\t\t\thistory.replace(RoutePath.product_choices);\n\t\t\t\tsetLoading(false);\n\t\t\t} else {\n\t\t\t\tmixpanel.track(\"Register_Execute_Sign_Up_Click\", {\n\t\t\t\t\tapiResult: apiResult.message,\n\t\t\t\t});\n\t\t\t\talert(apiResult.message);\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t} else {\n\t\t\tmixpanel.track(\"Register_Execute_Sign_Up_Click\", {\n\t\t\t\tfirebaseResult: firebaseResult.message,\n\t\t\t});\n\t\t\talert(firebaseResult.message);\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Layout className=\"register_layout\" style={{ overflow: \"auto\" }}>\n\t\t\t<div\n\t\t\t\tclassName=\"register_navbar\"\n\t\t\t\tstyle={{ backgroundColor: \"#fff\" }}\n\t\t\t>\n\t\t\t\t<BackHeader title=\"Register\" />\n\t\t\t</div>\n\t\t\t<Layout\n\t\t\t\tclassName=\"register_content\"\n\t\t\t\tstyle={{ backgroundColor: \"white\" }}\n\t\t\t>\n\t\t\t\t<Row className=\"register_form_row\">\n\t\t\t\t\t<Col\n\t\t\t\t\t\txs={24}\n\t\t\t\t\t\txl={8}\n\t\t\t\t\t\tclassName=\"register_form_col\"\n\t\t\t\t\t\tspan={8}\n\t\t\t\t\t/>\n\t\t\t\t\t<Col xs={24} xl={8} className=\"register_form_col\" span={8}>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<ConfigProvider locale={en}>\n\t\t\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\t\t\t{...formItemLayout}\n\t\t\t\t\t\t\t\t\tname=\"register\"\n\t\t\t\t\t\t\t\t\tclassName=\"register_form\"\n\t\t\t\t\t\t\t\t\tinitialValues={{ remember: true }}\n\t\t\t\t\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<EmailField />\n\n\t\t\t\t\t\t\t\t\t<PasswordField />\n\n\t\t\t\t\t\t\t\t\t<ConfirmPasswordField />\n\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\tname=\"nickname\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Nickname\"\n\t\t\t\t\t\t\t\t\t\ttooltip=\"What do you want others to call you?\"\n\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Please input your nickname!\",\n\t\t\t\t\t\t\t\t\t\t\t\twhitespace: true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input />\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t\t<FormPhoneInput />\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\tlabel=\"Type\"\n\t\t\t\t\t\t\t\t\t\tname=\"account_type\"\n\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Please choose your account type!\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Radio.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Radio.Button value=\"institute\">\n\t\t\t\t\t\t\t\t\t\t\t\tInstitute\n\t\t\t\t\t\t\t\t\t\t\t</Radio.Button>\n\t\t\t\t\t\t\t\t\t\t\t<Radio.Button value=\"company\">\n\t\t\t\t\t\t\t\t\t\t\t\tCompany\n\t\t\t\t\t\t\t\t\t\t\t</Radio.Button>\n\t\t\t\t\t\t\t\t\t\t</Radio.Group>\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\tlabel=\"Org Name\"\n\t\t\t\t\t\t\t\t\t\tname=\"organisation_name\"\n\t\t\t\t\t\t\t\t\t\ttooltip=\"Please input your Company/Institution name\"\n\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Please input your Company/Institution name!\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input />\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\tname=\"agreement\"\n\t\t\t\t\t\t\t\t\t\tvaluePropName=\"checked\"\n\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvalidator: (_, value) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? Promise.resolve()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: Promise.reject(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Should accept agreement\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t{...tailFormItemLayout}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Checkbox>\n\t\t\t\t\t\t\t\t\t\t\tI have read the{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\thref=\"https://codagence.notion.site/TERMS-AND-CONDITIONS-416ed24afab14050a68e2f0d80357f65\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tmixpanel.track(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Home_View_T&C_Click\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tagreement\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t</Checkbox>\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t<Form.Item {...tailFormItemLayout}>\n\t\t\t\t\t\t\t\t\t\t<FormButton\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Register\"\n\t\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t</ConfigProvider>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col\n\t\t\t\t\t\txs={24}\n\t\t\t\t\t\txl={8}\n\t\t\t\t\t\tclassName=\"register_form_col\"\n\t\t\t\t\t\tspan={8}\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t</Layout>\n\t\t</Layout>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/url/FillParam.tsx",["727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742"],"import React, { ReactElement, useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport {\n\tLayout,\n\tRow,\n\tCol,\n\tForm,\n\tCard,\n\tmessage,\n\tInput,\n\tSpace,\n\tButton,\n\tModal,\n\tDivider,\n\tSpin,\n} from \"antd\";\nimport \"./Url.less\";\nimport { BackHeader, EmailField, FormButton } from \"../../utils/components\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { UrlRepo } from \"../../services/api/repositories/url_repo\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Title from \"antd/lib/typography/Title\";\nimport Text from \"antd/lib/typography/Text\";\nimport Paragraph from \"antd/lib/typography/Paragraph\";\nimport { url } from \"inspector\";\nimport {\n\tCopyOutlined,\n\tMinusCircleOutlined,\n\tPlusOutlined,\n} from \"@ant-design/icons\";\nimport { ConfigParam } from \"../../services/api/models/url_model\";\nimport mixpanel from \"mixpanel-browser\";\n\nexport const FillParam: React.FC<any> = () => {\n\tlet history = useHistory();\n\n\tlet location = useLocation();\n\n\tlet urlRepo = new UrlRepo();\n\n\tconst [form] = Form.useForm();\n\n\tconst [isLoading, setLoading] = useState(true);\n\n\tconst locationState: any = location.state;\n\n\tconst [_url, setUrl] = useState(locationState.url);\n\n\tconst onFinish = async (value: any) => {\n\t\tmixpanel.track(\"Fill_Param_Excecute_Add_Param_Click\");\n\t\tlet unextractedUrl = value[\"url\"];\n\t\tvar extractFromBracket = /\\((.*?)\\)/gi;\n\n\t\tlet configParamList =\n\t\t\tunextractedUrl.match(extractFromBracket) !== null &&\n\t\t\tunextractedUrl.match(extractFromBracket) !== undefined\n\t\t\t\t? unextractedUrl\n\t\t\t\t\t\t.match(extractFromBracket)\n\t\t\t\t\t\t.map((item: string) => {\n\t\t\t\t\t\t\treturn item.replace(\"(\", \"\").replace(\")\", \"\");\n\t\t\t\t\t\t})\n\t\t\t\t: [];\n\n\t\tlet configParam =\n\t\t\tconfigParamList.length > 0\n\t\t\t\t? configParamList.map((item: string, index: number) => {\n\t\t\t\t\t\tif (item.includes(\"=\")) {\n\t\t\t\t\t\t\tlet tempArray = item.split(\"=\");\n\t\t\t\t\t\t\treturn { [tempArray[0]]: tempArray[1] };\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn { [`Value~${item}`]: item };\n\t\t\t\t\t\t}\n\t\t\t\t  })\n\t\t\t\t: [];\n\n\t\t// If no param is added, proceed to next page\n\t\tif (configParam.length === 0) {\n\t\t\thistory.push({\n\t\t\t\tpathname: RoutePath.fill_field,\n\t\t\t\tstate: {\n\t\t\t\t\turl: locationState.url,\n\t\t\t\t\tuserApiId: locationState.userApiId,\n\t\t\t\t\tapiKey: locationState.apiKey,\n\t\t\t\t},\n\t\t\t});\n\t\t} else {\n\t\t\thistory.push({\n\t\t\t\tpathname: RoutePath.fill_field,\n\t\t\t\tstate: {\n\t\t\t\t\turl: locationState.url,\n\t\t\t\t\tapiKey: locationState.apiKey,\n\t\t\t\t\tuserApiId: locationState.userApiId,\n\t\t\t\t\tconfigParam: configParam,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tasync function initState() {\n\t\t\tlet apiResult = await urlRepo.getConfigParamByApiKey({\n\t\t\t\tapiKey: locationState.apiKey,\n\t\t\t});\n\n\t\t\tif (apiResult.isSuccess) {\n\t\t\t\tlet url = _url;\n\t\t\t\tapiResult.data.forEach((item: ConfigParam) => {\n\t\t\t\t\tif (item.name?.includes(\"Value\")) {\n\t\t\t\t\t\turl = url.replace(\n\t\t\t\t\t\t\t`${item.defaultValue}`,\n\t\t\t\t\t\t\t`(${item.defaultValue})`\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\turl = url.replace(\n\t\t\t\t\t\t\t`${item.name}=${item.defaultValue}`,\n\t\t\t\t\t\t\t`(${item.name}=${item.defaultValue})`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tsetUrl(url);\n\t\t\t}\n\t\t\tsetLoading(false);\n\t\t}\n\n\t\tinitState();\n\t}, []);\n\n\tuseEffect(() => form.resetFields(), [_url]);\n\n\treturn (\n\t\t<Layout className=\"layout\" style={{ overflow: \"auto\" }}>\n\t\t\t<div className=\"navbar\" style={{ backgroundColor: \"#fff\" }}>\n\t\t\t\t<BackHeader title=\"Fill in the Parammeter (Optional)\" />\n\t\t\t</div>\n\t\t\t<Layout\n\t\t\t\tclassName=\"url_content\"\n\t\t\t\tstyle={{ backgroundColor: \"white\" }}\n\t\t\t>\n\t\t\t\t<Row className=\"url_row\">\n\t\t\t\t\t<Col xs={24} xl={8} className=\"url_col\" span={8} />\n\t\t\t\t\t<Col xs={24} xl={8} className=\"url_col\" span={8}>\n\t\t\t\t\t\t<Space direction=\"vertical\">\n\t\t\t\t\t\t\t<Paragraph>\n\t\t\t\t\t\t\t\tThe parammeter holds the dynamic value which\n\t\t\t\t\t\t\t\tallows the embedded report to retrieve the\n\t\t\t\t\t\t\t\tcustomary data.\n\t\t\t\t\t\t\t</Paragraph>\n\t\t\t\t\t\t\t<Text>Example:</Text>\n\t\t\t\t\t\t\t<Paragraph>\n\t\t\t\t\t\t\t\t<Text type=\"secondary\">\n\t\t\t\t\t\t\t\t\thttps://www.yourdomain.com/getdata\n\t\t\t\t\t\t\t\t\t<Text strong>\n\t\t\t\t\t\t\t\t\t\t?user_id=default&time=default\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</Paragraph>\n\t\t\t\t\t\t\t<Text>{\"<or>\"}</Text>\n\t\t\t\t\t\t\t<Paragraph>\n\t\t\t\t\t\t\t\t<Text type=\"secondary\">\n\t\t\t\t\t\t\t\t\thttps://www.yourdomain.com/getdata/\n\t\t\t\t\t\t\t\t\t<Text strong>uid123456</Text>\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</Paragraph>\n\t\t\t\t\t\t</Space>\n\t\t\t\t\t\t<Divider></Divider>\n\t\t\t\t\t\t<Space direction=\"vertical\">\n\t\t\t\t\t\t\t<Paragraph>\n\t\t\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\t\t\tUse\n\t\t\t\t\t\t\t\t\t<Text keyboard>(</Text>\n\t\t\t\t\t\t\t\t\t<Text keyboard>)</Text>\n\t\t\t\t\t\t\t\t\tto wrap the parameters which is dynamic.\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</Paragraph>\n\t\t\t\t\t\t\t<Text>Example:</Text>\n\t\t\t\t\t\t\t<Paragraph>\n\t\t\t\t\t\t\t\t<Text type=\"secondary\">\n\t\t\t\t\t\t\t\t\thttps://www.yourdomain.com/getdata\n\t\t\t\t\t\t\t\t\t<Text strong>\n\t\t\t\t\t\t\t\t\t\t?<Text type=\"danger\">(</Text>\n\t\t\t\t\t\t\t\t\t\tuser_id=default\n\t\t\t\t\t\t\t\t\t\t<Text type=\"danger\">)</Text>&\n\t\t\t\t\t\t\t\t\t\t<Text type=\"danger\">(</Text>\n\t\t\t\t\t\t\t\t\t\ttime=default\n\t\t\t\t\t\t\t\t\t\t<Text type=\"danger\">)</Text>\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</Paragraph>\n\t\t\t\t\t\t\t<Text>{\"<or>\"}</Text>\n\t\t\t\t\t\t\t<Paragraph>\n\t\t\t\t\t\t\t\t<Text type=\"secondary\">\n\t\t\t\t\t\t\t\t\thttps://www.yourdomain.com/getdata/\n\t\t\t\t\t\t\t\t\t<Text type=\"danger\">(</Text>\n\t\t\t\t\t\t\t\t\t<Text strong>uid123456</Text>\n\t\t\t\t\t\t\t\t\t<Text type=\"danger\">)</Text>\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</Paragraph>\n\t\t\t\t\t\t</Space>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\t\tname=\"fill_url\"\n\t\t\t\t\t\t\t\tclassName=\"url_form\"\n\t\t\t\t\t\t\t\tinitialValues={{ url: _url }}\n\t\t\t\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t\t\t\t\tform={form}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Spin spinning={isLoading}>\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\tname={\"url\"}\n\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage: \"Missing URL\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input placeholder=\"Key\" />\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t</Spin>\n\n\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t<FormButton\n\t\t\t\t\t\t\t\t\t\ttitle=\"Next\"\n\t\t\t\t\t\t\t\t\t\tisLoading={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={24} xl={8} className=\"url_col\" span={8} />\n\t\t\t\t</Row>\n\t\t\t</Layout>\n\t\t</Layout>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/register/EmailVerification.tsx",["743"],"import React, { useContext, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Card, Form } from \"antd\";\nimport \"./Register.less\";\nimport \"antd-country-phone-input/dist/index.css\";\nimport { BackHeader, FormButton } from \"../../utils/components\";\nimport Title from \"antd/lib/typography/Title\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTimer } from \"react-timer-hook\";\nimport mixpanel from \"mixpanel-browser\";\n\nexport const EmailVerification: React.FC<any> = () => {\n    let history = useHistory();\n\n    const time = new Date();\n    time.setSeconds(time.getSeconds() + 60);\n\n    const {\n        seconds,\n        start,\n        restart,\n    } = useTimer({\n        autoStart: false,\n        expiryTimestamp: time,\n        onExpire: () => {\n            // Show the button on expiring time\n            setBtn(true);\n            // Reset the time to 60 seconds after the expiring time\n            restart(time, false);\n        },\n    });\n\n    // Get current sign in User\n    const user = useContext(AuthContext);\n\n    // Is loading flag\n    const [isLoading, setLoading] = useState(false);\n\n    const [isBtnEnabled, setBtn] = useState(true);\n\n    const onFinish = async (values: any) => {\n        setLoading(true);\n        mixpanel.track(\"Email_Verification_Execute_Email_Verification_Click\");\n\n\n        // If user not found, then proceed to log in page\n        if (user) {\n            //If the meail has verified, proceed to home page\n            if (user?.emailVerified) history.replace(RoutePath.home);\n            await FirebaseServices.sendEmailVerification(user);\n            alert(\"Email verification has sent\");\n            // Start the timer\n            setBtn(false);\n            start();\n        } else {\n            history.replace(RoutePath.login);\n        }\n\n        setLoading(false);\n    };\n\n    return (\n        <Layout className=\"layout\" style={{ overflow: \"auto\" }}>\n            <div className=\"navbar\" style={{ backgroundColor: \"#fff\" }}>\n                <BackHeader title=\"Email Verification\" />\n            </div>\n            <Layout className=\"emailverification_content\" style={{ backgroundColor: \"white\" }}>\n                <Row className=\"register_form_row\">\n                    <Col\n                        xs={24}\n                        xl={8}\n                        className=\"register_form_col\"\n                        span={8}\n                    />\n                    <Col xs={24} xl={8} className=\"register_form_col\" span={8}>\n                        <Card>\n                            <Form\n                                name=\"register\"\n                                className=\"register_form\"\n                                initialValues={{ remember: true }}\n                                onFinish={onFinish}\n                            >\n                                <Title level={4}>\n                                    Email verification has sent to your mailbox.\n                                </Title>\n                                <p>\n                                    If not found, please check your junk mail.\n                                </p>\n                                {isBtnEnabled ? (\n                                    <Form.Item>\n                                        <FormButton\n                                            title=\"Send Email Verification\"\n                                            isLoading={isLoading}\n                                        />\n                                    </Form.Item>\n                                ) : (\n                                    <p>\n                                        {\" \"}\n                                        Please send again in {seconds} second if\n                                        not found.\n                                    </p>\n                                )}\n                            </Form>\n                        </Card>\n                    </Col>\n                    <Col\n                        xs={24}\n                        xl={8}\n                        className=\"register_form_col\"\n                        span={8}\n                    />\n                </Row>\n            </Layout>\n        </Layout>\n    );\n};\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/payment/CheckoutPayment.tsx",["744","745","746","747"],"import React, { useEffect, useState } from \"react\";\nimport \"./CheckoutPayment.less\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport { RoutePath } from \"../../utils/routePath\";\nimport { CheckCircleIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport { Box, Button, Flex, Heading, Text } from \"@chakra-ui/react\";\nimport { Space } from \"antd\";\nimport mixpanel from \"mixpanel-browser\";\n\ninterface CheckoutPaymentProps {}\n\nexport const CheckoutPayment: React.FC<CheckoutPaymentProps> = ({}) => {\n\tconst location = useLocation();\n\n\tconst history = useHistory();\n\n\tconst [checkOutStatus, setCheckoutStatus] = useState<any>();\n\n\tconst onFinish = async () => {\n\t\tsetLoading(true);\n\n\t\thistory.replace(RoutePath.home);\n\n\t\tsetLoading(false);\n\t};\n\n\t// Is loading flag\n\tconst [isLoading, setLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\t// Get the parameter value from url\n\t\tconst data: any = new URLSearchParams(location.search).get(\"status\");\n\t\tsetCheckoutStatus(data);\n\t}, []);\n\n\treturn (\n\t\t<Box textAlign=\"center\" py={10} px={6}>\n\t\t\t<Space direction=\"vertical\">\n\t\t\t\t{checkOutStatus === \"success\" ? (\n\t\t\t\t\t<CheckCircleIcon boxSize={\"50px\"} color={\"green.500\"} />\n\t\t\t\t) : (\n\t\t\t\t\t<Box display=\"inline-block\">\n\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\tflexDirection=\"column\"\n\t\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\t\tbg={\"red.500\"}\n\t\t\t\t\t\t\trounded={\"50px\"}\n\t\t\t\t\t\t\tw={\"55px\"}\n\t\t\t\t\t\t\th={\"55px\"}\n\t\t\t\t\t\t\ttextAlign=\"center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CloseIcon boxSize={\"20px\"} color={\"white\"} />\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t\t<Heading as=\"h2\" size=\"xl\" mt={6} mb={2}>\n\t\t\t\t\tPayment {checkOutStatus}\n\t\t\t\t</Heading>\n\t\t\t\t<Text color={\"gray.500\"}>Please return to the main page.</Text>\n\t\t\t\t<Button\n\t\t\t\t\tdisplay={{ base: \"none\", md: \"inline-flex\" }}\n\t\t\t\t\tfontSize={\"sm\"}\n\t\t\t\t\tfontWeight={600}\n\t\t\t\t\tcolor={\"white\"}\n\t\t\t\t\tbg={\"#270949\"}\n\t\t\t\t\t_hover={{\n\t\t\t\t\t\tbg: \"#4654A3\",\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tmixpanel.track(\"Checkout_Payment_View_Home_Click\");\n\t\t\t\t\t\thistory.replace(RoutePath.default);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tHome\n\t\t\t\t</Button>\n\t\t\t</Space>\n\t\t</Box>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/url/FillUrl.tsx",["748","749","750","751","752"],"import React, { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport {\n\tLayout,\n\tRow,\n\tCol,\n\tForm,\n\tCard,\n\tInput,\n\tTypography,\n\tBadge,\n\tImage,\n\tModal,\n} from \"antd\";\nimport \"./Url.less\";\nimport { BackHeader, FormButton } from \"../../utils/components\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport correctJsonFormat1 from \"../../assets/faq/correct_json_format.png\";\nimport correctJsonFormat2 from \"../../assets/faq/correct_json_format_2.png\";\nimport correctJsonFormat3 from \"../../assets/faq/correct_json_format_3.png\";\nimport wrongJsonFormat1 from \"../../assets/faq/wrong_json_format.png\";\nimport wrongJsonFormat2 from \"../../assets/faq/wrong_json_format_2.png\";\nimport { UrlRepo } from \"../../services/api/repositories/url_repo\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport mixpanel from \"mixpanel-browser\";\n\nconst { Title } = Typography;\n\nexport const FillUrl: React.FC<any> = () => {\n\tlet history = useHistory();\n\n\tlet location = useLocation();\n\n\tlet urlRepo = new UrlRepo();\n\n\tconst [form] = Form.useForm();\n\n\tconst [isLoading, setLoading] = useState(false);\n\n\tconst [_imageSrc, setImageSrc] = useState<any>();\n\n\tconst [_imageModal, setImageModal] = useState(false);\n\n\tconst [_url, setUrl] = useState(\"\");\n\n\tconst [_apiKey, setApiKey] = useState(uuidv4());\n\n\tconst locationState: any = location.state;\n\n\tconst onFinish = async (values: any) => {\n\t\tmixpanel.track(\"Fill_Url_Excecute_Add_Url_Click\");\n\n\t\thistory.push({\n\t\t\tpathname: RoutePath.fill_param,\n\t\t\tstate: {\n\t\t\t\turl: values.url.trim(),\n\t\t\t\tuserApiId: locationState.userApiId,\n\t\t\t\tapiKey: _apiKey,\n\t\t\t},\n\t\t});\n\t};\n\tuseEffect(() => {\n\t\tasync function initState() {\n\t\t\tlet apiResult = await urlRepo.getUrlByApiKey({\n\t\t\t\tapiKey: locationState.apiKey,\n\t\t\t});\n\n\t\t\tif (apiResult.isSuccess) {\n\t\t\t\tsetUrl(apiResult.data[0].url);\n\t\t\t\tsetApiKey(locationState.apiKey);\n\t\t\t}\n\t\t}\n\n\t\tinitState();\n\t}, []);\n\tuseEffect(() => form.resetFields(), [_url]);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"navbar\" style={{ backgroundColor: \"#fff\" }}>\n\t\t\t\t<BackHeader title=\"Fill Url / API\" />\n\t\t\t</div>\n\t\t\t<Modal\n\t\t\t\ttitle=\"JSON format Guidelines\"\n\t\t\t\tcentered\n\t\t\t\tvisible={_imageModal}\n\t\t\t\tonOk={() => setImageModal(false)}\n\t\t\t\tonCancel={() => setImageModal(false)}\n\t\t\t\tdestroyOnClose={true}\n\t\t\t>\n\t\t\t\t<img alt=\"json format instruction\" src={_imageSrc} />\n\t\t\t</Modal>\n\t\t\t<Row className=\"url_row\">\n\t\t\t\t<Col xs={24} xl={8} className=\"url_col\" span={8} />\n\t\t\t\t<Col xs={24} xl={8} className=\"url_col\" span={8}>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\tname=\"fill_url\"\n\t\t\t\t\t\t\tclassName=\"url_form\"\n\t\t\t\t\t\t\tform={form}\n\t\t\t\t\t\t\tinitialValues={{ url: _url }}\n\t\t\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\tname=\"url\"\n\t\t\t\t\t\t\t\tlabel=\"Url/API\"\n\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\tmessage: \"Please input your Url/API!\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Input placeholder=\"Example: https://www.yourdomain.com/getdata\" />\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t<FormButton\n\t\t\t\t\t\t\t\t\ttitle=\"Check\"\n\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<div style={{ height: \"20px\" }}></div>\n\t\t\t\t\t<Title level={5}>JSON Response format</Title>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\txs={24}\n\t\t\t\t\t\t\txl={12}\n\t\t\t\t\t\t\tclassName=\"json_format_col\"\n\t\t\t\t\t\t\tspan={12}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Badge.Ribbon text=\"Correct\" color=\"green\">\n\t\t\t\t\t\t\t\t<div className=\"json_format\">\n\t\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\t\tclassName=\"json_format_image\"\n\t\t\t\t\t\t\t\t\t\talt=\"correct json format 1\"\n\t\t\t\t\t\t\t\t\t\tsrc={correctJsonFormat1}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetImageSrc(correctJsonFormat1);\n\t\t\t\t\t\t\t\t\t\t\tsetImageModal(true);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tpreview={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Badge.Ribbon>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\txs={24}\n\t\t\t\t\t\t\txl={12}\n\t\t\t\t\t\t\tclassName=\"json_format_col\"\n\t\t\t\t\t\t\tspan={12}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Badge.Ribbon text=\"Correct\" color=\"green\">\n\t\t\t\t\t\t\t\t<div className=\"json_format\">\n\t\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\t\tclassName=\"json_format_image\"\n\t\t\t\t\t\t\t\t\t\tsrc={correctJsonFormat2}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetImageSrc(correctJsonFormat2);\n\t\t\t\t\t\t\t\t\t\t\tsetImageModal(true);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tpreview={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Badge.Ribbon>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\txs={24}\n\t\t\t\t\t\t\txl={12}\n\t\t\t\t\t\t\tclassName=\"json_format_col\"\n\t\t\t\t\t\t\tspan={12}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Badge.Ribbon text=\"Correct\" color=\"green\">\n\t\t\t\t\t\t\t\t<div className=\"json_format\">\n\t\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\t\tclassName=\"json_format_image\"\n\t\t\t\t\t\t\t\t\t\talt=\"correct json format 3\"\n\t\t\t\t\t\t\t\t\t\tsrc={correctJsonFormat3}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetImageSrc(correctJsonFormat3);\n\t\t\t\t\t\t\t\t\t\t\tsetImageModal(true);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tpreview={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Badge.Ribbon>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\txs={24}\n\t\t\t\t\t\t\txl={12}\n\t\t\t\t\t\t\tclassName=\"json_format_col\"\n\t\t\t\t\t\t\tspan={12}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Badge.Ribbon text=\"Wrong\" color=\"red\">\n\t\t\t\t\t\t\t\t<div className=\"json_format\">\n\t\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\t\tclassName=\"json_format_image\"\n\t\t\t\t\t\t\t\t\t\talt=\"wrong json format 1\"\n\t\t\t\t\t\t\t\t\t\tsrc={wrongJsonFormat1}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetImageSrc(wrongJsonFormat1);\n\t\t\t\t\t\t\t\t\t\t\tsetImageModal(true);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tpreview={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Badge.Ribbon>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\txs={24}\n\t\t\t\t\t\t\txl={12}\n\t\t\t\t\t\t\tclassName=\"json_format_col\"\n\t\t\t\t\t\t\tspan={12}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Badge.Ribbon text=\"Wrong\" color=\"red\">\n\t\t\t\t\t\t\t\t<div className=\"json_format\">\n\t\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\t\tclassName=\"json_format_image\"\n\t\t\t\t\t\t\t\t\t\talt=\"wrong json format 2\"\n\t\t\t\t\t\t\t\t\t\tsrc={wrongJsonFormat2}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetImageSrc(wrongJsonFormat2);\n\t\t\t\t\t\t\t\t\t\t\tsetImageModal(true);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tpreview={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Badge.Ribbon>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\txs={24}\n\t\t\t\t\t\t\txl={12}\n\t\t\t\t\t\t\tclassName=\"json_format_col\"\n\t\t\t\t\t\t\tspan={12}\n\t\t\t\t\t\t></Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t\t<Col xs={24} xl={8} className=\"url_col\" span={8} />\n\t\t\t</Row>\n\t\t</>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/home/Home.tsx",["753","754","755","756","757","758","759","760","761","762","763","764","765","766","767"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport {\n\tButton,\n\tLayout,\n\tMenu,\n\tTypography,\n\tRow,\n\tCol,\n\tSpace,\n\tDivider,\n\tCard,\n} from \"antd\";\nimport \"./Home.less\";\nimport homeHeaderImg from \"../../assets/illustrations/home_header.png\";\nimport use_case1 from \"../../assets/illustrations/usecase_dashboard.png\";\nimport use_case2 from \"../../assets/illustrations/usecase_visualization_collection.png\";\nimport use_case3 from \"../../assets/illustrations/usecase_internal_sharing.png\";\nimport use_case4 from \"../../assets/illustrations/usecase_presentation.png\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { PricingCards } from \"../../utils/components\";\nimport { PaymentRepo } from \"../../services/api/repositories/payment_repo\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { User } from \"../../services/api/models/user_model\";\nimport Meta from \"antd/lib/card/Meta\";\nimport Nav from \"./Nav\";\nimport Hero from \"./Hero\";\nimport { Heading } from \"@chakra-ui/react\";\nimport Pricing from \"./Pricing\";\nimport Footer from \"./Footer\";\nimport mixpanel from \"mixpanel-browser\";\nimport NewsLetter from \"./NewsLetter\";\nimport Features from \"./Features\";\n\nexport const Home: React.FC<any> = () => {\n\tlet userRepo = new UserRepo();\n\tlet user = useContext(AuthContext);\n\n\tuseEffect(() => {\n\t\tasync function initState() {\n\t\t\tlet userId = await LocalStorage.getUserID();\n\t\t\tlet apiResult = await userRepo.getUserById({\n\t\t\t\tuserId: userId!,\n\t\t\t});\n\t\t\tif (apiResult.isSuccess) {\n\t\t\t\tlet usermodel: User = apiResult.data[0];\n\t\t\t\tawait LocalStorage.setEmail(usermodel?.email ?? \"\");\n\t\t\t\tawait LocalStorage.setNickName(usermodel?.nickname ?? \"\");\n\t\t\t\tawait LocalStorage.setEmailVerified(\n\t\t\t\t\t`${user?.emailVerified}` ?? \"\"\n\t\t\t\t);\n\t\t\t\tawait LocalStorage.setPackagePlan(\n\t\t\t\t\tusermodel?.packagePlan ?? \"free\"\n\t\t\t\t);\n\t\t\t\tmixpanel.identify(usermodel?.userId);\n\t\t\t\tmixpanel.people.set({ PackagePlan: usermodel?.packagePlan });\n\t\t\t}\n\t\t\tmixpanel.people.set({});\n\t\t}\n\n\t\tinitState();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Nav />\n\t\t\t<div style={{ backgroundColor: \"GhostWhite\" }}>\n\t\t\t\t<Hero />\n\t\t\t</div>\n\t\t\t{/* Features */}\n\t\t\t<Features/>\n\t\t\t{/* Usee case */}\n\t\t\t<div id=\"features\" className=\"content_3\">\n\t\t\t\t<Heading fontSize={\"3xl\"}>Use cases</Heading>\n\t\t\t\t<Row className=\"use_case_row\">\n\t\t\t\t\t{usecaseList.map((usecaseList) => (\n\t\t\t\t\t\t<Col xs={24} xl={6} className=\"use_case_col\" span={6}>\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tcover={\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\talt={usecaseList.title}\n\t\t\t\t\t\t\t\t\t\tsrc={usecaseList.image}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Meta\n\t\t\t\t\t\t\t\t\tstyle={{ height: \"130px\" }}\n\t\t\t\t\t\t\t\t\ttitle={usecaseList.title}\n\t\t\t\t\t\t\t\t\tdescription={usecaseList.desc}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t))}\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t\t{/* Pricing */}\n\t\t\t<div style={{ backgroundColor: \"GhostWhite\" }}>\n\t\t\t\t<Pricing />\n\t\t\t</div>\n\t\t\t{/* Newsletter */}\n\t\t\t<NewsLetter />\n\t\t\t{/* Footer */}\n\t\t\t<Footer />\n\t\t</>\n\t);\n};\n\nconst usecaseList = [\n\t{\n\t\timage: use_case1,\n\t\ttitle: \"Quick and Simple\",\n\t\tdesc: \"Hard to customise the analytic dashboard built by template or library? Let us simplify the work.\",\n\t},\n\t{\n\t\timage: use_case2,\n\t\ttitle: \"Easy Data Summarisation\",\n\t\tdesc: \"Summarise your data and insert them into the chart or dashboard without a single line of code.\",\n\t},\n\t{\n\t\timage: use_case3,\n\t\ttitle: \"Fully Managed\",\n\t\tdesc: \"Handle your analytic dashboards all in one workplace.\",\n\t},\n\t{\n\t\timage: use_case4,\n\t\ttitle: \"Embed Dynamically\",\n\t\tdesc: \"Embed the analytic dashboard in everywhere including your mobile app, website or your SaaS .\",\n\t},\n];\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/profile/UserProfile.tsx",["768"],"import { Card, Col, Form, Input, Layout, Radio, Row } from \"antd\";\nimport { ConfigProvider } from \"antd-country-phone-input\";\nimport \"antd-country-phone-input/dist/index.css\";\nimport mixpanel from \"mixpanel-browser\";\nimport React, { useEffect, useState } from \"react\";\nimport { formatPhoneNumberIntl } from \"react-phone-number-input\";\nimport { useHistory } from \"react-router-dom\";\nimport en from \"world_countries_lists/data/en/world.json\";\nimport { User } from \"../../services/api/models/user_model\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { BackHeader, FormButton, FormPhoneInput } from \"../../utils/components\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport \"./UserProfile.less\";\n\nconst formItemLayout = {\n\tlabelCol: {\n\t\txs: { span: 24 },\n\t\tsm: { span: 8 },\n\t},\n\twrapperCol: {\n\t\txs: { span: 24 },\n\t\tsm: { span: 16 },\n\t},\n};\nconst tailFormItemLayout = {\n\twrapperCol: {\n\t\txs: {\n\t\t\tspan: 24,\n\t\t\toffset: 0,\n\t\t},\n\t\tsm: {\n\t\t\tspan: 16,\n\t\t\toffset: 8,\n\t\t},\n\t},\n};\n\nexport const UserProfile: React.FC<any> = () => {\n\tlet userRepo = new UserRepo();\n\n\tlet history = useHistory();\n\n\t// Is btn loading flag\n\tconst [isLoading, setLoading] = useState(false);\n\n\t// Is card loading flag\n\tconst [isCardLoading, setCardLoading] = useState(true);\n\n\tconst [userData, setUserData] = useState(new User({}));\n\n\tconst onFinish = async (values: any) => {\n\t\tlet userId = await LocalStorage.getUserID();\n\t\tsetLoading(true);\n\t\tmixpanel.track(\"Profile_Excecute_Update_Profile_Click\");\n\n\t\tlet apiResult = await userRepo.saveUser({\n\t\t\tpurpose: \"update\",\n\t\t\tuserId: userId!,\n\t\t\tnickname: values[\"nickname\"],\n\t\t\tphoneNo: formatPhoneNumberIntl(values[\"phone_number\"]),\n\t\t\tacctType: values[\"account_type\"],\n\t\t\torgName: values[\"organisation_name\"],\n\t\t});\n\n\t\tif (apiResult.isSuccess) {\n\t\t\talert(\"Update Success\");\n\t\t\tmixpanel.track(\"Profile_Excecute_Update_Profile_Click\", {\n\t\t\t\tapiResult: apiResult.message,\n\t\t\t});\n\n\t\t\tmixpanel.people.set({\n\t\t\t\tNickname: values[\"nickname\"],\n\t\t\t\tPhoneNo: formatPhoneNumberIntl(values[\"phone_number\"]),\n\t\t\t\tAcctType: values[\"account_type\"],\n\t\t\t\tOrgName: values[\"organisation_name\"],\n\t\t\t});\n\t\t\thistory.replace(RoutePath.home);\n\t\t\tsetLoading(false);\n\t\t} else {\n\t\t\tmixpanel.track(\"Profile_Excecute_Update_ProfileClick\", {\n\t\t\t\tapiResult: apiResult.message,\n\t\t\t});\n\n\t\t\talert(apiResult.message);\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tlet userId = await LocalStorage.getUserID();\n\t\t\tlet apiResult = await userRepo.getUserById({\n\t\t\t\tuserId: userId!,\n\t\t\t});\n\t\t\tif (apiResult.isSuccess) {\n\t\t\t\tsetUserData(apiResult.data[0]);\n\t\t\t} else {\n\t\t\t\talert(apiResult.message);\n\t\t\t}\n\t\t\tsetCardLoading(false);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\treturn (\n\t\t<Layout className=\"layout\" style={{ overflow: \"auto\" }}>\n\t\t\t<div className=\"navbar\" style={{ backgroundColor: \"#fff\" }}>\n\t\t\t\t<BackHeader title=\"Profile\" />\n\t\t\t</div>\n\t\t\t<Layout\n\t\t\t\tclassName=\"profile_content\"\n\t\t\t\tstyle={{ backgroundColor: \"white\" }}\n\t\t\t>\n\t\t\t\t<Row className=\"user_profile_row\">\n\t\t\t\t\t<Col xs={24} xl={8} className=\"user_profile_col\" span={8} />\n\t\t\t\t\t<Col xs={24} xl={8} className=\"user_profile_col\" span={8}>\n\t\t\t\t\t\t<Card loading={isCardLoading}>\n\t\t\t\t\t\t\t<ConfigProvider locale={en}>\n\t\t\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\t\t\t{...formItemLayout}\n\t\t\t\t\t\t\t\t\tname=\"register\"\n\t\t\t\t\t\t\t\t\tclassName=\"user_profile_form\"\n\t\t\t\t\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\t\t\t\t\tnickname: userData.nickname ?? \"\",\n\t\t\t\t\t\t\t\t\t\tphone_number: userData.phoneNo ?? \"\",\n\t\t\t\t\t\t\t\t\t\taccount_type: userData.acctType ?? \"\",\n\t\t\t\t\t\t\t\t\t\torganisation_name:\n\t\t\t\t\t\t\t\t\t\t\tuserData.orgName ?? \"\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\tname=\"nickname\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Nickname\"\n\t\t\t\t\t\t\t\t\t\ttooltip=\"What do you want others to call you?\"\n\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Please input your nickname!\",\n\t\t\t\t\t\t\t\t\t\t\t\twhitespace: true,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input />\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t<FormPhoneInput />\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\tlabel=\"Type\"\n\t\t\t\t\t\t\t\t\t\tname=\"account_type\"\n\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Please choose your account type!\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Radio.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Radio.Button value=\"institute\">\n\t\t\t\t\t\t\t\t\t\t\t\tInstitute\n\t\t\t\t\t\t\t\t\t\t\t</Radio.Button>\n\t\t\t\t\t\t\t\t\t\t\t<Radio.Button value=\"company\">\n\t\t\t\t\t\t\t\t\t\t\t\tCompany\n\t\t\t\t\t\t\t\t\t\t\t</Radio.Button>\n\t\t\t\t\t\t\t\t\t\t</Radio.Group>\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\tlabel=\"Org Name\"\n\t\t\t\t\t\t\t\t\t\tname=\"organisation_name\"\n\t\t\t\t\t\t\t\t\t\ttooltip=\"Please input your Company/Institution name\"\n\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Please input your Company/Institution name!\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input />\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t<Form.Item {...tailFormItemLayout}>\n\t\t\t\t\t\t\t\t\t\t<FormButton\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Update\"\n\t\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t</ConfigProvider>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={24} xl={8} className=\"user_profile_col\" span={8} />\n\t\t\t\t</Row>\n\t\t\t</Layout>\n\t\t</Layout>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/payment/ProductChoices.tsx",["769","770","771","772"],"import React, { useContext, useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport \"./ProductChoices.less\";\nimport Pricing from \"../home/Pricing\";\n\n\nexport const ProductChoices: React.FC<any> = () => {\n    return (\n        <Pricing></Pricing>\n    );\n};\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/report/report.tsx",["773","774"],"import {\n  AntDesignOutlined,\n  AppstoreFilled,\n  PlusSquareFilled,\n  QuestionCircleOutlined,\n  ShareAltOutlined,\n  UserOutlined,\n} from \"@ant-design/icons\";\nimport { Avatar, Breadcrumb, Button, Input, Layout, Menu, Tooltip } from \"antd\";\nimport { Content, Header } from \"antd/lib/layout/layout\";\nimport Title from \"antd/lib/typography/Title\";\nimport { FC, useEffect, useState } from \"react\";\nimport \"./report.less\";\nimport { useParams } from \"react-router-dom\";\nimport { ReportRepo } from \"../../services/api/repositories/report_repo\";\nimport { Report } from \"../../services/api/models/report_model\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport { FileRepo } from \"../../services/api/repositories/file_repo\";\nimport { File } from \"../../services/api/models/file_model\";\nimport no_content from \"../../assets/illustrations/no-content.png\";\n\nexport const ReportPage: FC = () => {\n  let params = useParams<{ id: string }>();\n  let reportRepo = new ReportRepo(params.id);\n\n  const [file, setFile] = useState<File | undefined>();\n  const [inputs, setInputs] = useState<{ title: string; url: string }>();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [showDialog, setShowDialog] = useState<boolean>(false);\n  const [reports, setReports] = useState<Array<Report>>([]);\n  const [index, setIndex] = useState<number>(0);\n\n  useEffect(() => {\n    async function init() {\n      setReports(await reportRepo.getReports());\n      setFile(await FileRepo.getFile(params.id));\n    }\n\n    init();\n  }, []);\n\n  function addReportDialog(): JSX.Element {\n    async function onOk() {\n      if (inputs && inputs?.title.length !== 0 && inputs.url.length !== 0) {\n        setLoading(true);\n\n        let response = await reportRepo.createReport(inputs.title, inputs.url);\n\n        setReports(await reportRepo.getReports());\n\n        setLoading(false);\n      }\n\n      setShowDialog(false);\n    }\n\n    return (\n      <Modal\n        title=\"Add New Report\"\n        visible={showDialog}\n        onOk={onOk}\n        confirmLoading={loading}\n        onCancel={() => setShowDialog(false)}\n      >\n        <Title level={5}>Title</Title>\n        <Input\n          required={true}\n          placeholder=\"Enter report title\"\n          value={inputs?.title}\n          onChange={(x) =>\n            setInputs({ title: x.target.value, url: inputs?.url ?? \"\" })\n          }\n        ></Input>\n        <Title level={5} style={{ marginTop: \"10px\" }}>\n          URL\n        </Title>\n        <Input\n          required={true}\n          placeholder=\"Enter report embeded url\"\n          value={inputs?.url}\n          onChange={(x) =>\n            setInputs({ title: inputs?.title ?? \"\", url: x.target.value })\n          }\n        ></Input>\n      </Modal>\n    );\n  }\n\n  return (\n    <Layout>\n      <Header id=\"appbar\">\n        <div id=\"caramel-analytic-logo\" placeholder=\"Caramel Analytic\">\n          <Title className=\"text\" level={4}>\n            Caramel Analytic\n          </Title>\n        </div>\n        <Menu\n          id=\"menu\"\n          theme=\"dark\"\n          mode=\"horizontal\"\n          defaultSelectedKeys={[\"0\"]}\n          onClick={(e) => setIndex(parseInt(e.key))}\n        >\n          {reports.map((report, index) => (\n            <Menu.Item key={index}>{report.title}</Menu.Item>\n          ))}\n        </Menu>\n        <PlusSquareFilled\n          className=\"add-icon\"\n          style={{ color: \"white\" }}\n          onClick={(x) => {\n            setInputs({ title: \"\", url: \"\" });\n\n            setShowDialog(true);\n          }}\n        />\n        <div className=\"right-align profile-icon\">\n          <Avatar className=\"icon\" size={30} icon={<UserOutlined />} />\n        </div>\n        <QuestionCircleOutlined\n          className=\"right-align appbar-icon\"\n          style={{ color: \"white\" }}\n          placeholder=\"Question\"\n        />\n        <AppstoreFilled\n          className=\"right-align appbar-icon\"\n          style={{ color: \"white\" }}\n          placeholder=\"add report\"\n        />\n        <div className=\"right-align vertical-divider\" />\n        <div className=\"right-align\">\n          <Button type=\"primary\" icon={<ShareAltOutlined />} size=\"large\">\n            Share\n          </Button>\n        </div>\n        <Avatar.Group\n          maxCount={4}\n          className=\"right-align avatar-group\"\n          maxStyle={{ color: \"#f56a00\", backgroundColor: \"#fde3cf\" }}\n        >\n          <Avatar src=\"https://joeschmoe.io/api/v1/random\" />\n          <Avatar style={{ backgroundColor: \"#f56a00\" }}>K</Avatar>\n          <Tooltip title=\"Ant User\" placement=\"top\">\n            <Avatar\n              style={{ backgroundColor: \"#87d068\" }}\n              icon={<UserOutlined />}\n            />\n          </Tooltip>\n          <Avatar\n            style={{ backgroundColor: \"#1890ff\" }}\n            icon={<AntDesignOutlined />}\n          />\n        </Avatar.Group>\n      </Header>\n      <Layout>\n        <Content className=\"content\">\n          <div className=\"content\">\n            {addReportDialog()}\n            <Breadcrumb style={{ margin: \"16px 0\" }}>\n              <Breadcrumb.Item>Home</Breadcrumb.Item>\n              <Breadcrumb.Item>List</Breadcrumb.Item>\n              <Breadcrumb.Item>{file?.filename}</Breadcrumb.Item>\n            </Breadcrumb>\n            {reports[index] ? (\n              <iframe\n                className=\"embedded-report\"\n                title=\"report\"\n                allowFullScreen\n                width={\"100%\"}\n                src={reports[index].url}\n                style={{ border: \"0\" }}\n              />\n            ) : (\n              <div className=\"embedded-report\">\n                <img src={no_content} alt=\"No content found!\" width={\"500px\"} height={\"400px\"}/>\n              </div>\n            )}\n          </div>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/dashboard/MainDashboard.tsx",["775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport {\n\tButton,\n\tLayout,\n\tMenu,\n\tTypography,\n\tRow,\n\tCol,\n\tSpace,\n\tDivider,\n\tCard,\n\tList,\n\tAvatar,\n\tmessage,\n\tSkeleton,\n\tPopconfirm,\n\tSpin,\n\tTooltip,\n} from \"antd\";\nimport \"./MainDashboard.less\";\nimport codagenceWordLogo from \"../../assets/logo/Codagence_main_logo.png\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { PricingCards } from \"../../utils/components\";\nimport { PaymentRepo } from \"../../services/api/repositories/payment_repo\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { User } from \"../../services/api/models/user_model\";\nimport Meta from \"antd/lib/card/Meta\";\nimport {\n\tCopyOutlined,\n\tCopyTwoTone,\n\tDeleteOutlined,\n\tEyeInvisibleOutlined,\n\tPlusCircleOutlined,\n} from \"@ant-design/icons\";\nimport { UserUrl } from \"../../services/api/models/url_model\";\nimport { UrlRepo } from \"../../services/api/repositories/url_repo\";\nimport Nav from \"./Nav\";\nimport mixpanel from \"mixpanel-browser\";\nimport { Link } from \"@chakra-ui/react\";\n\nconst { SubMenu } = Menu;\nconst { Header } = Layout;\nconst { Title } = Typography;\n\nexport const MainDashboard: React.FC<any> = () => {\n\tlet userRepo = new UserRepo();\n\n\tlet urlRepo = new UrlRepo();\n\n\tlet history = useHistory();\n\n\t// Get current sign in User\n\tconst user = useContext(AuthContext);\n\n\t// Handle the state of each option in Menu bar\n\n\tconst [_userApiId, setUserApiId] = useState<string>(\"\");\n\n\tconst [_urls, setUrls] = useState<Array<UserUrl>>([]);\n\n\tconst [_listLoading, setListLoading] = useState<boolean>(true);\n\n\tasync function getUrls() {\n\t\tlet userId = await LocalStorage.getUserID();\n\t\tlet apiResult = await urlRepo.getAllUserUrlByUserId({\n\t\t\tuserId: userId!,\n\t\t});\n\n\t\tif (apiResult.isSuccess) {\n\t\t\tif (apiResult.data.length > 0)\n\t\t\t\tapiResult.data.forEach((element: UserUrl) => {\n\t\t\t\t\tsetUrls((prevState) => {\n\t\t\t\t\t\treturn [...prevState, element];\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\n\tuseEffect(() => {\n\t\tasync function initState() {\n\t\t\tlet userId = await LocalStorage.getUserID();\n\t\t\tlet apiResult = await userRepo.getUserById({\n\t\t\t\tuserId: userId!,\n\t\t\t});\n\t\t\tif (apiResult.isSuccess) {\n\t\t\t\tlet usermodel: User = apiResult.data[0];\n\t\t\t\tawait LocalStorage.setEmail(usermodel?.email ?? \"\");\n\t\t\t\tawait LocalStorage.setNickName(usermodel?.nickname ?? \"\");\n\t\t\t\tawait LocalStorage.setPackagePlan(\n\t\t\t\t\tusermodel?.packagePlan ?? \"free\"\n\t\t\t\t);\n\t\t\t\tsetUserApiId(usermodel?.userApiId ?? \"\");\n\t\t\t}\n\t\t}\n\n\t\tinitState();\n\t\tgetUrls();\n\n\t\treturn () => {\n\t\t\tsetUserApiId(\"\"); // This worked for me\n\t\t\tsetUrls([]);\n\t\t\tsetListLoading(true);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Nav />\n\t\t\t<Layout>\n\t\t\t\t<Row className=\"dashboard_row\">\n\t\t\t\t\t<Col xs={24} xl={6} className=\"dashboard_col\" span={6} />\n\t\t\t\t\t<Col xs={24} xl={12} className=\"dashboard_col\" span={12}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\ticon={<PlusCircleOutlined />}\n\t\t\t\t\t\t\tsize={\"large\"}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tmixpanel.track(\n\t\t\t\t\t\t\t\t\t\"Dashboard_View_Add_New_Url_Click\"\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\thistory.push({\n\t\t\t\t\t\t\t\t\tpathname: RoutePath.fill_url,\n\t\t\t\t\t\t\t\t\tstate: { userApiId: _userApiId },\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAdd Url\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<div style={{ height: \"20px\" }}></div>\n\t\t\t\t\t\t<Skeleton active loading={_listLoading}>\n\t\t\t\t\t\t\t<List\n\t\t\t\t\t\t\t\titemLayout=\"horizontal\"\n\t\t\t\t\t\t\t\tdataSource={_urls}\n\t\t\t\t\t\t\t\trenderItem={(item, index) => (\n\t\t\t\t\t\t\t\t\t<List.Item\n\t\t\t\t\t\t\t\t\t\tactions={[\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"topLeft\"\n\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Copy graph iframe\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CopyTwoTone twoToneColor=\"#270949\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={\"large\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmixpanel.track(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Dashboard_Execute_Copy_Url_Click\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet configParamResult =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tawait urlRepo.getConfigParamByApiKey(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tapiKey:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem!\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.apiKey ??\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconfigParamResult.isSuccess\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Merge all config params\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet mergedConfigParam =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconfigParamResult\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.data\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.length > 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconfigParamResult.data?.forEach(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem: any\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmergedConfigParam = `${mergedConfigParam}&${item.name}=${item.defaultValue}`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnavigator.clipboard.writeText(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t`<iframe src='https://www.codagence.com/graph_display?apiKey=${item!.apiKey}${mergedConfigParam}' style='height:200px;width:300px;' title='Iframe Example'></iframe>` ??\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Empty Url\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage.success(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"iframe is copied\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage.error(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"iframe copied failure\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>,\n\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure you want to delete?\"\n\t\t\t\t\t\t\t\t\t\t\t\tonCancel={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tmixpanel.track(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Dashboard_Execute_Delete_Url_Click\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tConfirmation:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Deletion Cancel\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tmixpanel.track(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Dashboard_Execute_Delete_Url_Click\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tConfirmation:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Deletion Approved\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet apiResult =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tawait urlRepo.deleteUrl(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\turlId: item.urlId!,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (apiResult.isSuccess) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetListLoading(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetUrls([]);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetUrls();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage.success(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Delete success\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage.success(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Delete Fail\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"red\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={\"large\"}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>,\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<List.Item.Meta\n\t\t\t\t\t\t\t\t\t\t\tavatar={\n\t\t\t\t\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`https://picsum.photos/200/300?random=${index}`}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmixpanel.track(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Dashboard_View_Graph_Editor_Click\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRoutePath.graph_editor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tapiKey: item.apiKey,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuserApiId:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_userApiId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.url}\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tdescription=\"Click the link to the editor\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t\t</Skeleton>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={24} xl={12} className=\"dashboard_col\" span={6} />\n\t\t\t\t</Row>\n\t\t\t</Layout>\n\t\t</>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/url/FillField.tsx",["792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809"],"import React, { ReactElement, useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport {\n\tLayout,\n\tRow,\n\tCol,\n\tForm,\n\tCard,\n\tmessage,\n\tInput,\n\tSpace,\n\tButton,\n\tModal,\n\tSelect,\n\tTooltip,\n} from \"antd\";\nimport \"./Url.less\";\nimport { BackHeader, EmailField, FormButton } from \"../../utils/components\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { UrlRepo } from \"../../services/api/repositories/url_repo\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Title from \"antd/lib/typography/Title\";\nimport { url } from \"inspector\";\nimport {\n\tCopyOutlined,\n\tInfoCircleOutlined,\n\tMinusCircleOutlined,\n\tPlusOutlined,\n} from \"@ant-design/icons\";\nimport { stringify } from \"querystring\";\nimport { ObjectType } from \"typescript\";\nimport { SchemaField, UserUrl } from \"../../services/api/models/url_model\";\nimport mixpanel from \"mixpanel-browser\";\n\nconst { Option } = Select;\n\nexport const FillField: React.FC<any> = () => {\n\tlet history = useHistory();\n\n\tlet location = useLocation();\n\n\tlet urlRepo = new UrlRepo();\n\n\tconst [form] = Form.useForm();\n\n\tconst [isLoading, setLoading] = useState(false);\n\n\tconst [schema, setSchema] = useState<\n\t\tArray<{\n\t\t\tname: any;\n\t\t\tlabel_name: any;\n\t\t\tdata_type: any;\n\t\t}>\n\t>([]);\n\n\tconst [apiStatus, setAPIStatus] = useState<boolean>(false);\n\n\tconst locationState: any = location.state;\n\n\tconst onFinish = async (values: any) => {\n\t\tmixpanel.track(\"Fill_Field_Excecute_Add_Fields_Click\");\n\t\t// Handle if API given error\n\t\tif (apiStatus) {\n\t\t\tlet userId = await LocalStorage.getUserID();\n\t\t\tsetLoading(true);\n\t\t\tlet apiResult = await urlRepo.saveUrl({\n\t\t\t\turl: locationState.url,\n\t\t\t\tuserId: userId ?? \"\",\n\t\t\t\tapiKey: locationState.apiKey,\n\t\t\t\tschema: values[\"schemaList\"],\n\t\t\t\tconfigParam: locationState.configParam,\n\t\t\t});\n\n\t\t\tif (apiResult.isSuccess) {\n\t\t\t\tmixpanel.track(\"Fill_Field_Excecute_Add_Fields_Click\", {\n\t\t\t\t\tapiResult: apiResult.message,\n\t\t\t\t});\n\t\t\t\tmessage.success(\"API added successful\");\n\n\t\t\t\thistory.push({\n\t\t\t\t\tpathname: RoutePath.graph_editor,\n\t\t\t\t\tstate: {\n\t\t\t\t\t\tapiKey: locationState.apiKey,\n\t\t\t\t\t\tuserApiId: locationState.userApiId,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tmixpanel.track(\"Fill_Field_Excecute_Add_Fields_Click\", {\n\t\t\t\t\tapiResult: apiResult.message,\n\t\t\t\t});\n\t\t\t\tmessage.error(apiResult.message);\n\t\t\t}\n\t\t\tsetLoading(false);\n\t\t} else {\n\t\t\tmessage.error(\n\t\t\t\t\"The response of your API is in invalid format or API errors\"\n\t\t\t);\n\t\t}\n\t};\n\tasync function initState() {\n\t\tlet apiResult = await urlRepo.validateUrl({\n\t\t\turl: locationState.url!,\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tmessage.success(\"Your API is valid\");\n\n\t\t\tapiResult.data?.forEach((item: SchemaField) => {\n\t\t\t\tsetSchema((prevState) => {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel_name: item.labelName ?? \"\",\n\t\t\t\t\t\t\tname: item.name ?? \"\",\n\t\t\t\t\t\t\tdata_type: item.dataType ?? \"\",\n\t\t\t\t\t\t},\n\t\t\t\t\t];\n\t\t\t\t});\n\t\t\t});\n\t\t\tsetAPIStatus(true);\n\t\t} else {\n\t\t\tmessage.error(\n\t\t\t\t\"The response of your API is in invalid format or API errors\"\n\t\t\t);\n\t\t}\n\t}\n\n\t// Retrieve schema field from url and set State\n\tuseEffect(() => {\n\t\tinitState();\n\t}, []);\n\n\t// Set Initial Values Using State in antd form\n\tuseEffect(() => {\n\t\tform.resetFields();\n\t}, [schema]);\n\n\treturn (\n\t\t<Layout className=\"layout\" style={{ overflow: \"auto\" }}>\n\t\t\t<div className=\"navbar\" style={{ backgroundColor: \"#fff\" }}>\n\t\t\t\t<BackHeader title=\"Edit the the field\" />\n\t\t\t</div>\n\t\t\t<Layout\n\t\t\t\tclassName=\"url_content\"\n\t\t\t\tstyle={{ backgroundColor: \"white\" }}\n\t\t\t>\n\t\t\t\t<Row className=\"url_row\">\n\t\t\t\t\t<Col xs={24} xl={8} className=\"url_col\" span={8} />\n\t\t\t\t\t<Col xs={24} xl={8} className=\"url_col\" span={8}>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\t\tname=\"fill_url\"\n\t\t\t\t\t\t\t\tclassName=\"url_form\"\n\t\t\t\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t\t\t\t\tform={form}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Form.List\n\t\t\t\t\t\t\t\t\tname=\"schemaList\"\n\t\t\t\t\t\t\t\t\tinitialValue={schema}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{(fields) => (\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t{fields.map((field) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txs={24}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txl={8}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tspan={8}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"param_col\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfield.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"ID Name\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"rgba(0,0,0,.45)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txs={24}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txl={8}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tspan={8}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"param_col\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfield.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label_name\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Missing Label Name\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Label Name\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"rgba(0,0,0,.45)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txs={24}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\txl={8}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tspan={8}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"param_col\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfield.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"data_type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Missing data type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"0 8px\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option value=\"NUMBER\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNumber\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option value=\"STRING\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tText\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option value=\"BOOLEAN\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tBoolean\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Form.List>\n\n\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t<FormButton\n\t\t\t\t\t\t\t\t\t\ttitle=\"Next\"\n\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={24} xl={8} className=\"url_col\" span={8} />\n\t\t\t\t</Row>\n\t\t\t</Layout>\n\t\t</Layout>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/profile/ResetPassword.tsx",["810","811","812"],"import React, { ReactElement, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Form, Card } from \"antd\";\nimport \"./ResetPassword.less\";\nimport { BackHeader, EmailField, FormButton } from \"../../utils/components\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { useHistory } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport mixpanel from \"mixpanel-browser\";\n\nexport const ResetPassword: React.FC<any> = () => {\n\tlet history = useHistory();\n\n\tconst [isLoading, setLoading] = useState(false);\n\n\tconst onFinish = async (values: any) => {\n\t\tmixpanel.track(\"Reset_Password_Excecute_Reset_Password_Click\");\n\n\t\tconst email = await LocalStorage.getEmail();\n\t\tsetLoading(true);\n\t\tlet firebaseResult = await FirebaseServices.resetPassword(email ?? \"\");\n\n\t\tif (firebaseResult.isSuccess) {\n\t\t\t// Go to login page\n\t\t\tmixpanel.track(\"Reset_Password_Excecute_Reset_Password_Click\", {\n\t\t\t\tfirebaseResult: firebaseResult.message,\n\t\t\t});\n\n\t\t\talert(`Sent password reset email to ${email}`);\n\t\t\thistory.replace(RoutePath.home);\n\t\t\tsetLoading(false);\n\t\t} else {\n\t\t\tmixpanel.track(\"Reset_Password_Excecute_Reset_Password_Click\", {\n\t\t\t\tfirebaseResult: firebaseResult.message,\n\t\t\t});\n\n\t\t\talert(firebaseResult.message);\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Layout className=\"layout\" style={{ overflow: \"auto\" }}>\n\t\t\t<div className=\"navbar\" style={{ backgroundColor: \"#fff\" }}>\n\t\t\t\t<BackHeader title=\"Reset Password\" />\n\t\t\t</div>\n\t\t\t<Layout\n\t\t\t\tclassName=\"reset_password_content\"\n\t\t\t\tstyle={{ backgroundColor: \"white\" }}\n\t\t\t>\n\t\t\t\t<Row className=\"reset_password_row\">\n\t\t\t\t\t<Col\n\t\t\t\t\t\txs={24}\n\t\t\t\t\t\txl={8}\n\t\t\t\t\t\tclassName=\"reset_password_col\"\n\t\t\t\t\t\tspan={8}\n\t\t\t\t\t/>\n\t\t\t\t\t<Col xs={24} xl={8} className=\"reset_password_col\" span={8}>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\t\tname=\"reset_password\"\n\t\t\t\t\t\t\t\tclassName=\"reset_password_form\"\n\t\t\t\t\t\t\t\tinitialValues={{ remember: true }}\n\t\t\t\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t<FormButton\n\t\t\t\t\t\t\t\t\t\ttitle=\"Send Password Reset Email\"\n\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col\n\t\t\t\t\t\txs={24}\n\t\t\t\t\t\txl={8}\n\t\t\t\t\t\tclassName=\"reset_password_col\"\n\t\t\t\t\t\tspan={8}\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t</Layout>\n\t\t</Layout>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/graph_editor/GraphEditor.tsx",["813","814","815","816","817","818","819","820","821","822","823"],"import React, { ReactElement, useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport {\n\tTooltip,\n\tButton,\n\tLayout,\n\tMenu,\n\tTypography,\n\tPageHeader,\n\tmessage,\n\tDropdown,\n\tSpin,\n\tModal,\n} from \"antd\";\nimport { Button as ChakraButton } from \"@chakra-ui/react\";\nimport {\n\tBarChartOutlined,\n\tCopyOutlined,\n\tEditTwoTone,\n\tEyeTwoTone,\n\tHomeTwoTone,\n\tLeftCircleTwoTone,\n\tLeftSquareOutlined,\n\tLineChartOutlined,\n\tMenuOutlined,\n\tPieChartOutlined,\n\tPlusCircleTwoTone,\n\tRightCircleTwoTone,\n\tSaveTwoTone,\n} from \"@ant-design/icons\";\nimport \"./GraphEditor.less\";\nimport RGL, { Responsive, WidthProvider } from \"react-grid-layout\";\nimport \"react-grid-layout/css/styles.css\";\nimport { SizeMe, withSize } from \"react-sizeme\";\nimport { BackHeader } from \"../../utils/components\";\nimport { PageSider } from \"../sider/PageSider\";\nimport faker from \"@faker-js/faker\";\nimport { UrlRepo } from \"../../services/api/repositories/url_repo\";\nimport { ConfigParam, SchemaField } from \"../../services/api/models/url_model\";\nimport { DataProps, MyBar } from \"../chartManager/BarChart\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { GraphPreview } from \"../graph_display/GraphPreview\";\nimport mixpanel from \"mixpanel-browser\";\n\n// Resize the Grid Layout according to the parent widget\nconst withSizeHOC = withSize();\nconst ReactGridLayout = withSizeHOC(RGL);\n\nexport const GraphEditor: React.FC<any> = () => {\n\tlet location = useLocation();\n\n\tlet history = useHistory();\n\n\t// Update the visibility of sider\n\tconst [_siderVisibility, setSiderVisibility] = useState<string>(\"block\");\n\n\t// Handle the data retrieved\n\tconst [_schemaField, setSchemaField] = useState<Array<SchemaField>>([]);\n\n\t// State of managing graph properties\n\tconst [_graphValues, setGraphValues] = useState<Array<DataProps[\"data\"]>>(\n\t\t[]\n\t);\n\n\tconst [_configParam, setConfigParam] = useState<Array<ConfigParam>>([]);\n\n\tconst [_isSaving, setSaving] = useState<boolean>(false);\n\n\tconst [_isPreviewVisible, setPreviewVisible] = useState<boolean>(false);\n\n\tconst [_layouts, setlayouts] = useState<Array<any>>([]);\n\n\tconst [_isEditorLoading, setEditorLoading] = useState<boolean>(true);\n\n\t// Get the selected graph value from graph value array\n\tconst [_selectedGraph, setSelectedGraph] = useState<DataProps[\"data\"]>();\n\n\tconst locationState: any = location.state;\n\n\tconst dropdownMenu = (\n\t\t<Menu onClick={handleDropDown}>\n\t\t\t<Menu.Item key=\"bar\" icon={<BarChartOutlined />}>\n\t\t\t\tBar Chart\n\t\t\t</Menu.Item>\n\t\t\t<Menu.Item key=\"line\" icon={<LineChartOutlined />}>\n\t\t\t\tLine Graph\n\t\t\t</Menu.Item>\n\t\t\t<Menu.Item key=\"pie\" icon={<PieChartOutlined />}>\n\t\t\t\tPie Chart\n\t\t\t</Menu.Item>\n\t\t</Menu>\n\t);\n\n\tlet urlRepo = new UrlRepo();\n\n\tfunction onRemoveItemGridContent(key: string) {\n\t\t// Filter is used to get all the graphs except the graph with the key value mentioned.\n\t\tsetGraphValues(_graphValues.filter((item) => item.key !== key));\n\t}\n\n\t// Add new graph\n\tfunction handleDropDown(e: any) {\n\t\tmixpanel.track(\"Graph_Editor_Execute_Select_Graph_Type_Click\", {\n\t\t\tSelectedType: e.key,\n\t\t});\n\n\t\tlet key = uuidv4();\n\t\tsetGraphValues([\n\t\t\t..._graphValues,\n\t\t\t{\n\t\t\t\tkey: key,\n\t\t\t\tmain_chart_type: e.key,\n\t\t\t\ttitle: \"\",\n\t\t\t\tdataSet: [],\n\t\t\t\tdimension: [],\n\t\t\t\tdata_grid: {\n\t\t\t\t\ti: \"a\",\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\tw: 10,\n\t\t\t\t\th: 5,\n\t\t\t\t\tminW: 3,\n\t\t\t\t\tminH: 3,\n\t\t\t\t},\n\t\t\t\tchosen_schema: [],\n\t\t\t},\n\t\t]);\n\n\t\tsetSelectedGraph({\n\t\t\tkey: key,\n\t\t\tmain_chart_type: e.key,\n\t\t\ttitle: \"\",\n\t\t\tdataSet: [],\n\t\t\tdimension: [],\n\t\t\tdata_grid: {\n\t\t\t\ti: \"a\",\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tw: 10,\n\t\t\t\th: 5,\n\t\t\t\tminW: 3,\n\t\t\t\tminH: 3,\n\t\t\t},\n\t\t\tchosen_schema: [],\n\t\t});\n\t}\n\n\tconst saveGraph = async (layouts: any) => {\n\t\tsetSaving(true);\n\t\tmixpanel.track(\"Graph_Editor_Execute_Save_Graph_Click\");\n\n\t\tlet apiResult = await urlRepo.saveGraph({\n\t\t\tuserApiId: locationState.userApiId,\n\t\t\tapiKey: locationState.apiKey,\n\t\t\tlayouts: layouts,\n\t\t\tgraphs: _graphValues.map((item, index) => {\n\t\t\t\treturn {\n\t\t\t\t\t// Temporary hardcode the array on dimensiion\n\t\t\t\t\tlabel_name: item.title,\n\t\t\t\t\tdimension_array:\n\t\t\t\t\t\titem.dimension.length > 0\n\t\t\t\t\t\t\t? [item.dimension[0][\"name\"]]\n\t\t\t\t\t\t\t: [],\n\t\t\t\t\tmetrics_operation_array:\n\t\t\t\t\t\titem.chosen_schema.length > 0 ? item.chosen_schema : [],\n\t\t\t\t\tdata_grid: layouts[index],\n\t\t\t\t};\n\t\t\t}),\n\t\t});\n\t\tsetSaving(false);\n\n\t\treturn apiResult.isSuccess;\n\t};\n\n\t// onKeyDown handler function\n\tconst keyDownHandler = async (\n\t\tevent: React.KeyboardEvent<HTMLDivElement>\n\t) => {\n\t\tif (event.code === \"KeyS\" && event.ctrlKey) {\n\t\t\tif (await saveGraph(_layouts)) {\n\t\t\t\tmixpanel.track(\"Graph_Editor_Execute_Save_Graph_Key_Down\");\n\n\t\t\t\tmessage.success(\"Save successfuly\");\n\t\t\t} else {\n\t\t\t\tmessage.error(\"Save failure\");\n\t\t\t}\n\t\t}\n\t};\n\n\tasync function onLayoutChange(e: Array<any>) {\n\t\tlet layouts = e;\n\t\tsetlayouts(layouts);\n\t}\n\n\tuseEffect(() => {\n\t\t// Confirmation dialog popup if any changes made in page\n\t\tconst unloadCallback = (event: any) => {\n\t\t\tevent.preventDefault();\n\t\t\tevent.returnValue = \"\";\n\t\t\treturn \"\";\n\t\t};\n\n\t\twindow.addEventListener(\"beforeunload\", unloadCallback);\n\t\treturn () => window.removeEventListener(\"beforeunload\", unloadCallback);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tasync function initState() {\n\t\t\tlet apiResult = await urlRepo.getSchemaByApiKey({\n\t\t\t\tapiKey: locationState.apiKey,\n\t\t\t});\n\n\t\t\tif (apiResult.isSuccess) {\n\t\t\t\tsetSchemaField(apiResult.data);\n\t\t\t\tlet graphGetResult = await urlRepo.getGraphsByApiKey({\n\t\t\t\t\tapiKey: locationState.apiKey,\n\t\t\t\t});\n\t\t\t\tif (graphGetResult.isSuccess) {\n\t\t\t\t\tsetSelectedGraph(\n\t\t\t\t\t\tgraphGetResult.data[graphGetResult.data.length - 1]\n\t\t\t\t\t);\n\t\t\t\t\tsetGraphValues(graphGetResult.data);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetEditorLoading(false);\n\t\t}\n\n\t\tinitState();\n\t}, []);\n\n\treturn (\n\t\t<Layout className=\"layout\">\n\t\t\t<div className=\"navbar\" style={{ backgroundColor: \"#fff\" }}>\n\t\t\t\t<PageHeader\n\t\t\t\t\tghost={false}\n\t\t\t\t\tonBack={() => window.history.back()}\n\t\t\t\t\ttitle=\"Graph Editor\"\n\t\t\t\t\textra={[\n\t\t\t\t\t\t<Tooltip placement=\"topLeft\" title=\"Save\">\n\t\t\t\t\t\t\t<ChakraButton\n\t\t\t\t\t\t\t\tisLoading={_isSaving}\n\t\t\t\t\t\t\t\tloadingText=\"Saving\"\n\t\t\t\t\t\t\t\tcolorScheme=\"teal\"\n\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\tif (await saveGraph(_layouts)) {\n\t\t\t\t\t\t\t\t\t\tmessage.success(\"Save successfuly\");\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tmessage.error(\"Save failure\");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<SaveTwoTone twoToneColor=\"#52c41a\" />\n\t\t\t\t\t\t\t</ChakraButton>\n\t\t\t\t\t\t</Tooltip>,\n\t\t\t\t\t\t<Tooltip placement=\"topLeft\" title=\"Dashboard\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ticon={<HomeTwoTone twoToneColor=\"#c175ff\" />}\n\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tmixpanel.track(\n\t\t\t\t\t\t\t\t\t\t\"Graph_Editor_View_Dashboard_Click\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\thistory.push(RoutePath.dashboard);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></Button>\n\t\t\t\t\t\t</Tooltip>,\n\t\t\t\t\t\t<Tooltip placement=\"topLeft\" title=\"Edit Url\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ticon={<EditTwoTone />}\n\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tmixpanel.track(\n\t\t\t\t\t\t\t\t\t\t\"Graph_Editor_View_Edit_Url_Click\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\thistory.push({\n\t\t\t\t\t\t\t\t\t\tpathname: RoutePath.fill_url,\n\t\t\t\t\t\t\t\t\t\tstate: { apiKey: locationState.apiKey },\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></Button>\n\t\t\t\t\t\t</Tooltip>,\n\n\t\t\t\t\t\t<Tooltip placement=\"topLeft\" title=\"Preview\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ticon={<EyeTwoTone twoToneColor=\"#FFA500\" />}\n\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\tmixpanel.track(\n\t\t\t\t\t\t\t\t\t\t\"Graph_Editor_View_Graph_Preview_Click\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tawait saveGraph(_layouts);\n\t\t\t\t\t\t\t\t\tlet configParamResult =\n\t\t\t\t\t\t\t\t\t\tawait urlRepo.getConfigParamByApiKey({\n\t\t\t\t\t\t\t\t\t\t\tapiKey: locationState.apiKey,\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tif (configParamResult.isSuccess) {\n\t\t\t\t\t\t\t\t\t\tsetConfigParam(configParamResult.data);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsetPreviewVisible(true);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></Button>{\" \"}\n\t\t\t\t\t\t</Tooltip>,\n\t\t\t\t\t\t<Dropdown overlay={dropdownMenu} placement=\"bottomLeft\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t<PlusCircleTwoTone twoToneColor=\"#eb2f96\" />\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t></Button>\n\t\t\t\t\t\t</Dropdown>,\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t_siderVisibility === \"block\" ? (\n\t\t\t\t\t\t\t\t\t<RightCircleTwoTone twoToneColor=\"#4654A3\" />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<LeftCircleTwoTone twoToneColor=\"#4654A3\" />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tmixpanel.track(\n\t\t\t\t\t\t\t\t\t\"Graph_Editor_Execute_Sider_Visibility_Click\"\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetSiderVisibility(\n\t\t\t\t\t\t\t\t\t_siderVisibility === \"block\"\n\t\t\t\t\t\t\t\t\t\t? \"none\"\n\t\t\t\t\t\t\t\t\t\t: \"block\"\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></Button>,\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Layout style={{ overflow: \"hidden\" }} onKeyPress={keyDownHandler}>\n\t\t\t\t<Layout style={{ overflow: \"hidden\", padding: \"0 24px 24px\" }}>\n\t\t\t\t\t<Layout style={{ overflow: \"auto\", minHeight: \"76vh\" }}>\n\t\t\t\t\t\t<Content\n\t\t\t\t\t\t\tclassName=\"site-layout-background\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\ttitle=\"Preview\"\n\t\t\t\t\t\t\t\tcentered\n\t\t\t\t\t\t\t\tvisible={_isPreviewVisible}\n\t\t\t\t\t\t\t\tonOk={() => setPreviewVisible(false)}\n\t\t\t\t\t\t\t\tonCancel={() => setPreviewVisible(false)}\n\t\t\t\t\t\t\t\twidth={1300}\n\t\t\t\t\t\t\t\tdestroyOnClose={true}\n\t\t\t\t\t\t\t\tfooter={[\n\t\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\t\tplacement=\"topLeft\"\n\t\t\t\t\t\t\t\t\t\ttitle=\"Copy graph iframe\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\t\t\ticon={<CopyOutlined />}\n\t\t\t\t\t\t\t\t\t\t\tsize={\"large\"}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tmixpanel.track(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Graph_Editor_View_Copy_Url_Click\"\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t// Merge all config params\n\t\t\t\t\t\t\t\t\t\t\t\tlet mergedConfigParam = \"\";\n\t\t\t\t\t\t\t\t\t\t\t\tif (_configParam.length > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t_configParam?.forEach(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(item) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmergedConfigParam = `${mergedConfigParam}&${item.name}=${item.defaultValue}`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tnavigator.clipboard.writeText(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`<iframe src='https://www.codagence.com/graph_display?apiKey=${locationState.apiKey}${mergedConfigParam}' style='height:200px;width:300px;' title='Iframe Example'></iframe>` ??\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Empty Url\"\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tmessage.success(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"iframe is copied\"\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Tooltip>,\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<GraphPreview\n\t\t\t\t\t\t\t\t\tapiKey={locationState.apiKey}\n\t\t\t\t\t\t\t\t></GraphPreview>\n\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t{_isEditorLoading ? (\n\t\t\t\t\t\t\t\t<Spin></Spin>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<SizeMe>\n\t\t\t\t\t\t\t\t\t{({ size }) => (\n\t\t\t\t\t\t\t\t\t\t<ReactGridLayout\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"grid-layout\"\n\t\t\t\t\t\t\t\t\t\t\twidth={size.width as number}\n\t\t\t\t\t\t\t\t\t\t\trowHeight={\n\t\t\t\t\t\t\t\t\t\t\t\t(size.width as number) / 60\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcols={30}\n\t\t\t\t\t\t\t\t\t\t\tonLayoutChange={onLayoutChange}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{_graphValues.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={item.key}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-grid={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.data_grid\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: \"auto\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_selectedGraph!\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.key ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.key\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"1px solid #4654A3\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"1px solid #D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"10px 10px 10px 10px\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: \"100px\", // To enable the chart responsive in height\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmixpanel.track(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Graph_Editor_Execute_Select_Graph_Click\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedGraph(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_graphValues[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MyBar\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey: item.key,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmain_chart_type:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.main_chart_type,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: item.title,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataSet:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.dataSet,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdimension:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.dimension,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata_grid:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.data_grid,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchosen_schema:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.chosen_schema,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tposition:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"absolute\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tright: \"2px\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonRemoveItemGridContent(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.key\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&#10006;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</ReactGridLayout>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</SizeMe>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Content>\n\t\t\t\t\t</Layout>\n\t\t\t\t</Layout>\n\t\t\t\t<PageSider\n\t\t\t\t\tsiderVisibility={_siderVisibility}\n\t\t\t\t\ttoggleCollapsed={() =>\n\t\t\t\t\t\tsetSiderVisibility(\n\t\t\t\t\t\t\t_siderVisibility === \"block\" ? \"none\" : \"block\"\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\tsetGraphValues={setGraphValues}\n\t\t\t\t\tgraphValues={_graphValues}\n\t\t\t\t\tselectedGraph={_selectedGraph}\n\t\t\t\t\tdataRows={_schemaField}\n\t\t\t\t\tschemaField={_schemaField}\n\t\t\t\t\tuserApiId={locationState.userApiId}\n\t\t\t\t\tapiKey={locationState.apiKey}\n\t\t\t\t/>\n\t\t\t</Layout>\n\t\t</Layout>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/login/Login.tsx",["824","825","826"],"import React, { useContext, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Form, Checkbox, Card } from \"antd\";\nimport \"./Login.less\";\nimport { useHistory } from \"react-router-dom\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport {\n    BackHeader,\n    EmailField,\n    FormButton,\n    PasswordField,\n} from \"../../utils/components\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { Encryption } from \"../../utils/encryption\";\nimport mixpanel from \"mixpanel-browser\";\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 22 },\n        sm: { span: 6 },\n    },\n    wrapperCol: {\n        xs: { span: 22 },\n        sm: { span: 14 },\n    },\n};\n\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 22,\n            offset: 0,\n        },\n        sm: {\n            span: 14,\n            offset: 6,\n        },\n    },\n};\n\nexport const Login: React.FC<any> = () => {\n    let userRepo = new UserRepo();\n\n    let history = useHistory();\n\n    // Get current sign in User\n    const user = useContext(AuthContext);\n\n    // Is loading flag\n    const [isLoading, setLoading] = useState(false);\n\n    const onFinish = async (values: any) => {\n        setLoading(true);\n        mixpanel.track(\"Login_Excecute_Log_In_Click\")\n\n        let firebaseResult = await FirebaseServices.logIn(\n            values[\"email\"],\n            values[\"password\"]\n        );\n        if (firebaseResult.isSuccess) {\n            mixpanel.identify(firebaseResult.data.uid);\n            mixpanel.track(\"Login_Excecute_Log_In_Click\",{FirebaseResponse: firebaseResult.message})\n\n            let apiResult = await userRepo.saveUser({\n                purpose: \"login\",\n                userId: firebaseResult.data.uid,\n                email: values[\"email\"],\n                password: Encryption.encrypt(values[\"password\"]),\n            });\n\n            if (apiResult.isSuccess) {\n                mixpanel.track(\"Login_Excecute_Log_In_Click\",{apiResult: apiResult.message})\n\n                // Check if the user has verify the email\n                if (firebaseResult.data?.emailVerified) {\n                    // Go to home\n                    mixpanel.track(\"Login_View_Home_Proceed\");\n                    alert(\"Log In success\");\n                    history.replace(RoutePath.home);\n                } else {\n                    // Go to email verification page\n                    mixpanel.track(\"Login_View_Email_Verification_Proceed\");\n                    history.replace(RoutePath.email_verification);\n                }\n            } else {\n                mixpanel.track(\"Login_Excecute_Log_In_Click\",{apiResult: apiResult.message})\n\n                alert(apiResult.message);\n            }\n        } else {\n            mixpanel.track(\"Login_Excecute_Log_In_Click\",{FirebaseResponse: firebaseResult.message})\n\n            alert(firebaseResult.message);\n        }\n        setLoading(false);\n    };\n\n    return (\n        <Layout className=\"layout\" style={{ overflow: \"auto\" }}>\n            <div className=\"navbar\" style={{ backgroundColor: \"#fff\" }}>\n                <BackHeader title=\"Log In\" />\n            </div>\n            <Layout className=\"login_content\" style={{ backgroundColor: \"white\" }}>\n                <Row className=\"login_form_row\">\n                    <Col xs={24} xl={8} className=\"login_form_col\" span={8} />\n                    <Col xs={24} xl={8} className=\"login_form_col\" span={8}>\n                        <Card>\n                            <Form\n                                name=\"normal_login\"\n                                className=\"login_form\"\n                                initialValues={{ remember: true }}\n                                onFinish={onFinish}\n                                {...formItemLayout}\n                            >\n                                <EmailField />\n                                <PasswordField />\n                                <Form.Item {...tailFormItemLayout}>\n                                    <Form.Item\n                                        name=\"remember\"\n                                        valuePropName=\"checked\"\n                                        noStyle\n                                    >\n                                        <Checkbox>Remember me</Checkbox>\n                                    </Form.Item>\n                                    <div>\n                                        <a\n                                            className=\"login_form_forgot_pwd\"\n                                            href={RoutePath.forgot_password}\n                                            onClick={()=>{\n                                                mixpanel.track(\"Login_View_Forgot_Password_Click\");\n                                            }}\n                                        >\n                                            Forgot password\n                                        </a>\n                                    </div>\n                                </Form.Item>\n\n                                <Form.Item {...tailFormItemLayout}>\n                                    <FormButton\n                                        title=\"Log In\"\n                                        isLoading={isLoading}\n                                    />\n                                    <div>\n                                        Or{\" \"}\n                                        {/* The href is not inserted in the <a> tag to allow the replacingg of log in page when the user click on the link*/}\n                                        <a\n                                            onClick={() => {\n                                                mixpanel.track(\"Login_View_Sign_Up_Click\");\n                                                history.replace(\n                                                    RoutePath.register\n                                                );\n                                            }}\n                                        >\n                                            register now!\n                                        </a>\n                                    </div>\n                                </Form.Item>\n                            </Form>\n                        </Card>\n                    </Col>\n                    <Col xs={24} xl={8} className=\"login_form_col\" span={8} />\n                </Row>\n            </Layout>\n        </Layout>\n    );\n};\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/support/Contact.tsx",["827","828"],"import React, { useContext, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Form, Input, Card } from \"antd\";\nimport \"./Contact.less\";\nimport { BackHeader, EmailField, FormButton } from \"../../utils/components\";\nimport { SupportRepo } from \"../../services/api/repositories/support_repo\";\nimport { AuthContext } from \"../../utils/AuthContext\";\n\nconst layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 14 },\n};\n\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 22,\n            offset: 0,\n        },\n        sm: {\n            span: 14,\n            offset: 6,\n        },\n    },\n};\n\n/* eslint-disable no-template-curly-in-string */\nconst validateMessages = {\n    required: \"${label} is required!\",\n    types: {\n        email: \"${label} is not a valid email!\",\n        number: \"${label} is not a valid number!\",\n    },\n    number: {\n        range: \"${label} must be between ${min} and ${max}\",\n    },\n};\n\nexport const Contact: React.FC<any> = () => {\n    let supportRepo = new SupportRepo();\n\n    // Get current sign in User\n    const user = useContext(AuthContext);\n    // Create form reference\n    const [form] = Form.useForm();\n\n    const [isLoading, setLoading] = useState(false);\n\n    const onFinish = async (values: any) => {\n        setLoading(true);\n\n        let apiResult = await supportRepo.saveTicket({\n            userId: user?.uid,\n            name: values[\"name\"],\n            email: values[\"email\"],\n            ticketType: \"support\",\n            issueDesc: values[\"message\"]\n        });\n\n        if (apiResult.isSuccess) {\n            alert(\"Message sent success!\");\n            setLoading(false);\n            // Reset Form\n            form.resetFields();\n        } else {\n            alert(apiResult.message);\n            setLoading(false);\n        }\n    };\n\n    return (\n        <Layout className=\"layout\" style={{ overflow: \"auto\" }}>\n            <div className=\"navbar\" style={{ backgroundColor: \"#fff\" }}>\n                <BackHeader title=\"Contact\" />\n            </div>\n            <Layout className=\"contact_content\" style={{ backgroundColor: \"white\" }}>\n                <Row className=\"contact_row\">\n                    <Col xs={24} xl={8} className=\"contact_col\" span={8} />\n                    <Col xs={24} xl={8} className=\"contact_col\" span={8}>\n                        <Card>\n                            <Form\n                                {...layout}\n                                name=\"contact_form\"\n                                onFinish={onFinish}\n                                validateMessages={validateMessages}\n                                form={form}\n                            >\n                                <Form.Item\n                                    name=\"name\"\n                                    label=\"Name\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <Input />\n                                </Form.Item>\n                                <EmailField />\n\n                                <Form.Item name=\"message\" label=\"Messages\">\n                                    <Input.TextArea />\n                                </Form.Item>\n                                <Form.Item\n                                    wrapperCol={{\n                                        ...layout.wrapperCol,\n                                        offset: 6,\n                                    }}\n                                >\n                                    <FormButton\n                                        title=\"Submit\"\n                                        isLoading={isLoading}\n                                    />\n                                </Form.Item>\n                            </Form>\n                        </Card>\n                    </Col>\n                    <Col xs={24} xl={8} className=\"contact_col\" span={8} />\n                </Row>\n            </Layout>\n        </Layout>\n    );\n};\n",["829","830"],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/utils/firebaseServices.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/utils/components.tsx",["831","832","833","834","835"],"import React, { forwardRef, useCallback, useContext } from \"react\";\nimport {\n\tButton,\n\tCard,\n\tCol,\n\tForm,\n\tInput,\n\tPageHeader,\n\tRow,\n\tSpace,\n\tSpin,\n} from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport Title from \"antd/lib/typography/Title\";\nimport \"./components.less\";\nimport { AuthContext } from \"./AuthContext\";\nimport { RoutePath } from \"./routePath\";\nimport { PaymentRepo } from \"../services/api/repositories/payment_repo\";\nimport PhoneInput from \"react-phone-number-input\";\nimport \"react-phone-number-input/style.css\";\nimport { useState } from \"react\";\nimport { LocalStorage } from \"./localStorage\";\nimport { Response } from \"../services/response\";\nimport mixpanel from \"mixpanel-browser\";\nimport { FirebaseServices } from \"./firebaseServices\";\n\ninterface ComponentProps {\n\ttitle?: string;\n\tisLoading?: boolean; // To identify if the component is in loading state\n\tenabled?: boolean; // To identify if the component is enabled or some field of the component is enabled\n}\n\nexport const BackHeader: React.FC<ComponentProps> = ({ title }) => {\n\tlet history = useHistory();\n\tfunction goBack() {\n\t\t// Navigate to previous page\n\t\thistory.goBack();\n\t}\n\treturn (\n\t\t<PageHeader\n\t\t\tclassName=\"site-page-header\"\n\t\t\tghost={false}\n\t\t\tonBack={() => goBack()}\n\t\t\ttitle={title}\n\t\t/>\n\t);\n};\n\nexport const EmailField: React.FC<ComponentProps> = ({}) => {\n\treturn (\n\t\t<Form.Item\n\t\t\tname=\"email\"\n\t\t\tlabel=\"E-mail\"\n\t\t\trules={[\n\t\t\t\t{\n\t\t\t\t\ttype: \"email\",\n\t\t\t\t\tmessage: \"The input is not valid E-mail!\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\trequired: true,\n\t\t\t\t\tmessage: \"Please input your E-mail!\",\n\t\t\t\t},\n\t\t\t]}\n\t\t>\n\t\t\t<Input />\n\t\t</Form.Item>\n\t);\n};\n\nexport const PasswordField: React.FC<ComponentProps> = ({ enabled }) => {\n\t//If true, then the min 6 validator is enabled\n\treturn (\n\t\t<Form.Item\n\t\t\tname=\"password\"\n\t\t\tlabel=\"Password\"\n\t\t\trules={\n\t\t\t\tenabled\n\t\t\t\t\t? [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\tmessage: \"Please input your password!\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmin: 6,\n\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\"Password must be minimum 6 characters.\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  ]\n\t\t\t\t\t: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\tmessage: \"Please input your password!\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  ]\n\t\t\t}\n\t\t\thasFeedback\n\t\t>\n\t\t\t<Input.Password />\n\t\t</Form.Item>\n\t);\n};\n\nexport const ConfirmPasswordField: React.FC<ComponentProps> = ({}) => {\n\treturn (\n\t\t<Form.Item\n\t\t\tname=\"confirm\"\n\t\t\tlabel=\"Confirm Password\"\n\t\t\tdependencies={[\"password\"]}\n\t\t\thasFeedback\n\t\t\trules={[\n\t\t\t\t{\n\t\t\t\t\trequired: true,\n\t\t\t\t\tmessage: \"Please confirm your password!\",\n\t\t\t\t},\n\t\t\t\t({ getFieldValue }) => ({\n\t\t\t\t\tvalidator(_, value) {\n\t\t\t\t\t\tif (!value || getFieldValue(\"password\") === value) {\n\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn Promise.reject(\n\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\"The two passwords that you entered do not match!\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t]}\n\t\t>\n\t\t\t<Input.Password />\n\t\t</Form.Item>\n\t);\n};\n\n// Form Button is without the form.item\nexport const FormButton: React.FC<ComponentProps> = ({ title, isLoading }) => {\n\treturn (\n\t\t<div>\n\t\t\t{isLoading ? (\n\t\t\t\t<Spin size=\"large\" />\n\t\t\t) : (\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t{title}\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t</div>\n\t);\n};\ninterface PricingProps {\n\tactive?: string; // The pricing tier that the user currently at\n}\n// Pricing cards\nexport const PricingCards: React.FC<PricingProps> = ({ active }) => {\n\tlet paymentRepo = new PaymentRepo();\n\n\tlet history = useHistory();\n\n\t// Get current sign in User\n\tconst user = useContext(AuthContext);\n\n\tconst [isBtnLoading, setBtnLoading] = useState(false);\n\n\tconst colorActive = {\n\t\tborder: \"2px solid #000000\",\n\t\tbackgroundColor: \"#D3D3D3\",\n\t};\n\tconst color = {\n\t\tbackgroundColor: \"#fff\",\n\t};\n\n\tconst checkIfActiveColor = (key: string) => {\n\t\tif (active === undefined) {\n\t\t\treturn color;\n\t\t} else {\n\t\t\tif (active) return key === active ? colorActive : color;\n\t\t}\n\t};\n\n\tconst buttonActive = {\n\t\tdisabled: true,\n\t};\n\n\tconst button = {\n\t\tdisabled: false,\n\t};\n\n\tconst checkIfActiveBtn = (key: string) => {\n\t\tif (active === undefined) {\n\t\t\treturn button;\n\t\t} else {\n\t\t\tif (active) return key === active ? buttonActive : button;\n\t\t}\n\t};\n\n\tconst checkIfActiveBtnText = (key: string) => {\n\t\tif (active === undefined) {\n\t\t\treturn \"Select\";\n\t\t} else {\n\t\t\tif (active) return key === active ? \"Currently Selected\" : \"Select\";\n\t\t}\n\t};\n\n\tconst productList = [\n\t\t{\n\t\t\tid: \"001\", // Free plan has no stripe product id\n\t\t\tkey: \"free\",\n\t\t\tname: \"Free\",\n\t\t\tdescription: \"No cards required\",\n\t\t\tsecondaryDescription: \"\",\n\t\t\tprice: 0,\n\t\t\tpriceTag: \"$0 USD/mo\",\n\t\t\tbtnText: \"Select\",\n\t\t\tfeatures: [\n\t\t\t\t\"Max 5 users assignation per file\",\n\t\t\t\t\"Max 5 files created\",\n\t\t\t\t\"Max 3 reports per file\",\n\t\t\t\t\"Max 5 shared files\",\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tid: \"prod_Kskj6UFUeFljfo\",\n\t\t\tkey: \"pro\",\n\t\t\tname: \"Pro\",\n\t\t\tdescription:\n\t\t\t\t\"More power for small teams who want better collaboration\",\n\t\t\tsecondaryDescription: \"All the goodness of Free Tier, and:\",\n\t\t\tprice: 5,\n\t\t\tpriceTag: \"$5 USD/mo\",\n\t\t\tbtnText: \"Select\",\n\t\t\tfeatures: [\n\t\t\t\t\"Max 15 users assignation per file\",\n\t\t\t\t\"Max 50 files created\",\n\t\t\t\t\"Max 10 reports per file\",\n\t\t\t\t\"Max 20 shared files\",\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tid: \"prod_KuOG0aN13C29yi\",\n\t\t\tkey: \"enterprise\",\n\t\t\tname: \"Enterprise\",\n\t\t\tdescription:\n\t\t\t\t\"All the flexibility to meet your regulatory requirements and all the power to match your growth\",\n\t\t\tsecondaryDescription: \"All the greatness of Pro, and:\",\n\t\t\tprice: 15,\n\t\t\tpriceTag: \"$15 USD/mo\",\n\t\t\tbtnText: \"Select\",\n\t\t\tfeatures: [\n\t\t\t\t\"Max 30 users assignation per file\",\n\t\t\t\t\"Max 100 files created\",\n\t\t\t\t\"Unlimited reports per file\",\n\t\t\t\t\"Unlimited shared files\",\n\t\t\t],\n\t\t},\n\t];\n\n\tconst navigate = async (product: { id: string; key: string }) => {\n\t\tsetBtnLoading(true);\n\t\tif (user === null) {\n\t\t\t// Proceed to login page\n\t\t\thistory.push(RoutePath.login);\n\t\t} else {\n\t\t\t// Go to email verification page if email not verified\n\t\t\tif (!user?.emailVerified) {\n\t\t\t\thistory.push(RoutePath.email_verification);\n\t\t\t} else {\n\t\t\t\t// Call api to get the payment session url\n\t\t\t\tlet apiResult = null;\n\t\t\t\tlet currentPackagePlan = await LocalStorage.getPackagePlan();\n\n\n\t\t\t\t// Go to billing page if the user wants to upgrade or downgrade the plan\n\t\t\t\tif (\n\t\t\t\t\tproduct.key !== currentPackagePlan &&\n\t\t\t\t\tcurrentPackagePlan !== \"free\"\n\t\t\t\t) {\n\t\t\t\t\tlet userId = await LocalStorage.getUserID();\n\t\t\t\t\tlet email = await LocalStorage.getEmail();\n\n\t\t\t\t\tapiResult = await paymentRepo.getCustomerPortalSessionUrl({\n\t\t\t\t\t\tuserId: userId!,\n\t\t\t\t\t\temail: email!,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// Else go to checkout page\n\t\t\t\telse {\n\t\t\t\t\tapiResult = await paymentRepo.getCheckoutSessionUrl({\n\t\t\t\t\t\tuserId: \"userId\",\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (apiResult.isSuccess) {\n\t\t\t\t\t// Proceed to checkout page if seesion url is retreived\n\t\t\t\t\t// Replace the history\n\t\t\t\t\twindow.location.replace(apiResult.data[0].sessionUrl);\n\t\t\t\t} else {\n\t\t\t\t\talert(apiResult.message);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsetBtnLoading(false);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<Row className=\"pricing_row\">\n\t\t\t\t{productList.map((productList) => (\n\t\t\t\t\t<Col xs={24} xl={8} className=\"pricing_col\" span={8}>\n\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\tclassName=\"pricing_content\"\n\t\t\t\t\t\t\tstyle={checkIfActiveColor(productList.key)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"pricing_content_title\">\n\t\t\t\t\t\t\t\t<Title className=\"site_desc\" level={3}>\n\t\t\t\t\t\t\t\t\t{productList.name}\n\t\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t\t<p> {productList.description}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"pricing_content_price\">\n\t\t\t\t\t\t\t\t<Title className=\"site_desc\" level={3}>\n\t\t\t\t\t\t\t\t\t{productList.priceTag}\n\t\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"pricing_content_nav\">\n\t\t\t\t\t\t\t\t<Space direction=\"vertical\">\n\t\t\t\t\t\t\t\t\t{isBtnLoading ? (\n\t\t\t\t\t\t\t\t\t\t<Spin size=\"large\" />\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\t\t\tghost\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tnavigate(productList)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t{...checkIfActiveBtn(\n\t\t\t\t\t\t\t\t\t\t\t\tproductList.key\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{checkIfActiveBtnText(\n\t\t\t\t\t\t\t\t\t\t\t\tproductList.key\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<Title className=\"site_desc\" level={5}>\n\t\t\t\t\t\t\t\t\t\t{productList.secondaryDescription}\n\t\t\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t\t</Space>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"pricing_content_features\">\n\t\t\t\t\t\t\t\t<Space direction=\"vertical\">\n\t\t\t\t\t\t\t\t\t{productList.features.map((features) => (\n\t\t\t\t\t\t\t\t\t\t<p>{features}</p>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Space>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t))}\n\t\t\t</Row>\n\t\t</div>\n\t);\n};\n\ninterface PhoneNumInputProps {\n\tinitialValue?: any;\n}\n\nexport const FormPhoneInput: React.FC<PhoneNumInputProps> = ({\n\tinitialValue,\n}) => {\n\tconst [phoneNum, setPhoneNum] = useState<any>();\n\n\treturn (\n\t\t<Form.Item\n\t\t\tname=\"phone_number\"\n\t\t\tlabel=\"Phone No\"\n\t\t\trules={[\n\t\t\t\t{\n\t\t\t\t\trequired: true,\n\t\t\t\t\tmessage: \"Please input your phone number!\",\n\t\t\t\t},\n\t\t\t]}\n\t\t>\n\t\t\t<PhoneInput\n\t\t\t\tinternational\n\t\t\t\tdefaultCountry=\"MY\"\n\t\t\t\tcountryCallingCodeEditable={false}\n\t\t\t\tvalue={phoneNum}\n\t\t\t\tonChange={(value) => setPhoneNum(value)}\n\t\t\t/>\n\t\t</Form.Item>\n\t);\n};\n\ninterface NavItem {\n\tkey?: number;\n\tlabel: string;\n\tsubLabel?: string;\n\tchildren?: Array<NavItem>;\n\tonClick: (user: any, history: any) => void;\n}\n\nexport const Suffix_Nav: Array<NavItem> = [\n\t{\n\t\tlabel: \"Your Account\",\n\t\tonClick: () => {}, // To fulfill the interface\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tkey: 0,\n\t\t\t\tlabel: \"Billing\",\n\t\t\t\tsubLabel: \"View your bill and usage analytic\",\n\t\t\t\tonClick: async () => {\n\t\t\t\t\t// Call api to get the payment session url\n\t\t\t\t\tlet userId = await LocalStorage.getUserID();\n\t\t\t\t\tlet email = await LocalStorage.getEmail();\n\n\t\t\t\t\tlet paymentRepo = new PaymentRepo();\n\t\t\t\t\tlet apiResult =\n\t\t\t\t\t\tawait paymentRepo.getCustomerPortalSessionUrl({\n\t\t\t\t\t\t\tuserId: userId!,\n\t\t\t\t\t\t\temail: email!,\n\t\t\t\t\t\t});\n\n\t\t\t\t\tif (apiResult.isSuccess) {\n\t\t\t\t\t\t// Proceed to checkout page if seesion url is retreived\n\t\t\t\t\t\t// Replace the history\n\t\t\t\t\t\twindow.location.replace(apiResult.data[0].sessionUrl);\n\t\t\t\t\t\tmixpanel.track(\"_View_Customer_Billing_Portal_Click\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(apiResult.message);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 1,\n\t\t\t\tlabel: \"Profile\",\n\t\t\t\tsubLabel: \"View and update your profile\",\n\t\t\t\tonClick: (user: any, history: any) => {\n\t\t\t\t\thistory.push(RoutePath.user_profile);\n\t\t\t\t\tmixpanel.track(\"Home_View_Profile_Click\");\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 2,\n\t\t\t\tlabel: \"Reset Password\",\n\t\t\t\tsubLabel: \"Change your password here\",\n\t\t\t\tonClick: (user: any, history: any) => {\n\t\t\t\t\thistory.push(RoutePath.reset_password);\n\t\t\t\t\tmixpanel.track(\"Home_View_Reset_Password_Click\");\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 3,\n\t\t\t\tlabel: \"Log Out\",\n\t\t\t\tsubLabel: \"See ya\",\n\t\t\t\tonClick: async (user: any, history: any) => {\n\t\t\t\t\tawait FirebaseServices.signOut();\n\t\t\t\t\t// Clear local storage\n\t\t\t\t\tawait LocalStorage.resetStorage();\n\t\t\t\t\tmixpanel.track(\"Home_Execute_Log_Out_Click\");\n\t\t\t\t\tmixpanel.reset();\n\t\t\t\t\thistory.replace(RoutePath.default);\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n];\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/utils/encryption.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/utils/localStorage.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/graph_display/GraphPreview.tsx",["836","837","838","839","840","841","842","843"],"import React, { ReactElement, useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, message, Spin } from \"antd\";\nimport RGL, { Responsive, WidthProvider } from \"react-grid-layout\";\nimport \"react-grid-layout/css/styles.css\";\nimport { SizeMe, withSize } from \"react-sizeme\";\nimport { DataProps, MyBar } from \"../chartManager/BarChart\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport { UrlRepo } from \"../../services/api/repositories/url_repo\";\nimport { ConfigParam } from \"../../services/api/models/url_model\";\n\n// Resize the Grid Layout according to the parent widget\nconst withSizeHOC = withSize();\nconst ReactGridLayout = withSizeHOC(RGL);\n\ninterface GraphPreviewProps {\n\tapiKey: string;\n}\n\nexport const GraphPreview: React.FC<GraphPreviewProps> = ({ apiKey }) => {\n\t// State of managing graph properties\n\tconst [_graphValues, setGraphValues] = useState<Array<DataProps[\"data\"]>>(\n\t\t[]\n\t);\n\n\tconst [_isEditorLoading, setEditorLoading] = useState<boolean>(true);\n\n\tlet urlRepo = new UrlRepo();\n\n\tuseEffect(() => {\n\t\tasync function initState() {\n\t\t\tlet graphGetResult = await urlRepo.getGraphsByApiKey({\n\t\t\t\tapiKey: apiKey,\n\t\t\t});\n\t\t\tif (graphGetResult.isSuccess) {\n\t\t\t\tgraphGetResult.data.forEach((item: any) => {\n\t\t\t\t\titem[\"data_grid\"][\"static\"] = true;\n\t\t\t\t});\n\t\t\t\tsetGraphValues(graphGetResult.data);\n\t\t\t} else {\n\t\t\t\tmessage.error(graphGetResult.message);\n\t\t\t}\n\t\t\tsetEditorLoading(false);\n\t\t}\n\t\tinitState();\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t{_isEditorLoading ? (\n\t\t\t\t\t\t<Spin></Spin>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<SizeMe>\n\t\t\t\t\t\t\t{({ size }) => (\n\t\t\t\t\t\t\t\t<ReactGridLayout\n\t\t\t\t\t\t\t\t\tclassName=\"grid-layout\"\n\t\t\t\t\t\t\t\t\twidth={size.width as number}\n\t\t\t\t\t\t\t\t\trowHeight={(size.width as number) / 60}\n\t\t\t\t\t\t\t\t\tcols={30}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{_graphValues.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tkey={item.key}\n\t\t\t\t\t\t\t\t\t\t\t\tdata-grid={item.data_grid}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: \"auto\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tborder: \"1px solid #D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tpadding:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"10px 10px 10px 10px\",\n\t\t\t\t\t\t\t\t\t\t\t\t\theight: \"100px\", // To enable the chart responsive in height\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<MyBar\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey: item.key,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmain_chart_type:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.main_chart_type,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: item.title,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataSet: item.dataSet,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdimension:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.dimension,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata_grid:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.data_grid,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchosen_schema:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.chosen_schema,\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</ReactGridLayout>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</SizeMe>\n\t\t\t\t\t)}\n\t\t</div>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/chartManager/BarChart.tsx",["844"],"import React from \"react\";\nimport { Bar, Chart } from \"react-chartjs-2\";\nimport { ChartColor } from \"./ChartColor\";\nimport 'chart.js/auto';\n\n\nexport interface DataProps {\n\tdata: {\n\t\tkey: string;\n\t\ttitle: string;\n\t\tmain_chart_type: any;\n\t\tdataSet: Array<{\n\t\t\tgraph_type: any;\n\t\t\tlabel: string;\n\t\t\tmetrics: any;\n\t\t}>;\n\t\tdimension: Array<{ name: string; data: [] }>;\n\t\tdata_grid: any;\n\t\t// The graph type is same as the one in dataset object\n\t\tchosen_schema: Array<{\n\t\t\tname: string;\n\t\t\toperation: string;\n\t\t\tgraph_type: string;\n\t\t}>;\n\t\t\n\t};\n}\n\nexport const MyBar: React.FC<DataProps> = ({ data }) => {\n\tconst config = (\n\t\titem: { graph_type: any; label: string; metrics: any },\n\t\tindex: number\n\t) => {\n\t\tswitch (item.graph_type) {\n\t\t\tcase \"bar\":\n\t\t\t\treturn {\n\t\t\t\t\tfill: false,\n\t\t\t\t\tlineTension: 0.5,\n\t\t\t\t\tbackgroundColor: ChartColor.colorOptions[index],\n\t\t\t\t\tborderColor: \"white\",\n\t\t\t\t\tborderWidth: 2,\n\t\t\t\t};\n\n\t\t\tcase \"line\":\n\t\t\t\treturn {\n\t\t\t\t\tfill: false,\n\t\t\t\t\tlineTension: 0.5,\n\t\t\t\t\tborderColor: ChartColor.colorOptions[index],\n\t\t\t\t\tborderWidth: 2,\n\t\t\t\t};\n\t\t\tcase \"pie\":\n\t\t\t\treturn {\n\t\t\t\t\tfill: false,\n\t\t\t\t\tlineTension: 0.5,\n\t\t\t\t\tbackgroundColor: ChartColor.colorOptions,\n\t\t\t\t\tborderColor: \"white\",\n\t\t\t\t\tborderWidth: 1,\n\t\t\t\t};\n\n\t\t\tdefault:\n\t\t\t\treturn {\n\t\t\t\t\tfill: false,\n\t\t\t\t\tlineTension: 0.5,\n\t\t\t\t\tbackgroundColor: ChartColor.colorOptions[index],\n\t\t\t\t\tborderColor: \"white\",\n\t\t\t\t};\n\t\t}\n\t};\n\n\treturn (\n\t\t<Chart\n\t\t\ttype={data.main_chart_type}\n\t\t\tredraw={true}\n\t\t\tdata={{\n\t\t\t\tlabels: data.dimension[0]?.data,\n\t\t\t\tdatasets: data.dataSet.map((item, index) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...config(item, index),\n\t\t\t\t\t\tlabel: item.label,\n\t\t\t\t\t\tdata: item.metrics,\n\t\t\t\t\t\ttype: item.graph_type,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t}}\n\t\t\toptions={{\n\t\t\t\tplugins: {\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tposition: \"right\",\n\t\t\t\t\t},\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tdisplay:\n\t\t\t\t\t\t\tdata.title === undefined || data.title === \"\"\n\t\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t\t: true,\n\t\t\t\t\t\ttext: data.title,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\tresponsive: true,\n\t\t\t}}\n\t\t/>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/sider/PageSider.tsx",["845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860"],"import React, { ReactElement, useEffect, useState } from \"react\";\nimport {\n\tTabs,\n\tLayout,\n\tTypography,\n\tSelect,\n\tDivider,\n\tSpace,\n\tCard,\n\tButton,\n\tInput,\n\tmessage,\n\tForm,\n\tRow,\n\tCol,\n\tSpin,\n} from \"antd\";\nimport \"./PageSider.less\";\nimport { SizeType } from \"antd/lib/config-provider/SizeContext\";\n\nimport { Chart } from \"react-chartjs-2\";\nimport faker from \"@faker-js/faker\";\nimport { MyBar, DataProps } from \"../chartManager/BarChart\";\nimport { SchemaField } from \"../../services/api/models/url_model\";\nimport { UrlRepo } from \"../../services/api/repositories/url_repo\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Item } from \"rc-menu\";\nimport mixpanel from \"mixpanel-browser\";\nconst { Sider } = Layout;\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\ninterface PageSiderProps {\n\t// To allow functions in other page to handle the visibility of sider.\n\tsiderVisibility: string;\n\t// To allow the functions in this page to handle the visibility of sider.\n\ttoggleCollapsed: (visibility: string) => void;\n\t// Selected Graph Value state\n\tselectedGraph?: DataProps[\"data\"];\n\t// Callback of setting the graph value\n\tsetGraphValues: (data: Array<DataProps[\"data\"]>) => void;\n\t// Graph Values state\n\tgraphValues: Array<DataProps[\"data\"]>;\n\t// Data Rows\n\tdataRows: any;\n\tschemaField: Array<SchemaField>;\n\tapiKey: string;\n\tuserApiId: string;\n}\n\nexport const PageSider: React.FC<PageSiderProps> = ({\n\tsiderVisibility,\n\tsetGraphValues,\n\tgraphValues,\n\tselectedGraph,\n\tschemaField,\n\tapiKey,\n\tuserApiId,\n}) => {\n\t// Set dimensions\n\tconst [dimensionValues, setDimensionValues] = useState<Array<string>>();\n\t// Set metrics\n\tconst [metricsValues, setMetricsValues] = useState<Array<string>>();\n\n\tconst [isLoading, setLoading] = useState<boolean>(false);\n\n\tlet urlRepo = new UrlRepo();\n\n\tconst [form] = Form.useForm();\n\n\tasync function onFinish(values: any) {\n\t\tsetLoading(true);\n\t\tmixpanel.track(\"Sider_Excecute_Generate_Data_Click\");\n\n\t\tlet apiResult = await urlRepo.generateDataResponse({\n\t\t\tuserApiId: userApiId,\n\t\t\tapiKey: apiKey,\n\t\t\tdimensionArray: values[\"dimensionValues\"],\n\t\t\tmetricsArray: values[\"metrics\"].map(\n\t\t\t\t(item: {\n\t\t\t\t\tname: string;\n\t\t\t\t\toperation: string;\n\t\t\t\t\tgraph_type: string;\n\t\t\t\t}) => {\n\t\t\t\t\treturn item.name;\n\t\t\t\t}\n\t\t\t),\n\t\t\tmetricsOperation: values[\"metrics\"].map(\n\t\t\t\t(item: {\n\t\t\t\t\tname: string;\n\t\t\t\t\toperation: string;\n\t\t\t\t\tgraph_type: string;\n\t\t\t\t}) => {\n\t\t\t\t\tswitch (item.operation) {\n\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\titem.operation = \"sum\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"cnt\":\n\t\t\t\t\t\t\titem.operation = \"count\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"avg\":\n\t\t\t\t\t\t\titem.operation = \"mean\";\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\treturn item.operation;\n\t\t\t\t}\n\t\t\t),\n\t\t});\n\n\t\tif (apiResult.isSuccess) {\n\t\t\tmixpanel.track(\"Sider_Excecute_Generate_Data_Click\", {\n\t\t\t\tapiResult: apiResult.message,\n\t\t\t});\n\t\t\tgraphValues = graphValues.map((item) => {\n\t\t\t\tif (item.key === selectedGraph?.key)\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...selectedGraph,\n\t\t\t\t\t\ttitle: values[\"title\"],\n\t\t\t\t\t\tdataSet:\n\t\t\t\t\t\t\tObject.entries(apiResult.data).length > 1\n\t\t\t\t\t\t\t\t? Object.entries(apiResult.data)\n\t\t\t\t\t\t\t\t\t\t.slice(1)!\n\t\t\t\t\t\t\t\t\t\t.map((item: any, index) => {\n\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\tgraph_type:\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalues[\"metrics\"][index][\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"graph_type\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: item[0],\n\t\t\t\t\t\t\t\t\t\t\t\tmetrics: item[1],\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t: [],\n\t\t\t\t\t\tdimension: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: values[\"dimensionValues\"],\n\t\t\t\t\t\t\t\tdata: apiResult.data[\n\t\t\t\t\t\t\t\t\tObject.keys(apiResult.data)[0]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tchosen_schema: values[\"metrics\"],\n\t\t\t\t\t};\n\n\t\t\t\treturn item;\n\t\t\t});\n\t\t\tsetGraphValues(graphValues);\n\t\t\tsetLoading(false);\n\t\t} else {\n\t\t\tmixpanel.track(\"Sider_Excecute_Generate_Data_Click\", {\n\t\t\t\tapiResult: apiResult.message,\n\t\t\t});\n\n\t\t\tsetLoading(false);\n\t\t}\n\t}\n\n\tuseEffect(() => form.resetFields(), [selectedGraph]);\n\n\treturn (\n\t\t<Sider\n\t\t\tclassName=\"page_sider\"\n\t\t\tstyle={{ display: siderVisibility }}\n\t\t\twidth=\"330\"\n\t\t\ttheme=\"light\"\n\t\t>\n\t\t\t<div>\n\t\t\t\t{selectedGraph === undefined ? (\n\t\t\t\t\t<p>Please select a graph</p>\n\t\t\t\t) : (\n\t\t\t\t\t<Form\n\t\t\t\t\t\tname=\"page_sider_form\"\n\t\t\t\t\t\tclassName=\"page_sider_form\"\n\t\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\t\ttitle: selectedGraph.title,\n\t\t\t\t\t\t\tmetrics: selectedGraph.chosen_schema,\n\t\t\t\t\t\t\tdimensionValues: selectedGraph.dimension[0]?.name,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t\t\tform={form}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Title level={5}>{selectedGraph.title}</Title>\n\n\t\t\t\t\t\t<Title level={5}>Title</Title>\n\n\t\t\t\t\t\t{/* Input title */}\n\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tmessage: \"Missing Title\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tclassName=\"input_bar\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Graph Label\"\n\t\t\t\t\t\t\t\tname=\"label\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t<Divider />\n\n\t\t\t\t\t\t{/* Select X-axis */}\n\t\t\t\t\t\t<Title level={5}>Dimension</Title>\n\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\tname={[\"dimensionValues\"]}\n\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tmessage: \"Missing Dimension\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tclassName=\"selection_bar\"\n\t\t\t\t\t\t\t\tplaceholder=\"Select Dimension\"\n\t\t\t\t\t\t\t\toptionFilterProp=\"children\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{schemaField.map((item, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Option value={item.name!}>\n\t\t\t\t\t\t\t\t\t\t\t{item.labelName}\n\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Divider />\n\n\t\t\t\t\t\t{/* Select metrics */}\n\t\t\t\t\t\t<Title level={5}>Metrics</Title>\n\t\t\t\t\t\t<Form.List name=\"metrics\">\n\t\t\t\t\t\t\t{(fields, { add, remove }) => (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t{fields.map((field) => (\n\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t<Col span={5} className=\"param_col\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfield.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"operation\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Missing Operation\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"selection_bar\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Opt\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp=\"children\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"sum\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"cnt\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"avg\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t].map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={item}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={item}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\t\t\t\t\t\tspan={12}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"param_col\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, \"name\"]}\n\t\t\t\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Missing Metrics\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"selection_bar\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Select Metrics\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp=\"children\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{schemaField.map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.name!\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.labelName\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t<Col span={5} className=\"param_col\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfield.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"graph_type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Missing Graph Type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"selection_bar\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Graph Type\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp=\"children\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"bar\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"line\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"pie\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t].map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={item}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\t\t\t\t\t\txl={2}\n\t\t\t\t\t\t\t\t\t\t\t\tspan={2}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"param_col\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<MinusCircleOutlined\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tremove(field.name)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"dashed\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => add()}\n\t\t\t\t\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\t\t\t\t\ticon={<PlusOutlined />}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tAdd sights\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Form.List>\n\n\t\t\t\t\t\t<Divider />\n\n\t\t\t\t\t\t{/* Generate graph button */}\n\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t<Spin spinning={isLoading}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"ghost\"\n\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\tclassName=\"preview_button\"\n\t\t\t\t\t\t\t\t\thtmlType=\"submit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Spin>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</Sider>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/repositories/url_repo.tsx",["861"],"import { url } from \"inspector\";\nimport { Networking } from \"../../networking\";\nimport { Response } from \"../../response\";\nimport {\n\tConfigParam,\n\tDataRows,\n\tGetConfigParamResponse,\n\tGetDataRowsResponse,\n\tGetSchemaFieldResponse,\n\tGetUserUrlResponse,\n\tGraphs,\n\tSchemaField,\n\tUserUrl,\n} from \"../models/url_model\";\n\nexport class UrlRepo {\n\tnetworking = new Networking();\n\n\tasync getAllUserUrlByUserId(value?: { userId: string }): Promise<Response> {\n\t\tconst path = `userId=${value?.userId}`;\n\t\tlet response = await this.networking.getData(\n\t\t\t`get_all_url_by_user_id?${path}`\n\t\t);\n\t\t// If data is retrieved and the data is not empty, then return\n\t\tif (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.data !== null &&\n\t\t\tresponse.data !== \"\"\n\t\t) {\n\t\t\tlet getUserUrlResponse = new GetUserUrlResponse().fromJson(\n\t\t\t\tresponse.data\n\t\t\t);\n\t\t\treturn new Response(true, response.message, getUserUrlResponse);\n\n\t\t\t// If data is retrieved and the data is empty, then return\n\t\t} else if (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.message === \"No records found\"\n\t\t) {\n\t\t\treturn new Response(true, \"No records found\", \"\");\n\n\t\t\t// If http method is timeout or being halt, then return\n\t\t} else if (!response.isSuccess) {\n\t\t\treturn new Response(false, response.message, \"\");\n\t\t} else {\n\t\t\treturn new Response(false, response.message, response.data);\n\t\t}\n\t}\n\n\tasync getUrlById(value?: { urlId: string }): Promise<Response> {\n\t\tconst path = `urlId=${value?.urlId}`;\n\t\tlet response = await this.networking.getData(`get_url_by_id?${path}`);\n\t\t// If data is retrieved and the data is not empty, then return\n\t\tif (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.data !== null &&\n\t\t\tresponse.data !== \"\"\n\t\t) {\n\t\t\tlet getUserUrlResponse = new GetUserUrlResponse().fromJson(\n\t\t\t\tresponse.data\n\t\t\t);\n\t\t\treturn new Response(true, response.message, getUserUrlResponse);\n\n\t\t\t// If data is retrieved and the data is empty, then return\n\t\t} else if (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.message === \"No records found\"\n\t\t) {\n\t\t\treturn new Response(true, \"No records found\", \"\");\n\n\t\t\t// If http method is timeout or being halt, then return\n\t\t} else if (!response.isSuccess) {\n\t\t\treturn new Response(false, response.message, \"\");\n\t\t} else {\n\t\t\treturn new Response(false, response.message, response.data);\n\t\t}\n\t}\n\n\tasync getUrlByApiKey(value?: { apiKey: string }): Promise<Response> {\n\t\tconst path = `apiKey=${value?.apiKey}`;\n\t\tlet response = await this.networking.getData(\n\t\t\t`get_url_by_api_key?${path}`\n\t\t);\n\t\t// If data is retrieved and the data is not empty, then return\n\t\tif (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.data !== null &&\n\t\t\tresponse.data !== \"\"\n\t\t) {\n\t\t\tlet getUserUrlResponse = new GetUserUrlResponse().fromJson(\n\t\t\t\tresponse.data\n\t\t\t);\n\t\t\treturn new Response(true, response.message, getUserUrlResponse);\n\n\t\t\t// If data is retrieved and the data is empty, then return\n\t\t} else if (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.message === \"No records found\"\n\t\t) {\n\t\t\treturn new Response(true, \"No records found\", \"\");\n\n\t\t\t// If http method is timeout or being halt, then return\n\t\t} else if (!response.isSuccess) {\n\t\t\treturn new Response(false, response.message, \"\");\n\t\t} else {\n\t\t\treturn new Response(false, response.message, response.data);\n\t\t}\n\t}\n\n\tasync saveUrl(props: {\n\t\turlId?: string;\n\t\tuserId?: string;\n\t\tapiKey?: string;\n\t\turl?: string;\n\t\tschema?: Array<SchemaField>;\n\t\tconfigParam?: Array<ConfigParam>;\n\t}): Promise<Response> {\n\t\t// Initialize the save user model\n\t\tconst save_url = new UserUrl({\n\t\t\tuserId: props.userId,\n\t\t\tapiKey: props.apiKey,\n\t\t\turl: props.url,\n\t\t\tschema: props.schema,\n\t\t\tconfigParam: props.configParam,\n\t\t});\n\n\t\t// Object to Map, then to JSON\n\t\tconst body = Object.fromEntries(save_url.toJson());\n\n\t\tlet headers = {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t};\n\n\t\tlet response = await this.networking.postData(\n\t\t\t\"save_url\", // API choice is depends on the usage\n\t\t\tbody,\n\t\t\theaders\n\t\t);\n\n\t\t// If data is retrieved and the data is not empty, then return\n\t\tif (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.data !== null &&\n\t\t\tresponse.data !== \"\"\n\t\t) {\n\t\t\treturn new Response(true, response.message, response.data);\n\n\t\t\t// If data is retrieved and the data is empty, then return\n\t\t} else if (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.message === \"No records found\"\n\t\t) {\n\t\t\treturn new Response(true, \"No records found\", \"\");\n\n\t\t\t// If http method is timeout or being halt, then return\n\t\t} else if (!response.isSuccess) {\n\t\t\treturn new Response(false, response.message, \"\");\n\t\t} else {\n\t\t\treturn new Response(false, response.message, response.data);\n\t\t}\n\t}\n\n\tasync deleteUrl(props: { urlId?: string }): Promise<Response> {\n\t\t// Initialize the save user model\n\t\tconst delete_url = new UserUrl({\n\t\t\turlId: props.urlId,\n\t\t});\n\n\t\t// Object to Map, then to JSON\n\t\tconst body = Object.fromEntries(delete_url.toJson());\n\n\t\tlet response = await this.networking.deleteData(\n\t\t\t\"delete_url\", // API choice is depends on the usage\n\t\t\tbody\n\t\t);\n\n\t\t// If data is retrieved and the data is not empty, then return\n\t\tif (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.data !== null &&\n\t\t\tresponse.data !== \"\"\n\t\t) {\n\t\t\treturn new Response(true, response.message, response.data);\n\n\t\t\t// If data is retrieved and the data is empty, then return\n\t\t} else if (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.message === \"No records found\"\n\t\t) {\n\t\t\treturn new Response(true, \"No records found\", \"\");\n\n\t\t\t// If http method is timeout or being halt, then return\n\t\t} else if (!response.isSuccess) {\n\t\t\treturn new Response(false, response.message, \"\");\n\t\t} else {\n\t\t\treturn new Response(false, response.message, response.data);\n\t\t}\n\t}\n\n\tasync validateUrl(props: { url?: string }): Promise<Response> {\n\t\t// Initialize the save user model\n\t\tconst validate_url = new SchemaField({\n\t\t\turl: props.url,\n\t\t});\n\n\t\t// Object to Map, then to JSON\n\t\tconst body = Object.fromEntries(validate_url.toJson());\n\n\t\tlet headers = {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t};\n\n\t\tlet response = await this.networking.postData(\n\t\t\t\"validate_url\", // API choice is depends on the usage\n\t\t\tbody,\n\t\t\theaders\n\t\t);\n\n\t\t// If data is retrieved and the data is not empty, then return\n\t\tif (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.data !== null &&\n\t\t\tresponse.data !== \"\"\n\t\t) {\n\t\t\tlet getSchemaFieldResponse = new GetSchemaFieldResponse().fromJson(\n\t\t\t\tresponse.data\n\t\t\t);\n\t\t\treturn new Response(true, response.message, getSchemaFieldResponse);\n\n\t\t\t// If data is retrieved and the data is empty, then return\n\t\t} else if (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.message === \"No records found\"\n\t\t) {\n\t\t\treturn new Response(true, \"No records found\", \"\");\n\n\t\t\t// If http method is timeout or being halt, then return\n\t\t} else if (!response.isSuccess) {\n\t\t\treturn new Response(false, response.message, \"\");\n\t\t} else {\n\t\t\treturn new Response(false, response.message, response.data);\n\t\t}\n\t}\n\n\tasync getSchemaByApiKey(value?: { apiKey: string }): Promise<Response> {\n\t\tconst path = `apiKey=${value?.apiKey}`;\n\t\tlet response = await this.networking.getData(\n\t\t\t`get_schema_field?${path}`\n\t\t);\n\t\t// If data is retrieved and the data is not empty, then return\n\t\tif (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.data !== null &&\n\t\t\tresponse.data !== \"\"\n\t\t) {\n\t\t\tlet getSchemaFieldResponse = new GetSchemaFieldResponse().fromJson(\n\t\t\t\tresponse.data\n\t\t\t);\n\t\t\treturn new Response(true, response.message, getSchemaFieldResponse);\n\n\t\t\t// If data is retrieved and the data is empty, then return\n\t\t} else if (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.message === \"No records found\"\n\t\t) {\n\t\t\treturn new Response(true, \"No records found\", \"\");\n\n\t\t\t// If http method is timeout or being halt, then return\n\t\t} else if (!response.isSuccess) {\n\t\t\treturn new Response(false, response.message, \"\");\n\t\t} else {\n\t\t\treturn new Response(false, response.message, response.data);\n\t\t}\n\t}\n\n\tasync getConfigParamByApiKey(value?: {\n\t\tapiKey: string;\n\t}): Promise<Response> {\n\t\tconst path = `apiKey=${value?.apiKey}`;\n\t\tlet response = await this.networking.getData(\n\t\t\t`get_config_param_by_api_key?${path}`\n\t\t);\n\t\t// If data is retrieved and the data is not empty, then return\n\t\tif (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.data !== null &&\n\t\t\tresponse.data !== \"\"\n\t\t) {\n\t\t\tlet getConfigParamResponse = new GetConfigParamResponse().fromJson(\n\t\t\t\tresponse.data\n\t\t\t);\n\t\t\treturn new Response(true, response.message, getConfigParamResponse);\n\n\t\t\t// If data is retrieved and the data is empty, then return\n\t\t} else if (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.message === \"No records found\"\n\t\t) {\n\t\t\treturn new Response(true, \"No records found\", \"\");\n\n\t\t\t// If http method is timeout or being halt, then return\n\t\t} else if (!response.isSuccess) {\n\t\t\treturn new Response(false, response.message, \"\");\n\t\t} else {\n\t\t\treturn new Response(false, response.message, response.data);\n\t\t}\n\t}\n\n\tasync getDataRowsByApiKey(value?: {\n\t\tuserApiId: string;\n\t\tapiKey: string;\n\t\tdimensionArray?: Array<string>;\n\t\tmetricsArray?: Array<string>;\n\t}): Promise<Response> {\n\t\tconst path = `userApiId=${value?.userApiId}&apiKey=${\n\t\t\tvalue?.apiKey\n\t\t}&dimensionArray=${JSON.stringify(\n\t\t\tvalue?.dimensionArray\n\t\t)}&metricsArray=${JSON.stringify(value?.metricsArray)}`;\n\t\tlet response = await this.networking.getData(`generate_data?${path}`);\n\t\t// If data is retrieved and the data is not empty, then return\n\t\tif (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.data !== null &&\n\t\t\tresponse.data !== \"\"\n\t\t) {\n\t\t\tlet getDataRowsByApiKey = new GetDataRowsResponse().fromJson(\n\t\t\t\tresponse.data\n\t\t\t);\n\t\t\treturn new Response(true, response.message, getDataRowsByApiKey);\n\n\t\t\t// If data is retrieved and the data is empty, then return\n\t\t} else if (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.message === \"No records found\"\n\t\t) {\n\t\t\treturn new Response(true, \"No records found\", \"\");\n\n\t\t\t// If http method is timeout or being halt, then return\n\t\t} else if (!response.isSuccess) {\n\t\t\treturn new Response(false, response.message, \"\");\n\t\t} else {\n\t\t\treturn new Response(false, response.message, response.data);\n\t\t}\n\t}\n\n\tasync generateDataResponse(props: {\n\t\tuserApiId?: string;\n\t\tapiKey?: string;\n\t\tdimensionArray?: Array<string>;\n\t\tmetricsArray?: Array<string>;\n\t\tmetricsOperation?: Array<string>;\n\t}): Promise<Response> {\n\t\t// Initialize the save user model\n\t\tconst generate_data = new DataRows({\n\t\t\tuserApiId: props.userApiId,\n\t\t\tapiKey: props.apiKey,\n\t\t\tdimensionArray: props.dimensionArray,\n\t\t\tmetricsArray: props.metricsArray,\n\t\t\tmetricsOperation: props.metricsOperation,\n\t\t});\n\n\t\t// Object to Map, then to JSON\n\t\tconst body = Object.fromEntries(generate_data.toJson());\n\n\t\tlet headers = {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t};\n\n\t\tlet response = await this.networking.postData(\n\t\t\t\"generate_data\", // API choice is depends on the usage\n\t\t\tbody,\n\t\t\theaders\n\t\t);\n\n\t\t// If data is retrieved and the data is not empty, then return\n\t\tif (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.data !== null &&\n\t\t\tresponse.data !== \"\"\n\t\t) {\n\t\t\tlet getSchemaFieldResponse = new GetDataRowsResponse().fromJson(\n\t\t\t\tresponse.data\n\t\t\t);\n\t\t\treturn new Response(true, response.message, getSchemaFieldResponse);\n\n\t\t\t// If data is retrieved and the data is empty, then return\n\t\t} else if (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.message === \"No records found\"\n\t\t) {\n\t\t\treturn new Response(true, \"No records found\", \"\");\n\n\t\t\t// If http method is timeout or being halt, then return\n\t\t} else if (!response.isSuccess) {\n\t\t\treturn new Response(false, response.message, \"\");\n\t\t} else {\n\t\t\treturn new Response(false, response.message, response.data);\n\t\t}\n\t}\n\n\tasync saveGraph(props: {\n\t\tuserApiId: string;\n\t\tapiKey: string;\n\t\tlayouts: Array<any>;\n\t\tgraphs: Array<{\n\t\t\tdimension_array: Array<any>;\n\t\t\tmetrics_operation_array: Array<any>;\n\t\t\tdata_grid: Array<any>;\n\t\t}>;\n\t}): Promise<Response> {\n\t\t// Initialize the save user model\n\t\tconst save_graph = new Graphs({\n\t\t\tuserApiId: props.userApiId,\n\t\t\tapiKey: props.apiKey,\n\t\t\tlayouts: props.layouts,\n\t\t\tgraphs: props.graphs,\n\t\t});\n\n\t\t// Object to Map, then to JSON\n\t\tconst body = Object.fromEntries(save_graph.toJson());\n\n\t\tlet headers = {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t};\n\n\t\tlet response = await this.networking.postData(\n\t\t\t\"save_graph\", // API choice is depends on the usage\n\t\t\tbody,\n\t\t\theaders\n\t\t);\n\n\t\t// If data is retrieved and the data is not empty, then return\n\t\tif (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.data !== null &&\n\t\t\tresponse.data !== \"\"\n\t\t) {\n\t\t\treturn new Response(true, response.message, true);\n\n\t\t\t// If data is retrieved and the data is empty, then return\n\t\t} else if (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.message === \"No records found\"\n\t\t) {\n\t\t\treturn new Response(true, \"No records found\", \"\");\n\n\t\t\t// If http method is timeout or being halt, then return\n\t\t} else if (!response.isSuccess) {\n\t\t\treturn new Response(false, response.message, \"\");\n\t\t} else {\n\t\t\treturn new Response(false, response.message, response.data);\n\t\t}\n\t}\n\n\tasync getGraphsByApiKey(value?: { apiKey: string }): Promise<Response> {\n\t\tconst path = `apiKey=${value?.apiKey}`;\n\t\tlet response = await this.networking.getData(`get_graph_by_api_key?${path}`);\n\t\t// If data is retrieved and the data is not empty, then return\n\t\tif (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.data !== null &&\n\t\t\tresponse.data !== \"\"\n\t\t) {\n\t\t\tlet getDataRowsByApiKey = new GetDataRowsResponse().fromJson(\n\t\t\t\tresponse.data\n\t\t\t);\n\t\t\treturn new Response(true, response.message, getDataRowsByApiKey);\n\n\t\t\t// If data is retrieved and the data is empty, then return\n\t\t} else if (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.message === \"No records found\"\n\t\t) {\n\t\t\treturn new Response(true, \"No records found\", \"\");\n\n\t\t\t// If http method is timeout or being halt, then return\n\t\t} else if (!response.isSuccess) {\n\t\t\treturn new Response(false, response.message, \"\");\n\t\t} else {\n\t\t\treturn new Response(false, response.message, response.data);\n\t\t}\n\t}\n\n\tasync getGraphsWithParamByApiKey(path :string): Promise<Response> {\n\t\tlet response = await this.networking.getData(`get_graph_with_param_by_api_key?${path}`);\n\t\t// If data is retrieved and the data is not empty, then return\n\t\tif (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.data !== null &&\n\t\t\tresponse.data !== \"\"\n\t\t) {\n\t\t\tlet getDataRowsByApiKey = new GetDataRowsResponse().fromJson(\n\t\t\t\tresponse.data\n\t\t\t);\n\t\t\treturn new Response(true, response.message, getDataRowsByApiKey);\n\n\t\t\t// If data is retrieved and the data is empty, then return\n\t\t} else if (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.message === \"No records found\"\n\t\t) {\n\t\t\treturn new Response(true, \"No records found\", \"\");\n\n\t\t\t// If http method is timeout or being halt, then return\n\t\t} else if (!response.isSuccess) {\n\t\t\treturn new Response(false, response.message, \"\");\n\t\t} else {\n\t\t\treturn new Response(false, response.message, response.data);\n\t\t}\n\t}\n}\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/repositories/support_repo.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/repositories/user_repo.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/repositories/payment_repo.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/repositories/report_repo.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/repositories/file_repo.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/models/user_model.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/response.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/chartManager/ChartColor.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/networking.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/models/url_model.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/models/support_model.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/models/payment_model.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/models/report_model.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/models/file_model.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/utils/constants.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/graph_display/GraphDisplay.tsx",["862","863","864","865","866","867"],"import React, { ReactElement, useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, message, Spin } from \"antd\";\nimport RGL, { Responsive, WidthProvider } from \"react-grid-layout\";\nimport \"react-grid-layout/css/styles.css\";\nimport { SizeMe, withSize } from \"react-sizeme\";\nimport { DataProps, MyBar } from \"../chartManager/BarChart\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport { UrlRepo } from \"../../services/api/repositories/url_repo\";\nimport { ConfigParam } from \"../../services/api/models/url_model\";\n\n// Resize the Grid Layout according to the parent widget\nconst withSizeHOC = withSize();\nconst ReactGridLayout = withSizeHOC(RGL);\n\nexport const GraphDisplay: React.FC<any> = () => {\n\t// State of managing graph properties\n\tconst [_graphValues, setGraphValues] = useState<Array<DataProps[\"data\"]>>(\n\t\t[]\n\t);\n\tconst windowUrl = window.location.search;\n\tlet param = new URLSearchParams(windowUrl);\n\n\tconst [_isEditorLoading, setEditorLoading] = useState<boolean>(true);\n\n\tlet urlRepo = new UrlRepo();\n\n\tuseEffect(() => {\n\t\tasync function initState() {\n\t\t\tlet path = \"\";\n\n\t\t\tparam.forEach(function (value, key) {\n\t\t\t\tpath === \"\"\n\t\t\t\t\t? (path = `${path}${key}=${value}`)\n\t\t\t\t\t: (path = `${path}&${key}=${value}`);\n\t\t\t});\n\n\t\t\tlet graphGetResult = await urlRepo.getGraphsWithParamByApiKey(path);\n\n\t\t\tif (graphGetResult.isSuccess) {\n\t\t\t\tgraphGetResult.data.forEach((item: any) => {\n\t\t\t\t\titem[\"data_grid\"][\"static\"] = true;\n\t\t\t\t});\n\t\t\t\tsetGraphValues(graphGetResult.data);\n\t\t\t} else {\n\t\t\t\tmessage.error(graphGetResult.message);\n\t\t\t}\n\t\t\tsetEditorLoading(false);\n\t\t}\n\t\tinitState();\n\t}, []);\n\n\treturn (\n\t\t<Layout className=\"layout\">\n\t\t\t<Layout\n\t\t\t\tstyle={{ overflow: \"auto\", minHeight: \"70vh\", width: \"100%\" }}\n\t\t\t>\n\t\t\t\t<Content\n\t\t\t\t\tclassName=\"site-layout-background\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{_isEditorLoading ? (\n\t\t\t\t\t\t<Spin></Spin>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<SizeMe>\n\t\t\t\t\t\t\t{({ size }) => (\n\t\t\t\t\t\t\t\t<ReactGridLayout\n\t\t\t\t\t\t\t\t\tclassName=\"grid-layout\"\n\t\t\t\t\t\t\t\t\twidth={size.width as number}\n\t\t\t\t\t\t\t\t\trowHeight={(size.width as number) / 60}\n\t\t\t\t\t\t\t\t\tcols={30}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{_graphValues.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tkey={item.key}\n\t\t\t\t\t\t\t\t\t\t\t\tdata-grid={item.data_grid}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: \"auto\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tborder: \"1px solid #D3D3D3\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tpadding:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"10px 10px 10px 10px\",\n\t\t\t\t\t\t\t\t\t\t\t\t\theight: \"100px\", // To enable the chart responsive in height\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<MyBar\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey: item.key,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmain_chart_type:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.main_chart_type,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: item.title,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataSet: item.dataSet,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdimension:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.dimension,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata_grid:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.data_grid,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchosen_schema:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.chosen_schema,\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</ReactGridLayout>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</SizeMe>\n\t\t\t\t\t)}\n\t\t\t\t</Content>\n\t\t\t</Layout>\n\t\t</Layout>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/home/Nav.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/home/Hero.tsx",["868","869"],"import {\n\tBox,\n\tHeading,\n\tContainer,\n\tText,\n\tButton,\n\tStack,\n\tIcon,\n\tuseColorModeValue,\n\tcreateIcon,\n} from \"@chakra-ui/react\";\nimport \"@fontsource/caveat\";\nimport mixpanel from \"mixpanel-browser\";\nimport { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { RoutePath } from \"../../utils/routePath\";\n\nexport default function Hero() {\n\t// Get current sign in User\n\tconst user = useContext(AuthContext);\n\tlet history = useHistory();\n\treturn (\n\t\t<>\n\t\t\t<Container maxW={\"3xl\"} id=\"hero\">\n\t\t\t\t<Stack\n\t\t\t\t\tas={Box}\n\t\t\t\t\ttextAlign={\"center\"}\n\t\t\t\t\tspacing={{ base: 8, md: 14 }}\n\t\t\t\t\tpy={{ base: 20, md: 36 }}\n\t\t\t\t>\n\t\t\t\t\t<Heading\n\t\t\t\t\t\tfontWeight={600}\n\t\t\t\t\t\tfontSize={{ base: \"2xl\", sm: \"4xl\", md: \"6xl\" }}\n\t\t\t\t\t\tlineHeight={\"110%\"}\n\t\t\t\t\t>\n\t\t\t\t\t\tBetter version of PowerBI\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Text as={\"span\"} color={\"pink.400\"}>\n\t\t\t\t\t\t\tEmbedded Dashboard\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Heading>\n\t\t\t\t\t<Text color={\"gray.500\"}>\n\t\t\t\t\t\tDesign and embed the analytic dashboard to your site\n\t\t\t\t\t\twith high flexibility. You can change the parameter in\n\t\t\t\t\t\tthe URL of the dashboard to show different visualisation.\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Stack\n\t\t\t\t\t\tdirection={\"column\"}\n\t\t\t\t\t\tspacing={3}\n\t\t\t\t\t\talign={\"center\"}\n\t\t\t\t\t\talignSelf={\"center\"}\n\t\t\t\t\t\tposition={\"relative\"}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolorScheme={\"green\"}\n\t\t\t\t\t\t\tbg={\"blue.400\"}\n\t\t\t\t\t\t\trounded={\"full\"}\n\t\t\t\t\t\t\tpx={6}\n\t\t\t\t\t\t\t_hover={{\n\t\t\t\t\t\t\t\tbg: \"#4654A3\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\tmixpanel.track(\"Home_View_Dashboard_Click\");\n\n\t\t\t\t\t\t\t\tif (user === null) {\n\t\t\t\t\t\t\t\t\t// Proceed to login page\n\t\t\t\t\t\t\t\t\tmixpanel.track(\"Home_View_Log_In_Proceed\");\n\t\t\t\t\t\t\t\t\thistory.push(RoutePath.login);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tmixpanel.track(\n\t\t\t\t\t\t\t\t\t\t\"Home_View_Dashboard_Proceed\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\thistory.push(RoutePath.dashboard);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tGet Started\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://www.producthunt.com/posts/codagence?utm_source=badge-featured&utm_medium=badge&utm_souce=badge-codagence\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tmixpanel.track(\"Home_View_Producthunt_Click\");\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc=\"https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=342693&theme=light\"\n\t\t\t\t\t\t\t\talt=\"Codagence - No&#0045;code&#0032;analytic&#0032;dashboard&#0032;builder&#0032;in&#0032;3&#0032;minutes | Product Hunt\"\n\t\t\t\t\t\t\t\tstyle={{ width: \"250px\", height: \"54px\" }}\n\t\t\t\t\t\t\t\twidth=\"250\"\n\t\t\t\t\t\t\t\theight=\"54\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\tas={Arrow}\n\t\t\t\t\t\t\t\tcolor={useColorModeValue(\n\t\t\t\t\t\t\t\t\t\"gray.800\",\n\t\t\t\t\t\t\t\t\t\"gray.300\"\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tw={71}\n\t\t\t\t\t\t\t\tposition={\"absolute\"}\n\t\t\t\t\t\t\t\tright={-71}\n\t\t\t\t\t\t\t\ttop={\"10px\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tfontSize={\"lg\"}\n\t\t\t\t\t\t\t\tfontFamily={\"Caveat\"}\n\t\t\t\t\t\t\t\tposition={\"absolute\"}\n\t\t\t\t\t\t\t\tright={\"-125px\"}\n\t\t\t\t\t\t\t\ttop={\"-15px\"}\n\t\t\t\t\t\t\t\ttransform={\"rotate(10deg)\"}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tStarting at FREE\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Stack>\n\t\t\t\t</Stack>\n\t\t\t</Container>\n\t\t</>\n\t);\n}\n\nconst Arrow = createIcon({\n\tdisplayName: \"Arrow\",\n\tviewBox: \"0 0 72 24\",\n\tpath: (\n\t\t<path\n\t\t\tfillRule=\"evenodd\"\n\t\t\tclipRule=\"evenodd\"\n\t\t\td=\"M0.600904 7.08166C0.764293 6.8879 1.01492 6.79004 1.26654 6.82177C2.83216 7.01918 5.20326 7.24581 7.54543 7.23964C9.92491 7.23338 12.1351 6.98464 13.4704 6.32142C13.84 6.13785 14.2885 6.28805 14.4722 6.65692C14.6559 7.02578 14.5052 7.47362 14.1356 7.6572C12.4625 8.48822 9.94063 8.72541 7.54852 8.7317C5.67514 8.73663 3.79547 8.5985 2.29921 8.44247C2.80955 9.59638 3.50943 10.6396 4.24665 11.7384C4.39435 11.9585 4.54354 12.1809 4.69301 12.4068C5.79543 14.0733 6.88128 15.8995 7.1179 18.2636C7.15893 18.6735 6.85928 19.0393 6.4486 19.0805C6.03792 19.1217 5.67174 18.8227 5.6307 18.4128C5.43271 16.4346 4.52957 14.868 3.4457 13.2296C3.3058 13.0181 3.16221 12.8046 3.01684 12.5885C2.05899 11.1646 1.02372 9.62564 0.457909 7.78069C0.383671 7.53862 0.437515 7.27541 0.600904 7.08166ZM5.52039 10.2248C5.77662 9.90161 6.24663 9.84687 6.57018 10.1025C16.4834 17.9344 29.9158 22.4064 42.0781 21.4773C54.1988 20.5514 65.0339 14.2748 69.9746 0.584299C70.1145 0.196597 70.5427 -0.0046455 70.931 0.134813C71.3193 0.274276 71.5206 0.70162 71.3807 1.08932C66.2105 15.4159 54.8056 22.0014 42.1913 22.965C29.6185 23.9254 15.8207 19.3142 5.64226 11.2727C5.31871 11.0171 5.26415 10.5479 5.52039 10.2248Z\"\n\t\t\tfill=\"currentColor\"\n\t\t/>\n\t),\n});\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/home/Pricing.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/home/Footer.tsx",["870"],"import {\n\tFacebookOutlined,\n\tInstagramOutlined,\n\tTwitterOutlined,\n\tYoutubeOutlined,\n} from \"@ant-design/icons\";\nimport {\n\tBox,\n\tchakra,\n\tContainer,\n\tLink,\n\tStack,\n\tText,\n\tuseColorModeValue,\n\tVisuallyHidden,\n} from \"@chakra-ui/react\";\nimport mixpanel from \"mixpanel-browser\";\nimport { ReactNode } from \"react\";\nimport codagenceWordLogo from \"../../assets/logo/Codagence_main_logo.png\";\n\nconst Logo = (props: any) => {\n\treturn (\n\t\t<img\n\t\t\tstyle={{ width: \"130px\", height: \"25px\" }}\n\t\t\tsrc={codagenceWordLogo}\n\t\t\talt=\"Codagence Logo\"\n\t\t/>\n\t);\n};\n\nconst SocialButton = ({\n\tchildren,\n\tlabel,\n\thref,\n}: {\n\tchildren: ReactNode;\n\tlabel: string;\n\thref: string;\n}) => {\n\treturn (\n\t\t<chakra.button\n\t\t\tbg={useColorModeValue(\"blackAlpha.100\", \"whiteAlpha.100\")}\n\t\t\trounded={\"full\"}\n\t\t\tw={8}\n\t\t\th={8}\n\t\t\tcursor={\"pointer\"}\n\t\t\tas={\"a\"}\n\t\t\thref={href}\n\t\t\tdisplay={\"inline-flex\"}\n\t\t\talignItems={\"center\"}\n\t\t\tjustifyContent={\"center\"}\n\t\t\ttransition={\"background 0.3s ease\"}\n\t\t\t_hover={{\n\t\t\t\tbg: useColorModeValue(\"blackAlpha.200\", \"whiteAlpha.200\"),\n\t\t\t}}\n\t\t>\n\t\t\t<VisuallyHidden>{label}</VisuallyHidden>\n\t\t\t{children}\n\t\t</chakra.button>\n\t);\n};\n\nexport default function Footer() {\n\treturn (\n\t\t<Box\n\t\t\tbg={useColorModeValue(\"gray.50\", \"gray.900\")}\n\t\t\tcolor={useColorModeValue(\"gray.700\", \"gray.200\")}\n\t\t>\n\t\t\t<Container\n\t\t\t\tas={Stack}\n\t\t\t\tmaxW={\"6xl\"}\n\t\t\t\tpy={4}\n\t\t\t\tspacing={4}\n\t\t\t\tjustify={\"center\"}\n\t\t\t\talign={\"center\"}\n\t\t\t>\n\t\t\t\t<Logo />\n\t\t\t\t<Stack direction={\"row\"} spacing={6}>\n\t\t\t\t\t<Link\n\t\t\t\t\t\thref={\"#hero\"}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tmixpanel.track(\"Home_View_Home_Click\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tHome\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link\n\t\t\t\t\t\thref={\"mailto:lucasgoh@codagence.com\"}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tmixpanel.track(\"Home_Execute_Contact_Click\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tContact\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link\n\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\"https://codagence.notion.site/TERMS-AND-CONDITIONS-416ed24afab14050a68e2f0d80357f65\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tmixpanel.track(\"Home_View_T&C_Click\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tTerms\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link\n\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\"https://codagence.notion.site/Privacy-Policy-cda6ffd6fcb446868ccf63d0be5ea5b2\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tmixpanel.track(\"Home_View_Privacy_Click\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tPrivacy\n\t\t\t\t\t</Link>\n\t\t\t\t</Stack>\n\t\t\t</Container>\n\n\t\t\t<Box\n\t\t\t\tborderTopWidth={1}\n\t\t\t\tborderStyle={\"solid\"}\n\t\t\t\tborderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n\t\t\t>\n\t\t\t\t<Container\n\t\t\t\t\tas={Stack}\n\t\t\t\t\tmaxW={\"6xl\"}\n\t\t\t\t\tpy={4}\n\t\t\t\t\tdirection={{ base: \"column\", md: \"row\" }}\n\t\t\t\t\tspacing={4}\n\t\t\t\t\tjustify={{ base: \"center\", md: \"space-between\" }}\n\t\t\t\t\talign={{ base: \"center\", md: \"center\" }}\n\t\t\t\t>\n\t\t\t\t\t<Text>© 2022 Codagence. All rights reserved</Text>\n\t\t\t\t\t<Stack direction={\"row\"} spacing={6}>\n\t\t\t\t\t\t<SocialButton\n\t\t\t\t\t\t\tlabel={\"Facebook\"}\n\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\"https://www.facebook.com/codagencewubbalubbadubbdubb\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FacebookOutlined />\n\t\t\t\t\t\t</SocialButton>\n\t\t\t\t\t\t<SocialButton\n\t\t\t\t\t\t\tlabel={\"Twitter\"}\n\t\t\t\t\t\t\thref={\"https://twitter.com/codagence18\"}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TwitterOutlined />\n\t\t\t\t\t\t</SocialButton>\n\t\t\t\t\t\t<SocialButton\n\t\t\t\t\t\t\tlabel={\"Instagram\"}\n\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\"https://www.instagram.com/codagence18/?hl=en\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<InstagramOutlined />\n\t\t\t\t\t\t</SocialButton>\n\t\t\t\t\t</Stack>\n\t\t\t\t</Container>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n}\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/dashboard/Nav.tsx",["871","872","873"],"import {\n\tBox,\n\tFlex,\n\tText,\n\tIconButton,\n\tButton,\n\tStack,\n\tCollapse,\n\tIcon,\n\tLink,\n\tPopover,\n\tPopoverTrigger,\n\tPopoverContent,\n\tuseColorModeValue,\n\tuseBreakpointValue,\n\tuseDisclosure,\n} from \"@chakra-ui/react\";\nimport {\n\tHamburgerIcon,\n\tCloseIcon,\n\tChevronDownIcon,\n\tChevronRightIcon,\n} from \"@chakra-ui/icons\";\nimport codagenceWordLogo from \"../../assets/logo/Codagence_main_logo.png\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { useHistory } from \"react-router-dom\";\nimport {Suffix_Nav} from \"../../utils/components\"\n\nexport default function Nav() {\n\tconst { isOpen, onToggle } = useDisclosure();\n\t// Get current sign in User\n\tconst user = useContext(AuthContext);\n\tlet history = useHistory();\n\n\treturn (\n\t\t<Box>\n\t\t\t<Flex\n\t\t\t\tbg={useColorModeValue(\"white\", \"gray.800\")}\n\t\t\t\tcolor={useColorModeValue(\"gray.600\", \"white\")}\n\t\t\t\tminH={\"60px\"}\n\t\t\t\tpy={{ base: 2 }}\n\t\t\t\tpx={{ base: 4 }}\n\t\t\t\tborderBottom={1}\n\t\t\t\tborderStyle={\"solid\"}\n\t\t\t\tborderColor={useColorModeValue(\"gray.200\", \"gray.900\")}\n\t\t\t\talign={\"center\"}\n\t\t\t>\n\t\t\t\t<Flex\n\t\t\t\t\tflex={{ base: 1, md: \"auto\" }}\n\t\t\t\t\tml={{ base: -2 }}\n\t\t\t\t\tdisplay={{ base: \"flex\", md: \"none\" }}\n\t\t\t\t>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tonClick={onToggle}\n\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\tisOpen ? (\n\t\t\t\t\t\t\t\t<CloseIcon w={3} h={3} />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<HamburgerIcon w={5} h={5} />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvariant={\"ghost\"}\n\t\t\t\t\t\taria-label={\"Toggle Navigation\"}\n\t\t\t\t\t/>\n\t\t\t\t</Flex>\n\t\t\t\t<Flex\n\t\t\t\t\tflex={{ base: 1 }}\n\t\t\t\t\tjustify={{ base: \"center\", md: \"start\" }}\n\t\t\t\t>\n\t\t\t\t\t<img\n\t\t\t\t\t\tstyle={{ width: \"130px\", height: \"25px\" }}\n\t\t\t\t\t\tsrc={codagenceWordLogo}\n\t\t\t\t\t\talt=\"Codagence Logo\"\n\t\t\t\t\t/>\n\n\t\t\t\t</Flex>\n\n\t\t\t\t{user === null ? (\n\t\t\t\t\t<Stack\n\t\t\t\t\t\tflex={{ base: 1, md: 0 }}\n\t\t\t\t\t\tjustify={\"flex-end\"}\n\t\t\t\t\t\tdirection={\"row\"}\n\t\t\t\t\t\tspacing={6}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tas={\"a\"}\n\t\t\t\t\t\t\tfontSize={\"sm\"}\n\t\t\t\t\t\t\tfontWeight={400}\n\t\t\t\t\t\t\tvariant={\"link\"}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t// Refresh the page if user have logged in, else proceed to login page\n\t\t\t\t\t\t\t\tuser === null\n\t\t\t\t\t\t\t\t\t? history.push(RoutePath.login)\n\t\t\t\t\t\t\t\t\t: history.replace(RoutePath.home);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tdisplay={{ base: \"none\", md: \"inline-flex\" }}\n\t\t\t\t\t\t\tfontSize={\"sm\"}\n\t\t\t\t\t\t\tfontWeight={600}\n\t\t\t\t\t\t\tcolor={\"white\"}\n\t\t\t\t\t\t\tbg={\"#270949\"}\n\t\t\t\t\t\t\t_hover={{\n\t\t\t\t\t\t\t\tbg: \"#4654A3\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t// Refresh the page if user have logged in, else proceed to registration page\n\t\t\t\t\t\t\t\tuser === null\n\t\t\t\t\t\t\t\t\t? history.push(RoutePath.register)\n\t\t\t\t\t\t\t\t\t: history.replace(RoutePath.home);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSign Up\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Stack>\n\t\t\t\t) : (\n\t\t\t\t\t<Stack\n\t\t\t\t\t\tflex={{ base: 1, md: 0 }}\n\t\t\t\t\t\tjustify={\"flex-end\"}\n\t\t\t\t\t\tdirection={\"row\"}\n\t\t\t\t\t\tspacing={6}\n\t\t\t\t\t>\n\t\t\t\t\t\t{DesktopNav(Suffix_Nav, false, user, history)}\n\t\t\t\t\t</Stack>\n\t\t\t\t)}\n\t\t\t</Flex>\n\t\t</Box>\n\t);\n}\n\nconst DesktopNav = (\n\tNAV_ITEMS: NavItem[],\n\tisPrefix: boolean,\n\tuser: any,\n\thistory: any\n) => {\n\tconst linkColor = useColorModeValue(\"gray.600\", \"gray.200\");\n\tconst linkHoverColor = useColorModeValue(\"gray.800\", \"white\");\n\tconst popoverContentBgColor = useColorModeValue(\"white\", \"gray.800\");\n\n\treturn (\n\t\t<Stack direction={\"row\"} spacing={4}>\n\t\t\t{NAV_ITEMS.map((navItem) => (\n\t\t\t\t<Box key={navItem.label}>\n\t\t\t\t\t<Popover trigger={\"hover\"} placement={\"bottom-start\"}>\n\t\t\t\t\t\t<PopoverTrigger>\n\t\t\t\t\t\t\t{isPrefix ? (\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tp={2}\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\tnavItem.onClick(user, history)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tfontSize={\"sm\"}\n\t\t\t\t\t\t\t\t\tfontWeight={500}\n\t\t\t\t\t\t\t\t\tcolor={linkColor}\n\t\t\t\t\t\t\t\t\t_hover={{\n\t\t\t\t\t\t\t\t\t\ttextDecoration: \"none\",\n\t\t\t\t\t\t\t\t\t\tcolor: linkHoverColor,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{navItem.label}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tas={\"a\"}\n\t\t\t\t\t\t\t\t\tfontSize={\"sm\"}\n\t\t\t\t\t\t\t\t\tfontWeight={600}\n\t\t\t\t\t\t\t\t\tcolor={\"white\"}\n\t\t\t\t\t\t\t\t\tbg={\"pink.400\"}\n\t\t\t\t\t\t\t\t\t_hover={{\n\t\t\t\t\t\t\t\t\t\tbg: \"pink.300\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{navItem.label}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</PopoverTrigger>\n\n\t\t\t\t\t\t{navItem.children && (\n\t\t\t\t\t\t\t<PopoverContent\n\t\t\t\t\t\t\t\tborder={0}\n\t\t\t\t\t\t\t\tboxShadow={\"xl\"}\n\t\t\t\t\t\t\t\tbg={popoverContentBgColor}\n\t\t\t\t\t\t\t\tp={4}\n\t\t\t\t\t\t\t\trounded={\"xl\"}\n\t\t\t\t\t\t\t\tminW={\"sm\"}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Stack>\n\t\t\t\t\t\t\t\t\t{navItem.children.map((child) =>\n\t\t\t\t\t\t\t\t\t\tDesktopSubNav(\n\t\t\t\t\t\t\t\t\t\t\t{ ...child },\n\t\t\t\t\t\t\t\t\t\t\tuser,\n\t\t\t\t\t\t\t\t\t\t\thistory\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t</PopoverContent>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Popover>\n\t\t\t\t</Box>\n\t\t\t))}\n\t\t</Stack>\n\t);\n};\n\nconst DesktopSubNav = (\n\t{ label, onClick, subLabel }: NavItem,\n\tuser: any,\n\thistory: any\n) => {\n\treturn (\n\t\t<Link\n\t\t\tonClick={() => onClick(user, history)}\n\t\t\trole={\"group\"}\n\t\t\tdisplay={\"block\"}\n\t\t\tp={2}\n\t\t\trounded={\"md\"}\n\t\t\t_hover={{ bg: useColorModeValue(\"pink.50\", \"gray.900\") }}\n\t\t>\n\t\t\t<Stack direction={\"row\"} align={\"center\"}>\n\t\t\t\t<Box>\n\t\t\t\t\t<Text\n\t\t\t\t\t\ttransition={\"all .3s ease\"}\n\t\t\t\t\t\t_groupHover={{ color: \"pink.400\" }}\n\t\t\t\t\t\tfontWeight={500}\n\t\t\t\t\t>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Text fontSize={\"sm\"}>{subLabel}</Text>\n\t\t\t\t</Box>\n\t\t\t\t<Flex\n\t\t\t\t\ttransition={\"all .3s ease\"}\n\t\t\t\t\ttransform={\"translateX(-10px)\"}\n\t\t\t\t\topacity={0}\n\t\t\t\t\t_groupHover={{\n\t\t\t\t\t\topacity: \"100%\",\n\t\t\t\t\t\ttransform: \"translateX(0)\",\n\t\t\t\t\t}}\n\t\t\t\t\tjustify={\"flex-end\"}\n\t\t\t\t\talign={\"center\"}\n\t\t\t\t\tflex={1}\n\t\t\t\t>\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tcolor={\"pink.400\"}\n\t\t\t\t\t\tw={5}\n\t\t\t\t\t\th={5}\n\t\t\t\t\t\tas={ChevronRightIcon}\n\t\t\t\t\t/>\n\t\t\t\t</Flex>\n\t\t\t</Stack>\n\t\t</Link>\n\t);\n};\n\n\ninterface NavItem {\n\tkey?: number;\n\tlabel: string;\n\tsubLabel?: string;\n\tchildren?: Array<NavItem>;\n\tonClick: (user: any, history: any) => void;\n}\n\n\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/utils/configSetup.ts",["874"],"import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport mixpanel from 'mixpanel-browser';\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBVevQPa5E9j7DMqXc31ktChWJ_cKsmD9w\",\n  authDomain: \"codagence.firebaseapp.com\",\n  projectId: \"codagence\",\n  storageBucket: \"codagence.appspot.com\",\n  messagingSenderId: \"550164990740\",\n  appId: \"1:550164990740:web:2f6eb30c709b8b820d1001\",\n  measurementId: \"G-QM2TQK9ZS9\"\n};\n\nmixpanel.init('73d1aa616f4d69439f5b5b354529899e'); \n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(firebaseApp);\n\nexport const auth = getAuth(firebaseApp);\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/home/NewsLetter.tsx",["875"],"import {\n\tFlex,\n\tStack,\n\tHeading,\n\tText,\n\tInput,\n\tButton,\n\tIcon,\n\tuseColorModeValue,\n\tcreateIcon,\n} from \"@chakra-ui/react\";\nimport { message } from \"antd\";\nimport { useRef, useState } from \"react\";\nimport { NewsletterRepo } from \"../../services/api/repositories/newsletter_repo\";\n\nexport default function CardWithIllustration() {\n\tlet newsletterRepo = new NewsletterRepo();\n\n\tconst [_inputEmail, setEmail] = useState(\"\");\n\n\tconst subscribeNewsletter = async () => {\n\t\tif (_inputEmail.trim() === \"\") {\n\t\t\tmessage.error(\"The email cannot be empty\");\n\t\t} else {\n\t\t\tlet apiResult = await newsletterRepo.subscribeNewsletter({ email: _inputEmail });\n\t\t\tif(apiResult.isSuccess){\n\t\t\t    message.success(\"You have successfully subscibed\");\n\t\t\t} else {\n\t\t\t    message.error(\"Fail to subscribe\");\n\t\t\t}\n\t\t}\n\t};\n\n\tconst updateEvent = (evt: any) => {\n\t\tsetEmail(evt.target.value);\n\t};\n\treturn (\n\t\t<Flex\n\t\t\tminH={\"100vh\"}\n\t\t\talign={\"center\"}\n\t\t\tjustify={\"center\"}\n\t\t\tpy={12}\n\t\t\tbg={useColorModeValue(\"gray.50\", \"gray.800\")}\n\t\t>\n\t\t\t<Stack\n\t\t\t\tboxShadow={\"2xl\"}\n\t\t\t\tbg={useColorModeValue(\"white\", \"gray.700\")}\n\t\t\t\trounded={\"xl\"}\n\t\t\t\tp={10}\n\t\t\t\tspacing={8}\n\t\t\t\talign={\"center\"}\n\t\t\t>\n\t\t\t\t<Icon as={NotificationIcon} w={24} h={24} />\n\t\t\t\t<Stack align={\"center\"} spacing={2}>\n\t\t\t\t\t<Heading\n\t\t\t\t\t\ttextTransform={\"uppercase\"}\n\t\t\t\t\t\tfontSize={\"3xl\"}\n\t\t\t\t\t\tcolor={useColorModeValue(\"gray.800\", \"gray.200\")}\n\t\t\t\t\t>\n\t\t\t\t\t\tSubscribe\n\t\t\t\t\t</Heading>\n\t\t\t\t\t<Text fontSize={\"lg\"} color={\"gray.500\"}>\n\t\t\t\t\t\tSubscribe to our newsletter & stay up to date!\n\t\t\t\t\t</Text>\n\t\t\t\t</Stack>\n\t\t\t\t<Stack\n\t\t\t\t\tspacing={4}\n\t\t\t\t\tdirection={{ base: \"column\", md: \"row\" }}\n\t\t\t\t\tw={\"full\"}\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype={\"text\"}\n\t\t\t\t\t\tplaceholder={\"abc@codagence.com\"}\n\t\t\t\t\t\tcolor={useColorModeValue(\"gray.800\", \"gray.200\")}\n\t\t\t\t\t\tbg={useColorModeValue(\"gray.100\", \"gray.600\")}\n\t\t\t\t\t\trounded={\"full\"}\n\t\t\t\t\t\tborder={0}\n\t\t\t\t\t\t_focus={{\n\t\t\t\t\t\t\tbg: useColorModeValue(\"gray.200\", \"gray.800\"),\n\t\t\t\t\t\t\toutline: \"none\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={updateEvent}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tbg={\"blue.400\"}\n\t\t\t\t\t\trounded={\"full\"}\n\t\t\t\t\t\tcolor={\"white\"}\n\t\t\t\t\t\tflex={\"1 0 auto\"}\n\t\t\t\t\t\t_hover={{ bg: \"blue.500\" }}\n\t\t\t\t\t\t_focus={{ bg: \"blue.500\" }}\n\t\t\t\t\t\tonClick={() => subscribeNewsletter()}\n\t\t\t\t\t>\n\t\t\t\t\t\tSubscribe\n\t\t\t\t\t</Button>\n\t\t\t\t</Stack>\n\t\t\t</Stack>\n\t\t</Flex>\n\t);\n}\n\nconst NotificationIcon = createIcon({\n\tdisplayName: \"Notification\",\n\tviewBox: \"0 0 128 128\",\n\tpath: (\n\t\t<g id=\"Notification\">\n\t\t\t<rect\n\t\t\t\tclassName=\"cls-1\"\n\t\t\t\tx=\"1\"\n\t\t\t\ty=\"45\"\n\t\t\t\tfill={\"#fbcc88\"}\n\t\t\t\twidth=\"108\"\n\t\t\t\theight=\"82\"\n\t\t\t/>\n\t\t\t<circle\n\t\t\t\tclassName=\"cls-2\"\n\t\t\t\tfill={\"#8cdd79\"}\n\t\t\t\tcx=\"105\"\n\t\t\t\tcy=\"86\"\n\t\t\t\tr=\"22\"\n\t\t\t/>\n\t\t\t<rect\n\t\t\t\tclassName=\"cls-3\"\n\t\t\t\tfill={\"#f6b756\"}\n\t\t\t\tx=\"1\"\n\t\t\t\ty=\"122\"\n\t\t\t\twidth=\"108\"\n\t\t\t\theight=\"5\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-4\"\n\t\t\t\tfill={\"#7ece67\"}\n\t\t\t\td=\"M105,108A22,22,0,0,1,83.09,84a22,22,0,0,0,43.82,0A22,22,0,0,1,105,108Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tfill={\"#f6b756\"}\n\t\t\t\tclassName=\"cls-3\"\n\t\t\t\td=\"M109,107.63v4A22,22,0,0,1,83.09,88,22,22,0,0,0,109,107.63Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-5\"\n\t\t\t\tfill={\"#d6ac90\"}\n\t\t\t\td=\"M93,30l16,15L65.91,84.9a16,16,0,0,1-21.82,0L1,45,17,30Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-6\"\n\t\t\t\tfill={\"#cba07a\"}\n\t\t\t\td=\"M109,45,65.91,84.9a16,16,0,0,1-21.82,0L1,45l2.68-2.52c43.4,40.19,41.54,39.08,45.46,40.6A16,16,0,0,0,65.91,79.9l40.41-37.42Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-7\"\n\t\t\t\tfill={\"#dde1e8\"}\n\t\t\t\td=\"M93,1V59.82L65.91,84.9a16,16,0,0,1-16.77,3.18C45.42,86.64,47,87.6,17,59.82V1Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-8\"\n\t\t\t\tfill={\"#c7cdd8\"}\n\t\t\t\td=\"M74,56c-3.56-5.94-3-10.65-3-17.55a16.43,16.43,0,0,0-12.34-16,5,5,0,1,0-7.32,0A16,16,0,0,0,39,38c0,7.13.59,12-3,18a3,3,0,0,0,0,6H50.41a5,5,0,1,0,9.18,0H74a3,3,0,0,0,0-6ZM53.2,21.37a3,3,0,1,1,3.6,0,1,1,0,0,0-.42.7,11.48,11.48,0,0,0-2.77,0A1,1,0,0,0,53.2,21.37Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-3\"\n\t\t\t\tfill={\"#f6b756\"}\n\t\t\t\td=\"M46.09,86.73,3,127H1v-1c6-5.62-1.26,1.17,43.7-40.78A1,1,0,0,1,46.09,86.73Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-3\"\n\t\t\t\tfill={\"#f6b756\"}\n\t\t\t\td=\"M109,126v1h-2L63.91,86.73a1,1,0,0,1,1.39-1.49C111,127.85,103.11,120.51,109,126Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-8\"\n\t\t\t\tfill={\"#c7cdd8\"}\n\t\t\t\td=\"M93,54.81v5L65.91,84.9a16,16,0,0,1-16.77,3.18C45.42,86.64,47,87.6,17,59.82v-5L44.09,79.9a16,16,0,0,0,21.82,0Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-9\"\n\t\t\t\tfill={\"#fff\"}\n\t\t\t\td=\"M101,95c-.59,0-.08.34-8.72-8.3a1,1,0,0,1,1.44-1.44L101,92.56l15.28-15.28a1,1,0,0,1,1.44,1.44C100.21,96.23,101.6,95,101,95Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-3\"\n\t\t\t\tfill={\"#f6b756\"}\n\t\t\t\td=\"M56.8,18.38a3,3,0,1,0-3.6,0A1,1,0,0,1,52,20,5,5,0,1,1,58,20,1,1,0,0,1,56.8,18.38Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-1\"\n\t\t\t\tfill={\"#fbcc88\"}\n\t\t\t\td=\"M71,42.17V35.45c0-8.61-6.62-16-15.23-16.43A16,16,0,0,0,39,35c0,7.33.58,12-3,18H74A21.06,21.06,0,0,1,71,42.17Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-3\"\n\t\t\t\tfill={\"#f6b756\"}\n\t\t\t\td=\"M74,53H36a21.36,21.36,0,0,0,1.86-4H72.14A21.36,21.36,0,0,0,74,53Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-3\"\n\t\t\t\tfill={\"#f6b756\"}\n\t\t\t\td=\"M59.59,59a5,5,0,1,1-9.18,0\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-1\"\n\t\t\t\tfill={\"#fbcc88\"}\n\t\t\t\td=\"M74,59H36a3,3,0,0,1,0-6H74a3,3,0,0,1,0,6Z\"\n\t\t\t/>\n\t\t</g>\n\t),\n});\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/repositories/newsletter_repo.tsx",["876","877","878"],"import { LocalStorage } from \"../../../utils/localStorage\";\nimport { Networking } from \"../../networking\";\nimport { Response } from \"../../response\";\nimport { Newsletter } from \"../models/newsletter_model\";\nimport { GetUserByIdResponse, User } from \"../models/user_model\";\n\nexport class NewsletterRepo {\n\tnetworking = new Networking();\n\n\tasync subscribeNewsletter(props: {\n\n\t\temail?: string;\n\t}): Promise<Response> {\n\t\t// Initialize the save user model\n\t\tconst subscribeNewsletter = new Newsletter({\n\t\t\temail: props.email,\n\n\t\t});\n\n\t\t// Object to Map, then to JSON\n\t\tconst body = Object.fromEntries(subscribeNewsletter.toJson());\n\n\t\tlet headers = {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t};\n\n\t\tlet response = await this.networking.postData(\n\t\t\t\"subscribe_newsletter\", // API choice is depends on the usage\n\t\t\tbody,\n\t\t\theaders\n\t\t);\n\n\t\t// If data is retrieved and the data is not empty, then return\n\t\tif (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.data !== null &&\n\t\t\tresponse.data !== \"\"\n\t\t) {\n\t\t\treturn new Response(true, response.message, true);\n\n\t\t\t// If data is retrieved and the data is empty, then return\n\t\t} else if (\n\t\t\tresponse.isSuccess &&\n\t\t\tresponse.message === \"No records found\"\n\t\t) {\n\t\t\treturn new Response(true, \"No records found\", \"\");\n\n\t\t\t// If http method is timeout or being halt, then return\n\t\t} else if (!response.isSuccess) {\n\t\t\treturn new Response(false, response.message, \"\");\n\t\t} else {\n\t\t\treturn new Response(false, response.message, response.data);\n\t\t}\n\t}\n}\n","/Users/gohshengyang/Documents/GitHub/codagence-web/src/services/api/models/newsletter_model.tsx",[],"/Users/gohshengyang/Documents/GitHub/codagence-web/src/pages/home/Features.tsx",["879","880","881"],"import {\n\tButton,\n\tFlex,\n\tHeading,\n\tImage,\n\tStack,\n\tText,\n\tuseBreakpointValue,\n} from \"@chakra-ui/react\";\nimport embed_dashboard_demo from \"../../assets/features/embed_dashboard_demo.png\";\nimport add_url_demo from \"../../assets/features/add_url_demo.png\";\nimport edit_data_demo from \"../../assets/features/edit_data_demo.png\";\nimport switch_param_demo from \"../../assets/features/switch_param_demo.png\";\nimport { SubTitle } from \"chart.js\";\n\nexport default function SplitScreen() {\n\tconst content = [\n\t\t{\n\t\t\ttitle: \"Webhook API\",\n\t\t\tsubtitle: \"Enter webservices or API\",\n\t\t\tdesc: \"Enter the API which will return the data going to be visualised.\",\n\t\t\timg: add_url_demo,\n\t\t\thighlight: \"blue.400\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Dashboard Editor\",\n\t\t\tsubtitle: \"Edit Charts and Graphs\",\n\t\t\tdesc: \"Edit and arrange the charts that are going to insert in dashboard.\",\n\t\t\timg: edit_data_demo,\n\t\t\thighlight: \"pink.400\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Production\",\n\t\t\tsubtitle: \"Embed the analytic dashboard\",\n\t\t\tdesc: \"Embed the dashboard you have designed into your site.\",\n\t\t\timg: embed_dashboard_demo,\n\t\t\thighlight: \"red.400\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Flexible dashboard\",\n\t\t\tsubtitle: \"Change the parameter to show different results\",\n\t\t\tdesc: \"Different from Tableau or Power BI embedded dashboard, you can change the parameter in the URL to show different visualisation.\",\n\t\t\timg: switch_param_demo,\n\t\t\thighlight: \"purple.400\",\n\t\t},\n\t];\n\treturn (\n\t\t<div>\n\t\t\t{content.map(({ title, subtitle, desc, img, highlight }) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Stack\n\t\t\t\t\t\tminH={\"70vh\"}\n\t\t\t\t\t\tdirection={{ base: \"column\", md: \"row\" }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\tp={8}\n\t\t\t\t\t\t\tflex={1}\n\t\t\t\t\t\t\talign={\"center\"}\n\t\t\t\t\t\t\tjustify={\"center\"}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Stack spacing={6} w={\"full\"} maxW={\"lg\"}>\n\t\t\t\t\t\t\t\t<Heading\n\t\t\t\t\t\t\t\t\tfontSize={{\n\t\t\t\t\t\t\t\t\t\tbase: \"3xl\",\n\t\t\t\t\t\t\t\t\t\tmd: \"4xl\",\n\t\t\t\t\t\t\t\t\t\tlg: \"5xl\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\tas={\"span\"}\n\t\t\t\t\t\t\t\t\t\tposition={\"relative\"}\n\t\t\t\t\t\t\t\t\t\t_after={{\n\t\t\t\t\t\t\t\t\t\t\tcontent: \"''\",\n\t\t\t\t\t\t\t\t\t\t\twidth: \"full\",\n\t\t\t\t\t\t\t\t\t\t\theight: \"10px\",\n\t\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\t\tbottom: 1,\n\t\t\t\t\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\t\t\t\t\tbg: highlight,\n\t\t\t\t\t\t\t\t\t\t\tzIndex: -1,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t<br />{\" \"}\n\t\t\t\t\t\t\t\t\t<Text color={highlight} as={\"span\"}>\n\t\t\t\t\t\t\t\t\t\t{subtitle}\n\t\t\t\t\t\t\t\t\t</Text>{\" \"}\n\t\t\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\tfontSize={{ base: \"md\", lg: \"lg\" }}\n\t\t\t\t\t\t\t\t\tcolor={\"gray.500\"}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{desc}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t<Flex flex={1}>\n\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\talt={\"Add Image Url\"}\n\t\t\t\t\t\t\t\tobjectFit={\"scale-down\"}\n\t\t\t\t\t\t\t\tsrc={img}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t</Stack>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n}\n","/Users/gohshengyang/Documents/GitHub/pagestore-web/src/index.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/reportWebVitals.ts",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/App.tsx",["882","883","884","885","886","887","888"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/utils/AuthProvider.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/utils/configSetup.ts",["889"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/utils/routePath.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/utils/localStorage.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/utils/AuthContext.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/home/Home.tsx",["890","891","892","893","894","895","896","897","898","899","900","901","902","903","904"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/login/ForgotPassword.tsx",["905","906"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/login/Login.tsx",["907","908","909"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/register/EmailVerification.tsx",["910"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/profile/ResetPassword.tsx",["911","912","913"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/url/FillUrl.tsx",["914","915","916","917","918"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/url/FillParam.tsx",["919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/url/FillField.tsx",["935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/dashboard/MainDashboard.tsx",["953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/report/report.tsx",["970","971"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/graph_display/GraphDisplay.tsx",["972","973","974","975","976","977"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/graph_editor/GraphEditor.tsx",["978","979","980","981","982","983","984","985","986","987","988"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/profile/UserProfile.tsx",["989"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/register/Register.tsx",["990","991"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/payment/ProductChoices.tsx",["992","993","994","995"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/payment/CheckoutPayment.tsx",["996","997","998","999"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/home/Pricing.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/utils/firebaseServices.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/home/Features.tsx",["1000","1001","1002"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/home/Footer.tsx",["1003"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/home/Nav.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/home/Hero.tsx",["1004","1005"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/home/NewsLetter.tsx",["1006"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/utils/components.tsx",["1007","1008","1009","1010","1011"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/utils/encryption.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/repositories/user_repo.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/models/user_model.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/graph_display/GraphPreview.tsx",["1012","1013","1014","1015","1016","1017","1018","1019"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/repositories/url_repo.tsx",["1020"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/sider/PageSider.tsx",["1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/chartManager/BarChart.tsx",["1037"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/repositories/file_repo.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/repositories/report_repo.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/response.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/repositories/payment_repo.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/repositories/newsletter_repo.tsx",["1038","1039","1040"],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/networking.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/models/url_model.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/chartManager/ChartColor.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/models/file_model.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/models/newsletter_model.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/models/payment_model.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/services/api/models/report_model.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/utils/constants.tsx",[],"/Users/gohshengyang/Documents/GitHub/pagestore-web/src/pages/dashboard/Nav.tsx",["1041","1042","1043"],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/index.tsx",[],["1044","1045"],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/reportWebVitals.ts",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/App.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/utils/AuthProvider.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/utils/configSetup.ts",["1046"],"import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getAnalytics } from \"firebase/analytics\";\n\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyACuJd_plne9pWvgluSj_k3wQLZGIcgjDw\",\n  authDomain: \"zeusapi-246c0.firebaseapp.com\",\n  projectId: \"zeusapi-246c0\",\n  storageBucket: \"zeusapi-246c0.appspot.com\",\n  messagingSenderId: \"279209489466\",\n  appId: \"1:279209489466:web:6e3cd629add5cdaefa3103\",\n  measurementId: \"G-XESY9LEXBY\"\n};\n\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(firebaseApp);\n\nexport const auth = getAuth(firebaseApp);\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/utils/routePath.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/utils/localStorage.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/utils/AuthContext.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/login/Login.tsx",["1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058"],"import React, { useContext, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Form, Checkbox, Card } from \"antd\";\nimport \"./Login.less\";\nimport { useHistory } from \"react-router-dom\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport {\n\tBackHeader,\n\tEmailField,\n\tFormButton,\n\tPasswordField,\n} from \"../../utils/components\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { Encryption } from \"../../utils/encryption\";\nimport {\n\tFlex,\n\tBox,\n\tFormControl,\n\tFormLabel,\n\tInput,\n\tStack,\n\tLink,\n\tButton,\n\tHeading,\n\tText,\n\tuseColorModeValue,\n} from \"@chakra-ui/react\";\n\nconst formItemLayout = {\n\tlabelCol: {\n\t\txs: { span: 22 },\n\t\tsm: { span: 6 },\n\t},\n\twrapperCol: {\n\t\txs: { span: 22 },\n\t\tsm: { span: 14 },\n\t},\n};\n\nconst tailFormItemLayout = {\n\twrapperCol: {\n\t\txs: {\n\t\t\tspan: 22,\n\t\t\toffset: 0,\n\t\t},\n\t\tsm: {\n\t\t\tspan: 14,\n\t\t\toffset: 6,\n\t\t},\n\t},\n};\n\nexport const Login: React.FC<any> = () => {\n\tlet userRepo = new UserRepo();\n\n\tlet history = useHistory();\n\n\t// Get current sign in User\n\tconst user = useContext(AuthContext);\n\n\t// Is loading flag\n\tconst [isLoading, setLoading] = useState(false);\n\n\tconst onFinish = async (values: any) => {\n\t\tsetLoading(true);\n\n\t\tlet firebaseResult = await FirebaseServices.logIn(\n\t\t\tvalues[\"email\"],\n\t\t\tvalues[\"password\"]\n\t\t);\n\t\tif (firebaseResult.isSuccess) {\n\t\t\tlet tokenResponse = await userRepo.createAccessToken({\n\t\t\t\temail: values[\"email\"],\n\t\t\t\tpassword: values[\"password\"],\n\t\t\t});\n\n\t\t\tif (tokenResponse.isSuccess) {\n\t\t\t\tlet apiResult = await userRepo.saveUser({\n\t\t\t\t\tpurpose: \"login\",\n\t\t\t\t\tuserId: firebaseResult.data.uid,\n\t\t\t\t\temail: values[\"email\"],\n\t\t\t\t\tpassword: Encryption.encrypt(values[\"password\"]),\n\t\t\t\t});\n\n\t\t\t\tif (apiResult.isSuccess) {\n\t\t\t\t\t// Check if the user has verify the email\n\t\t\t\t\tif (firebaseResult.data?.emailVerified) {\n\t\t\t\t\t\t// Go to home\n\t\t\t\t\t\talert(\"Log In success\");\n\t\t\t\t\t\thistory.replace(RoutePath.home);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Go to email verification page\n\t\t\t\t\t\thistory.replace(RoutePath.email_verification);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\talert(apiResult.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\talert(tokenResponse.message);\n\t\t\t}\n\t\t} else {\n\t\t\talert(firebaseResult.message);\n\t\t}\n\t\tsetLoading(false);\n\t};\n\n\treturn (\n\t\t<Flex\n\t\t\tminH={\"100vh\"}\n\t\t\talign={\"center\"}\n\t\t\tjustify={\"center\"}\n\t\t\tbg={useColorModeValue(\"gray.50\", \"gray.800\")}\n\t\t>\n\t\t\t<Stack spacing={8} mx={\"auto\"} maxW={\"lg\"} py={12} px={6}>\n\t\t\t\t<Stack align={\"center\"}>\n\t\t\t\t\t<Heading fontSize={\"4xl\"}>Sign in to your account</Heading>\n\t\t\t\t\t<Text fontSize={\"lg\"} color={\"gray.600\"}>\n\t\t\t\t\t\tto enjoy all of our cool{\" \"}\n\t\t\t\t\t\t<Link color={\"blue.400\"}>features</Link> ✌️\n\t\t\t\t\t</Text>\n\t\t\t\t</Stack>\n\t\t\t\t<Box\n\t\t\t\t\trounded={\"lg\"}\n\t\t\t\t\tbg={useColorModeValue(\"white\", \"gray.700\")}\n\t\t\t\t\tboxShadow={\"lg\"}\n\t\t\t\t\tp={8}\n\t\t\t\t>\n\t\t\t\t\t<Stack spacing={4}>\n\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\tname=\"normal_login\"\n\t\t\t\t\t\t\tclassName=\"login_form\"\n\t\t\t\t\t\t\tinitialValues={{ remember: true }}\n\t\t\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<EmailField />\n\t\t\t\t\t\t\t<PasswordField />\n\n\t\t\t\t\t\t\t<Stack spacing={10}>\n\t\t\t\t\t\t\t\t<Stack\n\t\t\t\t\t\t\t\t\tdirection={{ base: \"column\", sm: \"row\" }}\n\t\t\t\t\t\t\t\t\talign={\"start\"}\n\t\t\t\t\t\t\t\t\tjustify={\"space-between\"}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\tname=\"remember\"\n\t\t\t\t\t\t\t\t\t\tvaluePropName=\"checked\"\n\t\t\t\t\t\t\t\t\t\tnoStyle\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Checkbox>Remember me</Checkbox>\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"login_form_forgot_pwd\"\n\t\t\t\t\t\t\t\t\t\t\thref={RoutePath.forgot_password}\n\t\t\t\t\t\t\t\t\t\t\tcolor={\"blue.400\"}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tForgot password\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t<FormButton\n\t\t\t\t\t\t\t\t\t\ttitle=\"Log In\"\n\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t<Text align={\"center\"}>\n\t\t\t\t\t\t\t\t\tor{\" \"}\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tcolor={\"blue.400\"}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\thistory.replace(RoutePath.register);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tregister now!\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</Stack>\n\n\t\t\t\t\t\t\t<Form.Item {...tailFormItemLayout}></Form.Item>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Stack>\n\t\t\t\t</Box>\n\t\t\t</Stack>\n\t\t</Flex>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/payment/ProductChoices.tsx",["1059","1060","1061","1062"],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/payment/CheckoutPayment.tsx",["1063","1064","1065","1066"],"import React, { useEffect, useState } from \"react\";\nimport \"./CheckoutPayment.less\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport { RoutePath } from \"../../utils/routePath\";\nimport { CheckCircleIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport { Box, Button, Flex, Heading, Text } from \"@chakra-ui/react\";\nimport { Space } from \"antd\";\n\ninterface CheckoutPaymentProps {}\n\nexport const CheckoutPayment: React.FC<CheckoutPaymentProps> = ({}) => {\n\tconst location = useLocation();\n\n\tconst history = useHistory();\n\n\tconst [checkOutStatus, setCheckoutStatus] = useState<any>();\n\n\tconst onFinish = async () => {\n\t\tsetLoading(true);\n\n\t\thistory.replace(RoutePath.home);\n\n\t\tsetLoading(false);\n\t};\n\n\t// Is loading flag\n\tconst [isLoading, setLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\t// Get the parameter value from url\n\t\tconst data: any = new URLSearchParams(location.search).get(\"status\");\n\t\tsetCheckoutStatus(data);\n\t}, []);\n\n\treturn (\n\t\t<Box textAlign=\"center\" py={10} px={6}>\n\t\t\t<Space direction=\"vertical\">\n\t\t\t\t{checkOutStatus === \"success\" ? (\n\t\t\t\t\t<CheckCircleIcon boxSize={\"50px\"} color={\"green.500\"} />\n\t\t\t\t) : (\n\t\t\t\t\t<Box display=\"inline-block\">\n\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\tflexDirection=\"column\"\n\t\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\t\tbg={\"red.500\"}\n\t\t\t\t\t\t\trounded={\"50px\"}\n\t\t\t\t\t\t\tw={\"55px\"}\n\t\t\t\t\t\t\th={\"55px\"}\n\t\t\t\t\t\t\ttextAlign=\"center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CloseIcon boxSize={\"20px\"} color={\"white\"} />\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t\t<Heading as=\"h2\" size=\"xl\" mt={6} mb={2}>\n\t\t\t\t\tPayment {checkOutStatus}\n\t\t\t\t</Heading>\n\t\t\t\t<Text color={\"gray.500\"}>Please return to the main page.</Text>\n\t\t\t\t<Button\n\t\t\t\t\tdisplay={{ base: \"none\", md: \"inline-flex\" }}\n\t\t\t\t\tfontSize={\"sm\"}\n\t\t\t\t\tfontWeight={600}\n\t\t\t\t\tcolor={\"white\"}\n\t\t\t\t\tbg={\"#270949\"}\n\t\t\t\t\t_hover={{\n\t\t\t\t\t\tbg: \"#4654A3\",\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\thistory.replace(RoutePath.default);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tHome\n\t\t\t\t</Button>\n\t\t\t</Space>\n\t\t</Box>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/register/Register.tsx",["1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081"],"import React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Form, Checkbox, Input, Card, Radio } from \"antd\";\nimport \"./Register.less\";\nimport { useHistory } from \"react-router-dom\";\nimport \"antd-country-phone-input/dist/index.css\";\nimport { ConfigProvider } from \"antd-country-phone-input\";\nimport en from \"world_countries_lists/data/en/world.json\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport {\n\tBackHeader,\n\tConfirmPasswordField,\n\tEmailField,\n\tFormButton,\n\tFormPhoneInput,\n\tPasswordField,\n} from \"../../utils/components\";\nimport { Encryption } from \"../../utils/encryption\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport PhoneInput, { formatPhoneNumberIntl } from \"react-phone-number-input\";\nimport {\n\tFlex,\n\tBox,\n\tFormControl,\n\tFormLabel,\n\tHStack,\n\tInputRightElement,\n\tStack,\n\tButton,\n\tHeading,\n\tText,\n\tuseColorModeValue,\n\tLink,\n} from \"@chakra-ui/react\";\nimport { ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\n\nconst formItemLayout = {\n\tlabelCol: {\n\t\txs: { span: 24 },\n\t\tsm: { span: 8 },\n\t},\n\twrapperCol: {\n\t\txs: { span: 24 },\n\t\tsm: { span: 16 },\n\t},\n};\nconst tailFormItemLayout = {\n\twrapperCol: {\n\t\txs: {\n\t\t\tspan: 24,\n\t\t\toffset: 0,\n\t\t},\n\t\tsm: {\n\t\t\tspan: 16,\n\t\t\toffset: 8,\n\t\t},\n\t},\n};\n\nexport const Register: React.FC<any> = () => {\n\tlet userRepo = new UserRepo();\n\n\tlet history = useHistory();\n\n\t// Is loading flag\n\tconst [isLoading, setLoading] = useState(false);\n\n\tconst onFinish = async (values: any) => {\n\t\tsetLoading(true);\n\n\n\t\tlet firebaseResult = await FirebaseServices.createAccount(\n\t\t\tvalues[\"email\"],\n\t\t\tvalues[\"password\"]\n\t\t);\n\n\t\tif (firebaseResult.isSuccess) {\n\n\t\t\tlet apiResult = await userRepo.saveUser({\n\t\t\t\tpurpose: \"new_user\",\n\t\t\t\tuserId: firebaseResult.data.uid,\n\t\t\t\temail: values[\"email\"],\n\t\t\t\tpassword: Encryption.encrypt(values[\"password\"]),\n\t\t\t\tusername: values[\"first_name\"] + values[\"last_name\"],\n\t\t\t\tfirstName: values[\"first_name\"],\n\t\t\t\tlastName: values[\"last_name\"],\n\t\t\t\tphoneNo: formatPhoneNumberIntl(values[\"phone_number\"]),\n\t\t\t\tacctType: values[\"account_type\"],\n\t\t\t\torgName: values[\"organisation_name\"],\n\t\t\t\tpackagePlan: \"free\",\n\t\t\t});\n\n\t\t\tif (apiResult.isSuccess) {\n\t\t\t\talert(\"Email verification has sent to your mail box.\");\n\n\t\t\t\thistory.replace(RoutePath.product_choices);\n\t\t\t\tsetLoading(false);\n\t\t\t} else {\n\n\t\t\t\talert(apiResult.message);\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t} else {\n\n\t\t\talert(firebaseResult.message);\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Flex\n\t\t\tminH={\"100vh\"}\n\t\t\talign={\"center\"}\n\t\t\tjustify={\"center\"}\n\t\t\tbg={useColorModeValue(\"gray.50\", \"gray.800\")}\n\t\t>\n\t\t\t<Stack spacing={8} mx={\"auto\"} maxW={\"lg\"} py={12} px={6}>\n\t\t\t\t<Stack align={\"center\"}>\n\t\t\t\t\t<Heading fontSize={\"4xl\"} textAlign={\"center\"}>\n\t\t\t\t\t\tSign up\n\t\t\t\t\t</Heading>\n\t\t\t\t\t<Text fontSize={\"lg\"} color={\"gray.600\"}>\n\t\t\t\t\t\tto enjoy all of our cool features ✌️\n\t\t\t\t\t</Text>\n\t\t\t\t</Stack>\n\t\t\t\t<Box\n\t\t\t\t\trounded={\"lg\"}\n\t\t\t\t\tbg={useColorModeValue(\"white\", \"gray.700\")}\n\t\t\t\t\tboxShadow={\"lg\"}\n\t\t\t\t\tp={8}\n\t\t\t\t>\n\t\t\t\t\t<Stack spacing={4}>\n\t\t\t\t\t\t<ConfigProvider locale={en}>\n\t\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\t\tname=\"register\"\n\t\t\t\t\t\t\t\tclassName=\"register_form\"\n\t\t\t\t\t\t\t\tinitialValues={{ remember: true }}\n\t\t\t\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<EmailField />\n\n\t\t\t\t\t\t\t\t<PasswordField />\n\n\t\t\t\t\t\t\t\t<ConfirmPasswordField />\n\n\t\t\t\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\tname=\"first_name\"\n\t\t\t\t\t\t\t\t\t\trules={[{ required: true }]}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tdisplay: \"inline-block\",\n\t\t\t\t\t\t\t\t\t\t\twidth: \"calc(50% - 8px)\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input placeholder=\"First Name\" />\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\tname=\"last_name\"\n\t\t\t\t\t\t\t\t\t\trules={[{ required: true }]}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tdisplay: \"inline-block\",\n\t\t\t\t\t\t\t\t\t\t\twidth: \"calc(50% - 8px)\",\n\t\t\t\t\t\t\t\t\t\t\tmargin: \"0 8px\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input placeholder=\"Last Name\" />\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t<FormPhoneInput />\n\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<FormLabel>Account Type</FormLabel>\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\tname=\"account_type\"\n\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Please choose your account type!\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Radio.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Radio.Button value=\"institute\">\n\t\t\t\t\t\t\t\t\t\t\t\tInstitute\n\t\t\t\t\t\t\t\t\t\t\t</Radio.Button>\n\t\t\t\t\t\t\t\t\t\t\t<Radio.Button value=\"company\">\n\t\t\t\t\t\t\t\t\t\t\t\tCompany\n\t\t\t\t\t\t\t\t\t\t\t</Radio.Button>\n\t\t\t\t\t\t\t\t\t\t</Radio.Group>\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t</>\n\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<FormLabel>Organisation Name</FormLabel>\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\tname=\"organisation_name\"\n\t\t\t\t\t\t\t\t\t\ttooltip=\"Please input your Company/Institution name\"\n\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Please input your Company/Institution name!\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input />\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t</>\n\n\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\tname=\"agreement\"\n\t\t\t\t\t\t\t\t\tvaluePropName=\"checked\"\n\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalidator: (_, value) =>\n\t\t\t\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t\t\t\t\t\t? Promise.resolve()\n\t\t\t\t\t\t\t\t\t\t\t\t\t: Promise.reject(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Should accept agreement\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t  ),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Checkbox>\n\t\t\t\t\t\t\t\t\t\tI have read the{\" \"}\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\tcolor={\"blue.400\"}\n\t\t\t\t\t\t\t\t\t\t\thref=\"https://codagence.notion.site/TERMS-AND-CONDITIONS-416ed24afab14050a68e2f0d80357f65\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tagreement\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</Checkbox>\n\t\t\t\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t\t\t\t<Stack spacing={10} pt={2}>\n\t\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t\t<FormButton\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Register\"\n\t\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t\t<Stack pt={6}>\n\t\t\t\t\t\t\t\t\t<Text align={\"center\"}>\n\t\t\t\t\t\t\t\t\t\tAlready a user?{\" \"}\n\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\tcolor={\"blue.400\"}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\thistory.push(RoutePath.login)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</ConfigProvider>\n\t\t\t\t\t</Stack>\n\t\t\t\t</Box>\n\t\t\t</Stack>\n\t\t</Flex>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/profile/ResetPassword.tsx",["1082","1083","1084","1085","1086","1087","1088","1089"],"import React, { ReactElement, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Form, Card } from \"antd\";\nimport \"./ResetPassword.less\";\nimport { BackHeader, EmailField, FormButton } from \"../../utils/components\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { useHistory } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport {\n\tFlex,\n\tHeading,\n\tStack,\n\tText,\n\tuseColorModeValue,\n  } from '@chakra-ui/react';\n\nexport const ResetPassword: React.FC<any> = () => {\n\tlet history = useHistory();\n\n\tconst [isLoading, setLoading] = useState(false);\n\n\tconst onFinish = async (values: any) => {\n\n\t\tconst email = await LocalStorage.getEmail();\n\t\tsetLoading(true);\n\t\tlet firebaseResult = await FirebaseServices.resetPassword(email ?? \"\");\n\n\t\tif (firebaseResult.isSuccess) {\n\t\t\t// Go to login page\n\t\t\talert(`Sent password reset email to ${email}`);\n\t\t\thistory.replace(RoutePath.home);\n\t\t\tsetLoading(false);\n\t\t} else {\n\n\t\t\talert(firebaseResult.message);\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Flex\n\t\t\tminH={\"100vh\"}\n\t\t\talign={\"center\"}\n\t\t\tjustify={\"center\"}\n\t\t\tbg={useColorModeValue(\"gray.50\", \"gray.800\")}\n\t\t>\n\t\t\t<Stack\n\t\t\t\tspacing={4}\n\t\t\t\tw={\"full\"}\n\t\t\t\tmaxW={\"md\"}\n\t\t\t\tbg={useColorModeValue(\"white\", \"gray.700\")}\n\t\t\t\trounded={\"xl\"}\n\t\t\t\tboxShadow={\"lg\"}\n\t\t\t\tp={6}\n\t\t\t\tmy={12}\n\t\t\t>\n\t\t\t\t<Heading lineHeight={1.1} fontSize={{ base: \"2xl\", md: \"3xl\" }}>\n\t\t\t\t\tEmail change request has sent to your mailbox.\n\t\t\t\t</Heading>\n\t\t\t\t<Text\n\t\t\t\t\tfontSize={{ base: \"sm\", sm: \"md\" }}\n\t\t\t\t\tcolor={useColorModeValue(\"gray.800\", \"gray.400\")}\n\t\t\t\t>\n\t\t\t\t\tIf not found, please check your junk mail.{\" \"}\n\t\t\t\t</Text>\n\t\t\t\t<Form\n\t\t\t\t\t\t\t\tname=\"reset_password\"\n\t\t\t\t\t\t\t\tclassName=\"reset_password_form\"\n\t\t\t\t\t\t\t\tinitialValues={{ remember: true }}\n\t\t\t\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t<FormButton\n\t\t\t\t\t\t\t\t\t\ttitle=\"Send Password Reset Email\"\n\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t</Form>\n\t\t\t</Stack>\n\t\t</Flex>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/login/ForgotPassword.tsx",["1090","1091","1092","1093","1094","1095","1096","1097","1098","1099"],"import React, { ReactElement, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Form, Card } from \"antd\";\nimport \"./ForgotPassword.less\";\nimport { BackHeader, EmailField, FormButton } from \"../../utils/components\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { useHistory } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport {\n\tButton,\n\tFormControl,\n\tFlex,\n\tHeading,\n\tInput,\n\tStack,\n\tText,\n\tuseColorModeValue,\n} from \"@chakra-ui/react\";\n\nexport const ForgotPassword: React.FC<any> = () => {\n\tlet history = useHistory();\n\n\tconst [isLoading, setLoading] = useState(false);\n\n\tconst onFinish = async (values: any) => {\n\t\tsetLoading(true);\n\t\tlet firebaseResult = await FirebaseServices.resetPassword(\n\t\t\tvalues[\"email\"]\n\t\t);\n\n\t\tif (firebaseResult.isSuccess) {\n\t\t\t// Go to login page\n\t\t\thistory.push(RoutePath.login);\n\t\t\tsetLoading(false);\n\t\t} else {\n\n\t\t\talert(firebaseResult.message);\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Flex\n\t\t\tminH={\"100vh\"}\n\t\t\talign={\"center\"}\n\t\t\tjustify={\"center\"}\n\t\t\tbg={useColorModeValue(\"gray.50\", \"gray.800\")}\n\t\t>\n\t\t\t<Stack\n\t\t\t\tspacing={4}\n\t\t\t\tw={\"full\"}\n\t\t\t\tmaxW={\"md\"}\n\t\t\t\tbg={useColorModeValue(\"white\", \"gray.700\")}\n\t\t\t\trounded={\"xl\"}\n\t\t\t\tboxShadow={\"lg\"}\n\t\t\t\tp={6}\n\t\t\t\tmy={12}\n\t\t\t>\n\t\t\t\t<Heading lineHeight={1.1} fontSize={{ base: \"2xl\", md: \"3xl\" }}>\n\t\t\t\t\tForgot your password?\n\t\t\t\t</Heading>\n\t\t\t\t<Text\n\t\t\t\t\tfontSize={{ base: \"sm\", sm: \"md\" }}\n\t\t\t\t\tcolor={useColorModeValue(\"gray.800\", \"gray.400\")}\n\t\t\t\t>\n\t\t\t\t\tYou&apos;ll get an email with a reset link\n\t\t\t\t</Text>\n\t\t\t\t<Form\n\t\t\t\t\tname=\"forgot_password\"\n\t\t\t\t\tclassName=\"forgot_password_form\"\n\t\t\t\t\tinitialValues={{ remember: true }}\n\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t>\n\t\t\t\t\t<EmailField />\n\n\t\t\t\t\t<Stack spacing={6}>\n\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t<FormButton\n\t\t\t\t\t\t\t\ttitle=\"Request Password Reset\"\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t</Stack>\n\t\t\t\t</Form>\n\t\t\t</Stack>\n\t\t</Flex>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/home/Home.tsx",["1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport {\n\tButton,\n\tLayout,\n\tMenu,\n\tTypography,\n\tRow,\n\tCol,\n\tSpace,\n\tDivider,\n\tCard,\n} from \"antd\";\nimport \"./Home.less\";\nimport homeHeaderImg from \"../../assets/illustrations/home_header.png\";\nimport use_case1 from \"../../assets/illustrations/usecase_dashboard.png\";\nimport use_case2 from \"../../assets/illustrations/usecase_visualization_collection.png\";\nimport use_case3 from \"../../assets/illustrations/usecase_internal_sharing.png\";\nimport use_case4 from \"../../assets/illustrations/usecase_presentation.png\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { PricingCards } from \"../../utils/components\";\nimport { PaymentRepo } from \"../../services/api/repositories/payment_repo\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { User } from \"../../services/api/models/user_model\";\nimport Meta from \"antd/lib/card/Meta\";\nimport Nav from \"./Nav\";\nimport Hero from \"./Hero\";\nimport { Heading } from \"@chakra-ui/react\";\nimport Pricing from \"./Pricing\";\nimport Footer from \"./Footer\";\nimport NewsLetter from \"./NewsLetter\";\nimport Features from \"./Features\";\n\nexport const Home: React.FC<any> = () => {\n\tlet userRepo = new UserRepo();\n\tlet user = useContext(AuthContext);\n\n\tuseEffect(() => {\n\t\tasync function initState() {\n\t\t\tlet userId = await LocalStorage.getUserID();\n\t\t\tlet apiResult = await userRepo.getUserById({\n\t\t\t\tuserId: userId!,\n\t\t\t});\n\t\t\tif (apiResult.isSuccess) {\n\t\t\t\tlet usermodel: User = apiResult.data[0];\n\t\t\t\tawait LocalStorage.setEmail(usermodel?.email ?? \"\");\n\t\t\t\tawait LocalStorage.setNickName(usermodel?.username ?? \"\");\n\t\t\t\tawait LocalStorage.setEmailVerified(\n\t\t\t\t\t`${user?.emailVerified}` ?? \"\"\n\t\t\t\t);\n\t\t\t\tawait LocalStorage.setPackagePlan(\n\t\t\t\t\tusermodel?.packagePlan ?? \"free\"\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tinitState();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Nav />\n\t\t\t<div style={{ backgroundColor: \"GhostWhite\" }}>\n\t\t\t\t<Hero />\n\t\t\t</div>\n\t\t\t{/* Usee case */}\n\t\t\t<div id=\"features\" className=\"content_3\">\n\t\t\t\t<Heading fontSize={\"3xl\"}>Features</Heading>\n\t\t\t\t<Row className=\"use_case_row\">\n\t\t\t\t\t{usecaseList.map((usecaseList) => (\n\t\t\t\t\t\t<Col xs={24} xl={6} className=\"use_case_col\" span={6}>\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tcover={\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\talt={usecaseList.title}\n\t\t\t\t\t\t\t\t\t\tsrc={usecaseList.image}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Meta\n\t\t\t\t\t\t\t\t\tstyle={{ height: \"130px\" }}\n\t\t\t\t\t\t\t\t\ttitle={usecaseList.title}\n\t\t\t\t\t\t\t\t\tdescription={usecaseList.desc}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t))}\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t\t{/* Pricing */}\n\t\t\t<div style={{ backgroundColor: \"GhostWhite\" }}>\n\t\t\t\t<Pricing />\n\t\t\t</div>\n\t\t\t{/* Newsletter */}\n\t\t\t<NewsLetter />\n\t\t\t{/* Footer */}\n\t\t\t<Footer />\n\t\t</>\n\t);\n};\n\nconst usecaseList = [\n\t{\n\t\timage: use_case1,\n\t\ttitle: \"Quick and Simple\",\n\t\tdesc: \"Hard to add the add the access control featres into the system? Let us simplify the work.\",\n\t},\n\t{\n\t\timage: use_case2,\n\t\ttitle: \"Highly customizable \",\n\t\tdesc: \"The usage of Zeus API to restrict the access provides high flexibility to customize your own UI.\",\n\t},\n\t{\n\t\timage: use_case3,\n\t\ttitle: \"Fully Managed\",\n\t\tdesc: \"Handle your the user access rights all in one dashboard.\",\n\t},\n\t{\n\t\timage: use_case4,\n\t\ttitle: \"Various usage scenarios\",\n\t\tdesc: \"It can be used in the internal tools and the tiered pricing of your system.\",\n\t},\n];\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/profile/UserProfile.tsx",["1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128"],"import { Card, Col, Form, Input, Layout, Radio, Row } from \"antd\";\nimport { ConfigProvider } from \"antd-country-phone-input\";\nimport \"antd-country-phone-input/dist/index.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { formatPhoneNumberIntl } from \"react-phone-number-input\";\nimport { useHistory } from \"react-router-dom\";\nimport en from \"world_countries_lists/data/en/world.json\";\nimport { User } from \"../../services/api/models/user_model\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { BackHeader, FormButton, FormPhoneInput } from \"../../utils/components\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport \"./UserProfile.less\";\nimport {\n\tButton,\n\tFlex,\n\tFormLabel,\n\tHeading,\n\tStack,\n\tuseColorModeValue,\n} from \"@chakra-ui/react\";\n\nconst formItemLayout = {\n\tlabelCol: {\n\t\txs: { span: 24 },\n\t\tsm: { span: 8 },\n\t},\n\twrapperCol: {\n\t\txs: { span: 24 },\n\t\tsm: { span: 16 },\n\t},\n};\nconst tailFormItemLayout = {\n\twrapperCol: {\n\t\txs: {\n\t\t\tspan: 24,\n\t\t\toffset: 0,\n\t\t},\n\t\tsm: {\n\t\t\tspan: 16,\n\t\t\toffset: 8,\n\t\t},\n\t},\n};\n\nexport const UserProfile: React.FC<any> = () => {\n\tlet userRepo = new UserRepo();\n\n\tlet history = useHistory();\n\n\t// Is btn loading flag\n\tconst [isLoading, setLoading] = useState(false);\n\n\t// Is card loading flag\n\tconst [isCardLoading, setCardLoading] = useState(true);\n\n\tconst [userData, setUserData] = useState(new User({}));\n\n\tconst [form] = Form.useForm();\n\n\tconst onFinish = async (values: any) => {\n\t\tlet userId = await LocalStorage.getUserID();\n\t\tsetLoading(true);\n\t\tconsole.log(values[\"last_name\"])\n\n\t\tlet apiResult = await userRepo.saveUser({\n\t\t\tpurpose: \"update\",\n\t\t\tuserId: userId!,\n\t\t\tusername: values[\"first_name\"] + values[\"last_name\"],\n\t\t\tfirstName: values[\"first_name\"],\n\t\t\tlastName: values[\"last_name\"],\n\t\t\tphoneNo: formatPhoneNumberIntl(values[\"phone_number\"]),\n\t\t\tacctType: values[\"account_type\"],\n\t\t\torgName: values[\"organisation_name\"],\n\t\t});\n\n\t\tif (apiResult.isSuccess) {\n\t\t\talert(\"Update Success\");\n\n\t\t\thistory.replace(RoutePath.home);\n\t\t\tsetLoading(false);\n\t\t} else {\n\t\t\talert(apiResult.message);\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tlet userId = await LocalStorage.getUserID();\n\t\t\tlet apiResult = await userRepo.getUserById({\n\t\t\t\tuserId: userId!,\n\t\t\t});\n\t\t\tif (apiResult.isSuccess) {\n\t\t\t\tsetUserData(apiResult.data[0]);\n\t\t\t} else {\n\t\t\t\talert(apiResult.message);\n\t\t\t}\n\t\t\tsetCardLoading(false);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tform.resetFields();\n\t}, [userData]);\n\n\treturn (\n\t\t<Flex\n\t\t\tminH={\"100vh\"}\n\t\t\talign={\"center\"}\n\t\t\tjustify={\"center\"}\n\t\t\tbg={useColorModeValue(\"gray.50\", \"gray.800\")}\n\t\t>\n\t\t\t<Stack\n\t\t\t\tspacing={4}\n\t\t\t\tw={\"full\"}\n\t\t\t\tmaxW={\"md\"}\n\t\t\t\tbg={useColorModeValue(\"white\", \"gray.700\")}\n\t\t\t\trounded={\"xl\"}\n\t\t\t\tboxShadow={\"lg\"}\n\t\t\t\tp={6}\n\t\t\t\tmy={12}\n\t\t\t>\n\t\t\t\t<Heading lineHeight={1.1} fontSize={{ base: \"2xl\", sm: \"3xl\" }}>\n\t\t\t\t\tUser Profile Edit\n\t\t\t\t</Heading>\n\t\t\t\t<Form\n\t\t\t\t\tname=\"register\"\n\t\t\t\t\tclassName=\"user_profile_form\"\n\t\t\t\t\tform={form}\n\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\tfirst_name: userData.firstName ?? \"\",\n\t\t\t\t\t\tlast_name: userData.lastName ?? \"\",\n\t\t\t\t\t\tphone_number: userData.phoneNo ?? \"\",\n\t\t\t\t\t\taccount_type: userData.acctType ?? \"\",\n\t\t\t\t\t\torganisation_name: userData.orgName ?? \"\",\n\t\t\t\t\t}}\n\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t>\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\n\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\tname=\"first_name\"\n\t\t\t\t\t\t\trules={[{ required: true }]}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tdisplay: \"inline-block\",\n\t\t\t\t\t\t\t\twidth: \"calc(50% - 8px)\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input placeholder=\"First Name\" />\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\tname=\"last_name\"\n\t\t\t\t\t\t\trules={[{ required: true }]}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tdisplay: \"inline-block\",\n\t\t\t\t\t\t\t\twidth: \"calc(50% - 8px)\",\n\t\t\t\t\t\t\t\tmargin: \"0 8px\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input placeholder=\"Last Name\" />\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t<FormPhoneInput />\n\n\t\t\t\t\t<>\n\t\t\t\t\t\t<FormLabel>Account Type</FormLabel>\n\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\tname=\"account_type\"\n\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tmessage: \"Please choose your account type!\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Radio.Group>\n\t\t\t\t\t\t\t\t<Radio.Button value=\"institute\">\n\t\t\t\t\t\t\t\t\tInstitute\n\t\t\t\t\t\t\t\t</Radio.Button>\n\t\t\t\t\t\t\t\t<Radio.Button value=\"company\">\n\t\t\t\t\t\t\t\t\tCompany\n\t\t\t\t\t\t\t\t</Radio.Button>\n\t\t\t\t\t\t\t</Radio.Group>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t</>\n\t\t\t\t\t<>\n\t\t\t\t\t\t<FormLabel>Organisation Name</FormLabel>\n\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\tname=\"organisation_name\"\n\t\t\t\t\t\t\ttooltip=\"Please input your Company/Institution name\"\n\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\"Please input your Company/Institution name!\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input />\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t</>\n\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t<FormButton title=\"Save\" isLoading={isLoading} />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Form>\n\t\t\t</Stack>\n\t\t</Flex>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/register/EmailVerification.tsx",["1129","1130","1131","1132","1133","1134","1135"],"import React, { useContext, useState } from \"react\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Card, Form } from \"antd\";\nimport \"./Register.less\";\nimport \"antd-country-phone-input/dist/index.css\";\nimport { BackHeader, FormButton } from \"../../utils/components\";\nimport Title from \"antd/lib/typography/Title\";\nimport { FirebaseServices } from \"../../utils/firebaseServices\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTimer } from \"react-timer-hook\";\nimport {\n\tFlex,\n\tHeading,\n\tStack,\n\tText,\n\tuseColorModeValue,\n} from \"@chakra-ui/react\";\n\nexport const EmailVerification: React.FC<any> = () => {\n\tlet history = useHistory();\n\n\tconst time = new Date();\n\ttime.setSeconds(time.getSeconds() + 60);\n\n\tconst { seconds, start, restart } = useTimer({\n\t\tautoStart: false,\n\t\texpiryTimestamp: time,\n\t\tonExpire: () => {\n\t\t\t// Show the button on expiring time\n\t\t\tsetBtn(true);\n\t\t\t// Reset the time to 60 seconds after the expiring time\n\t\t\trestart(time, false);\n\t\t},\n\t});\n\n\t// Get current sign in User\n\tconst user = useContext(AuthContext);\n\n\t// Is loading flag\n\tconst [isLoading, setLoading] = useState(false);\n\n\tconst [isBtnEnabled, setBtn] = useState(true);\n\n\tconst onFinish = async (values: any) => {\n\t\tsetLoading(true);\n\n\t\t// If user not found, then proceed to log in page\n\t\tif (user) {\n\t\t\t//If the meail has verified, proceed to home page\n\t\t\tif (user?.emailVerified) history.replace(RoutePath.home);\n\t\t\tawait FirebaseServices.sendEmailVerification(user);\n\t\t\talert(\"Email verification has sent\");\n\t\t\t// Start the timer\n\t\t\tsetBtn(false);\n\t\t\tstart();\n\t\t} else {\n\t\t\thistory.replace(RoutePath.login);\n\t\t}\n\n\t\tsetLoading(false);\n\t};\n\n\treturn (\n\t\t<Flex\n\t\t\tminH={\"100vh\"}\n\t\t\talign={\"center\"}\n\t\t\tjustify={\"center\"}\n\t\t\tbg={useColorModeValue(\"gray.50\", \"gray.800\")}\n\t\t>\n\t\t\t<Stack\n\t\t\t\tspacing={4}\n\t\t\t\tw={\"full\"}\n\t\t\t\tmaxW={\"md\"}\n\t\t\t\tbg={useColorModeValue(\"white\", \"gray.700\")}\n\t\t\t\trounded={\"xl\"}\n\t\t\t\tboxShadow={\"lg\"}\n\t\t\t\tp={6}\n\t\t\t\tmy={12}\n\t\t\t>\n\t\t\t\t<Heading lineHeight={1.1} fontSize={{ base: \"2xl\", md: \"3xl\" }}>\n\t\t\t\t\tEmail verification has sent to your mailbox.\n\t\t\t\t</Heading>\n\t\t\t\t<Text\n\t\t\t\t\tfontSize={{ base: \"sm\", sm: \"md\" }}\n\t\t\t\t\tcolor={useColorModeValue(\"gray.800\", \"gray.400\")}\n\t\t\t\t>\n\t\t\t\t\tIf not found, please check your junk mail.{\" \"}\n\t\t\t\t</Text>\n\t\t\t\t<Form\n\t\t\t\t\tname=\"register\"\n\t\t\t\t\tclassName=\"register_form\"\n\t\t\t\t\tinitialValues={{ remember: true }}\n\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t>\n\t\t\t\t\t{isBtnEnabled ? (\n\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t<FormButton\n\t\t\t\t\t\t\t\ttitle=\"Send Email Verification\"\n\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\tPlease send again in {seconds} second if not found.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t)}\n\t\t\t\t</Form>\n\t\t\t</Stack>\n\t\t</Flex>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/utils/components.tsx",["1136","1137","1138","1139","1140","1141","1142","1143"],"import React, { forwardRef, useCallback, useContext } from \"react\";\nimport {\n\tButton,\n\tCard,\n\tCol,\n\tForm,\n\tFormInstance,\n\tInput,\n\tPageHeader,\n\tRow,\n\tSpace,\n\tSpin,\n} from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport Title from \"antd/lib/typography/Title\";\nimport \"./components.less\";\nimport { AuthContext } from \"./AuthContext\";\nimport { RoutePath } from \"./routePath\";\nimport { PaymentRepo } from \"../services/api/repositories/payment_repo\";\nimport PhoneInput from \"react-phone-number-input\";\nimport \"react-phone-number-input/style.css\";\nimport { useState } from \"react\";\nimport { LocalStorage } from \"./localStorage\";\nimport { Response } from \"../services/response\";\nimport { FirebaseServices } from \"./firebaseServices\";\nimport {\n\tBox,\n\tFormLabel,\n\tGridItem,\n\tHeading,\n\tSimpleGrid,\n\tStack,\n\tuseColorModeValue,\n\tButton as ChakraButton,\n\tText,\n\tSpinner,\n} from \"@chakra-ui/react\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\n\ninterface ComponentProps {\n\ttitle?: string;\n\tisLoading?: boolean; // To identify if the component is in loading state\n\tenabled?: boolean; // To identify if the component is enabled or some field of the component is enabled\n}\n\nexport const BackHeader: React.FC<ComponentProps> = ({ title }) => {\n\tlet history = useHistory();\n\tfunction goBack() {\n\t\t// Navigate to previous page\n\t\thistory.goBack();\n\t}\n\treturn (\n\t\t<PageHeader\n\t\t\tclassName=\"site-page-header\"\n\t\t\tghost={false}\n\t\t\tonBack={() => goBack()}\n\t\t\ttitle={title}\n\t\t/>\n\t);\n};\n\nexport const EmailField: React.FC<ComponentProps> = ({}) => {\n\treturn (\n\t\t<>\n\t\t\t<FormLabel>Email</FormLabel>{\" \"}\n\t\t\t<Form.Item\n\t\t\t\tname=\"email\"\n\t\t\t\trules={[\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"email\",\n\t\t\t\t\t\tmessage: \"The input is not valid E-mail!\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"Please input your E-mail!\",\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Input type=\"email\" style={{ width: \"100%\" }} />\n\t\t\t</Form.Item>\n\t\t</>\n\t);\n};\n\nexport const PasswordField: React.FC<ComponentProps> = ({ enabled }) => {\n\t//If true, then the min 6 validator is enabled\n\treturn (\n\t\t<>\n\t\t\t<FormLabel>Password</FormLabel>\n\t\t\t<Form.Item\n\t\t\t\tname=\"password\"\n\t\t\t\trules={\n\t\t\t\t\tenabled\n\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tmessage: \"Please input your password!\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmin: 6,\n\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\"Password must be minimum 6 characters.\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  ]\n\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tmessage: \"Please input your password!\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  ]\n\t\t\t\t}\n\t\t\t\thasFeedback\n\t\t\t>\n\t\t\t\t<Input.Password style={{ width: \"100%\" }} />\n\t\t\t</Form.Item>\n\t\t</>\n\t);\n};\n\nexport const ConfirmPasswordField: React.FC<ComponentProps> = ({}) => {\n\treturn (\n\t\t<>\n\t\t\t<FormLabel>Confirm Password</FormLabel>\n\t\t\t<Form.Item\n\t\t\t\tname=\"confirm\"\n\t\t\t\tdependencies={[\"password\"]}\n\t\t\t\thasFeedback\n\t\t\t\trules={[\n\t\t\t\t\t{\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"Please confirm your password!\",\n\t\t\t\t\t},\n\t\t\t\t\t({ getFieldValue }) => ({\n\t\t\t\t\t\tvalidator(_, value) {\n\t\t\t\t\t\t\tif (!value || getFieldValue(\"password\") === value) {\n\t\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn Promise.reject(\n\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\"The two passwords that you entered do not match!\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Input.Password style={{ width: \"100%\" }} />\n\t\t\t</Form.Item>\n\t\t</>\n\t);\n};\n\n// Form Button is without the form.item\nexport const FormButton: React.FC<ComponentProps> = ({ title, isLoading }) => {\n\treturn (\n\t\t<Button\n\t\t\thtmlType=\"submit\"\n\t\t\tshape=\"round\"\n\t\t\tsize=\"large\"\n\t\t\tblock={true}\n\t\t\tloading={isLoading}\n\t\t>\n\t\t\t{title}\n\t\t</Button>\n\t);\n};\ninterface PricingProps {\n\tactive?: string; // The pricing tier that the user currently at\n}\n// Pricing cards\nexport const PricingCards: React.FC<PricingProps> = ({ active }) => {\n\tlet paymentRepo = new PaymentRepo();\n\n\tlet history = useHistory();\n\n\t// Get current sign in User\n\tconst user = useContext(AuthContext);\n\n\tconst [isBtnLoading, setBtnLoading] = useState(false);\n\n\tconst colorActive = {\n\t\tborder: \"2px solid #000000\",\n\t\tbackgroundColor: \"#D3D3D3\",\n\t};\n\tconst color = {\n\t\tbackgroundColor: \"#fff\",\n\t};\n\n\tconst checkIfActiveColor = (key: string) => {\n\t\tif (active === undefined) {\n\t\t\treturn color;\n\t\t} else {\n\t\t\tif (active) return key === active ? colorActive : color;\n\t\t}\n\t};\n\n\tconst buttonActive = {\n\t\tdisabled: true,\n\t};\n\n\tconst button = {\n\t\tdisabled: false,\n\t};\n\n\tconst checkIfActiveBtn = (key: string) => {\n\t\tif (active === undefined) {\n\t\t\treturn button;\n\t\t} else {\n\t\t\tif (active) return key === active ? buttonActive : button;\n\t\t}\n\t};\n\n\tconst checkIfActiveBtnText = (key: string) => {\n\t\tif (active === undefined) {\n\t\t\treturn \"Select\";\n\t\t} else {\n\t\t\tif (active) return key === active ? \"Currently Selected\" : \"Select\";\n\t\t}\n\t};\n\n\tconst productList = [\n\t\t{\n\t\t\tid: \"001\", // Free plan has no stripe product id\n\t\t\tkey: \"free\",\n\t\t\tname: \"Free\",\n\t\t\tdescription: \"No cards required\",\n\t\t\tsecondaryDescription: \"\",\n\t\t\tprice: 0,\n\t\t\tpriceTag: \"$0 USD/mo\",\n\t\t\tbtnText: \"Select\",\n\t\t\tfeatures: [\n\t\t\t\t\"Max 5 users assignation per file\",\n\t\t\t\t\"Max 5 files created\",\n\t\t\t\t\"Max 3 reports per file\",\n\t\t\t\t\"Max 5 shared files\",\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tid: \"prod_Kskj6UFUeFljfo\",\n\t\t\tkey: \"pro\",\n\t\t\tname: \"Pro\",\n\t\t\tdescription:\n\t\t\t\t\"More power for small teams who want better collaboration\",\n\t\t\tsecondaryDescription: \"All the goodness of Free Tier, and:\",\n\t\t\tprice: 5,\n\t\t\tpriceTag: \"$5 USD/mo\",\n\t\t\tbtnText: \"Select\",\n\t\t\tfeatures: [\n\t\t\t\t\"Max 15 users assignation per file\",\n\t\t\t\t\"Max 50 files created\",\n\t\t\t\t\"Max 10 reports per file\",\n\t\t\t\t\"Max 20 shared files\",\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tid: \"prod_KuOG0aN13C29yi\",\n\t\t\tkey: \"enterprise\",\n\t\t\tname: \"Enterprise\",\n\t\t\tdescription:\n\t\t\t\t\"All the flexibility to meet your regulatory requirements and all the power to match your growth\",\n\t\t\tsecondaryDescription: \"All the greatness of Pro, and:\",\n\t\t\tprice: 15,\n\t\t\tpriceTag: \"$15 USD/mo\",\n\t\t\tbtnText: \"Select\",\n\t\t\tfeatures: [\n\t\t\t\t\"Max 30 users assignation per file\",\n\t\t\t\t\"Max 100 files created\",\n\t\t\t\t\"Unlimited reports per file\",\n\t\t\t\t\"Unlimited shared files\",\n\t\t\t],\n\t\t},\n\t];\n\n\tconst navigate = async (product: { id: string; key: string }) => {\n\t\tsetBtnLoading(true);\n\t\tif (user === null) {\n\t\t\t// Proceed to login page\n\t\t\thistory.push(RoutePath.login);\n\t\t} else {\n\t\t\t// Go to email verification page if email not verified\n\t\t\tif (!user?.emailVerified) {\n\t\t\t\thistory.push(RoutePath.email_verification);\n\t\t\t} else {\n\t\t\t\t// Call api to get the payment session url\n\t\t\t\tlet apiResult = null;\n\t\t\t\tlet currentPackagePlan = await LocalStorage.getPackagePlan();\n\n\t\t\t\t// Go to billing page if the user wants to upgrade or downgrade the plan\n\t\t\t\tif (\n\t\t\t\t\tproduct.key !== currentPackagePlan &&\n\t\t\t\t\tcurrentPackagePlan !== \"free\"\n\t\t\t\t) {\n\t\t\t\t\tlet userId = await LocalStorage.getUserID();\n\t\t\t\t\tlet email = await LocalStorage.getEmail();\n\n\t\t\t\t\tapiResult = await paymentRepo.getCustomerPortalSessionUrl({\n\t\t\t\t\t\thistory:history,\n\t\t\t\t\t\tuserId: userId!,\n\t\t\t\t\t\temail: email!,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// Else go to checkout page\n\t\t\t\telse {\n\t\t\t\t\tapiResult = await paymentRepo.getCheckoutSessionUrl({\n\t\t\t\t\t\thistory:history,\n\t\t\t\t\t\tuserId: \"userId\",\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (apiResult.isSuccess) {\n\t\t\t\t\t// Proceed to checkout page if seesion url is retreived\n\t\t\t\t\t// Replace the history\n\t\t\t\t\twindow.location.replace(apiResult.data[0].sessionUrl);\n\t\t\t\t} else {\n\t\t\t\t\talert(apiResult.message);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsetBtnLoading(false);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<Row className=\"pricing_row\">\n\t\t\t\t{productList.map((productList) => (\n\t\t\t\t\t<Col xs={24} xl={8} className=\"pricing_col\" span={8}>\n\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\tclassName=\"pricing_content\"\n\t\t\t\t\t\t\tstyle={checkIfActiveColor(productList.key)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"pricing_content_title\">\n\t\t\t\t\t\t\t\t<Title className=\"site_desc\" level={3}>\n\t\t\t\t\t\t\t\t\t{productList.name}\n\t\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t\t<p> {productList.description}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"pricing_content_price\">\n\t\t\t\t\t\t\t\t<Title className=\"site_desc\" level={3}>\n\t\t\t\t\t\t\t\t\t{productList.priceTag}\n\t\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"pricing_content_nav\">\n\t\t\t\t\t\t\t\t<Space direction=\"vertical\">\n\t\t\t\t\t\t\t\t\t{isBtnLoading ? (\n\t\t\t\t\t\t\t\t\t\t<Spin size=\"large\" />\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\t\t\tghost\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tnavigate(productList)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t{...checkIfActiveBtn(\n\t\t\t\t\t\t\t\t\t\t\t\tproductList.key\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{checkIfActiveBtnText(\n\t\t\t\t\t\t\t\t\t\t\t\tproductList.key\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<Title className=\"site_desc\" level={5}>\n\t\t\t\t\t\t\t\t\t\t{productList.secondaryDescription}\n\t\t\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t\t</Space>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"pricing_content_features\">\n\t\t\t\t\t\t\t\t<Space direction=\"vertical\">\n\t\t\t\t\t\t\t\t\t{productList.features.map((features) => (\n\t\t\t\t\t\t\t\t\t\t<p>{features}</p>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Space>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t))}\n\t\t\t</Row>\n\t\t</div>\n\t);\n};\n\ninterface PhoneNumInputProps {\n\tinitialValue?: any;\n}\n\nexport const FormPhoneInput: React.FC<PhoneNumInputProps> = ({\n\tinitialValue,\n}) => {\n\tconst [phoneNum, setPhoneNum] = useState<any>();\n\n\treturn (\n\t\t<>\n\t\t\t<FormLabel>Phone Number</FormLabel>\n\t\t\t<Form.Item\n\t\t\t\tname=\"phone_number\"\n\t\t\t\trules={[\n\t\t\t\t\t{\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"Please input your phone number!\",\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<PhoneInput\n\t\t\t\t\tinternational\n\t\t\t\t\tdefaultCountry=\"MY\"\n\t\t\t\t\tcountryCallingCodeEditable={false}\n\t\t\t\t\tvalue={phoneNum}\n\t\t\t\t\tonChange={(value) => setPhoneNum(value)}\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t</>\n\t);\n};\n\ninterface NavItem {\n\tkey?: number;\n\tlabel: string;\n\tsubLabel?: string;\n\tchildren?: Array<NavItem>;\n\tonClick: (user: any, history: any) => void;\n}\n\nexport const Suffix_Nav: Array<NavItem> = [\n\t{\n\t\tlabel: \"Your Account\",\n\t\tonClick: () => {}, // To fulfill the interface\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tkey: 0,\n\t\t\t\tlabel: \"Billing\",\n\t\t\t\tsubLabel: \"View your bill and usage analytic\",\n\t\t\t\tonClick: async (user: any, history: any) => {\n\t\t\t\t\t// Call api to get the payment session url\n\t\t\t\t\tlet userId = await LocalStorage.getUserID();\n\t\t\t\t\tlet email = await LocalStorage.getEmail();\n\n\t\t\t\t\tlet paymentRepo = new PaymentRepo();\n\t\t\t\t\tlet apiResult =\n\t\t\t\t\t\tawait paymentRepo.getCustomerPortalSessionUrl({\n\t\t\t\t\t\t\thistory:history,\n\t\t\t\t\t\t\tuserId: userId!,\n\t\t\t\t\t\t\temail: email!,\n\t\t\t\t\t\t});\n\n\t\t\t\t\tif (apiResult.isSuccess) {\n\t\t\t\t\t\t// Proceed to checkout page if seesion url is retreived\n\t\t\t\t\t\t// Replace the history\n\t\t\t\t\t\twindow.location.replace(apiResult.data[0].sessionUrl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(apiResult.message);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 1,\n\t\t\t\tlabel: \"Profile\",\n\t\t\t\tsubLabel: \"View and update your profile\",\n\t\t\t\tonClick: (user: any, history: any) => {\n\t\t\t\t\thistory.push(RoutePath.user_profile);\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 2,\n\t\t\t\tlabel: \"Reset Password\",\n\t\t\t\tsubLabel: \"Change your password here\",\n\t\t\t\tonClick: (user: any, history: any) => {\n\t\t\t\t\thistory.push(RoutePath.reset_password);\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 3,\n\t\t\t\tlabel: \"Log Out\",\n\t\t\t\tsubLabel: \"See ya\",\n\t\t\t\tonClick: async (user: any, history: any) => {\n\t\t\t\t\tawait FirebaseServices.signOut();\n\t\t\t\t\t// Clear local storage\n\t\t\t\t\tawait LocalStorage.resetStorage();\n\t\t\t\t\thistory.replace(RoutePath.default);\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n];\n\ninterface FillFormProps {\n\ttitle: string;\n\tsubtitle: string;\n\tformComponents: any;\n\tinitialValue: any;\n\tform: FormInstance<any>;\n\tonSubmit: (values: any) => Promise<void>;\n\tisFormLoading: boolean;\n}\nexport const FillForm: React.FC<FillFormProps> = ({\n\ttitle,\n\tsubtitle,\n\tformComponents,\n\tinitialValue,\n\tform,\n\tonSubmit,\n\tisFormLoading,\n}) => {\n\tconst [isButtonLoading, setButtonLoading] = useState<boolean>(false);\n\n\tconst onFinish = async (values: any) => {\n\t\tsetButtonLoading(true);\n\t\tawait onSubmit(values);\n\t\tsetButtonLoading(false);\n\t};\n\treturn (\n\t\t<Form\n\t\t\tonFinish={onFinish}\n\t\t\tautoComplete=\"off\"\n\t\t\tinitialValues={initialValue}\n\t\t\tform={form}\n\t\t>\n\t\t\t<Box bg={useColorModeValue(\"gray.50\", \"inherit\")} p={10}>\n\t\t\t\t<Box>\n\t\t\t\t\t<SimpleGrid\n\t\t\t\t\t\tdisplay={{ base: \"initial\", md: \"grid\" }}\n\t\t\t\t\t\tcolumns={{ md: 3 }}\n\t\t\t\t\t\tspacing={{ md: 6 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<GridItem colSpan={{ md: 1 }}>\n\t\t\t\t\t\t\t<Box px={[4, 0]}>\n\t\t\t\t\t\t\t\t<Heading\n\t\t\t\t\t\t\t\t\tfontSize=\"lg\"\n\t\t\t\t\t\t\t\t\tfontWeight=\"md\"\n\t\t\t\t\t\t\t\t\tlineHeight=\"6\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\tmt={1}\n\t\t\t\t\t\t\t\t\tfontSize=\"sm\"\n\t\t\t\t\t\t\t\t\tcolor={useColorModeValue(\n\t\t\t\t\t\t\t\t\t\t\"gray.600\",\n\t\t\t\t\t\t\t\t\t\t\"gray.400\"\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{subtitle}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</GridItem>\n\t\t\t\t\t\t<GridItem mt={[5, null, 0]} colSpan={{ md: 2 }}>\n\t\t\t\t\t\t\t<Stack\n\t\t\t\t\t\t\t\tpx={4}\n\t\t\t\t\t\t\t\tpy={5}\n\t\t\t\t\t\t\t\tbg={useColorModeValue(\"white\", \"gray.700\")}\n\t\t\t\t\t\t\t\tspacing={4}\n\t\t\t\t\t\t\t\tp={{ sm: 6 }}\n\t\t\t\t\t\t\t\tstyle={{ minHeight: \"76vh\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{isFormLoading ? (\n\t\t\t\t\t\t\t\t\t<Spinner textAlign={\"center\"} />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\tformComponents\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t<Row style={{ marginTop: \"10px\" }}>\n\t\t\t\t\t\t\t\t<Col span={18} />\n\t\t\t\t\t\t\t\t<Col span={6}>\n\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t\t<FormButton\n\t\t\t\t\t\t\t\t\t\t\tisLoading={isButtonLoading}\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Save\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</GridItem>\n\t\t\t\t\t</SimpleGrid>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t</Form>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/utils/firebaseServices.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/utils/encryption.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/home/Pricing.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/repositories/user_repo.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/home/Features.tsx",["1144","1145","1146"],["1147","1148"],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/home/NewsLetter.tsx",["1149"],"import {\n\tFlex,\n\tStack,\n\tHeading,\n\tText,\n\tInput,\n\tButton,\n\tIcon,\n\tuseColorModeValue,\n\tcreateIcon,\n} from \"@chakra-ui/react\";\nimport { message } from \"antd\";\nimport { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { NewsletterRepo } from \"../../services/api/repositories/newsletter_repo\";\n\nexport default function CardWithIllustration() {\n\tlet history = useHistory();\n\tlet newsletterRepo = new NewsletterRepo();\n\n\tconst [_inputEmail, setEmail] = useState(\"\");\n\n\tconst subscribeNewsletter = async () => {\n\t\tif (_inputEmail.trim() === \"\") {\n\t\t\tmessage.error(\"The email cannot be empty\");\n\t\t} else {\n\t\t\tlet apiResult = await newsletterRepo.subscribeNewsletter({ history:history,email: _inputEmail });\n\t\t\tif(apiResult.isSuccess){\n\t\t\t    message.success(\"You have successfully subscibed\");\n\t\t\t} else {\n\t\t\t    message.error(\"Fail to subscribe\");\n\t\t\t}\n\t\t}\n\t};\n\n\tconst updateEvent = (evt: any) => {\n\t\tsetEmail(evt.target.value);\n\t};\n\treturn (\n\t\t<Flex\n\t\t\tminH={\"100vh\"}\n\t\t\talign={\"center\"}\n\t\t\tjustify={\"center\"}\n\t\t\tpy={12}\n\t\t\tbg={useColorModeValue(\"gray.50\", \"gray.800\")}\n\t\t>\n\t\t\t<Stack\n\t\t\t\tboxShadow={\"2xl\"}\n\t\t\t\tbg={useColorModeValue(\"white\", \"gray.700\")}\n\t\t\t\trounded={\"xl\"}\n\t\t\t\tp={10}\n\t\t\t\tspacing={8}\n\t\t\t\talign={\"center\"}\n\t\t\t>\n\t\t\t\t<Icon as={NotificationIcon} w={24} h={24} />\n\t\t\t\t<Stack align={\"center\"} spacing={2}>\n\t\t\t\t\t<Heading\n\t\t\t\t\t\ttextTransform={\"uppercase\"}\n\t\t\t\t\t\tfontSize={\"3xl\"}\n\t\t\t\t\t\tcolor={useColorModeValue(\"gray.800\", \"gray.200\")}\n\t\t\t\t\t>\n\t\t\t\t\t\tSubscribe\n\t\t\t\t\t</Heading>\n\t\t\t\t\t<Text fontSize={\"lg\"} color={\"gray.500\"}>\n\t\t\t\t\t\tSubscribe to our newsletter & stay up to date!\n\t\t\t\t\t</Text>\n\t\t\t\t</Stack>\n\t\t\t\t<Stack\n\t\t\t\t\tspacing={4}\n\t\t\t\t\tdirection={{ base: \"column\", md: \"row\" }}\n\t\t\t\t\tw={\"full\"}\n\t\t\t\t>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype={\"text\"}\n\t\t\t\t\t\tplaceholder={\"gohsyang@gmail.com\"}\n\t\t\t\t\t\tcolor={useColorModeValue(\"gray.800\", \"gray.200\")}\n\t\t\t\t\t\tbg={useColorModeValue(\"gray.100\", \"gray.600\")}\n\t\t\t\t\t\trounded={\"full\"}\n\t\t\t\t\t\tborder={0}\n\t\t\t\t\t\t_focus={{\n\t\t\t\t\t\t\tbg: useColorModeValue(\"gray.200\", \"gray.800\"),\n\t\t\t\t\t\t\toutline: \"none\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={updateEvent}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tbg={\"blue.400\"}\n\t\t\t\t\t\trounded={\"full\"}\n\t\t\t\t\t\tcolor={\"white\"}\n\t\t\t\t\t\tflex={\"1 0 auto\"}\n\t\t\t\t\t\t_hover={{ bg: \"blue.500\" }}\n\t\t\t\t\t\t_focus={{ bg: \"blue.500\" }}\n\t\t\t\t\t\tonClick={() => subscribeNewsletter()}\n\t\t\t\t\t>\n\t\t\t\t\t\tSubscribe\n\t\t\t\t\t</Button>\n\t\t\t\t</Stack>\n\t\t\t</Stack>\n\t\t</Flex>\n\t);\n}\n\nconst NotificationIcon = createIcon({\n\tdisplayName: \"Notification\",\n\tviewBox: \"0 0 128 128\",\n\tpath: (\n\t\t<g id=\"Notification\">\n\t\t\t<rect\n\t\t\t\tclassName=\"cls-1\"\n\t\t\t\tx=\"1\"\n\t\t\t\ty=\"45\"\n\t\t\t\tfill={\"#fbcc88\"}\n\t\t\t\twidth=\"108\"\n\t\t\t\theight=\"82\"\n\t\t\t/>\n\t\t\t<circle\n\t\t\t\tclassName=\"cls-2\"\n\t\t\t\tfill={\"#8cdd79\"}\n\t\t\t\tcx=\"105\"\n\t\t\t\tcy=\"86\"\n\t\t\t\tr=\"22\"\n\t\t\t/>\n\t\t\t<rect\n\t\t\t\tclassName=\"cls-3\"\n\t\t\t\tfill={\"#f6b756\"}\n\t\t\t\tx=\"1\"\n\t\t\t\ty=\"122\"\n\t\t\t\twidth=\"108\"\n\t\t\t\theight=\"5\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-4\"\n\t\t\t\tfill={\"#7ece67\"}\n\t\t\t\td=\"M105,108A22,22,0,0,1,83.09,84a22,22,0,0,0,43.82,0A22,22,0,0,1,105,108Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tfill={\"#f6b756\"}\n\t\t\t\tclassName=\"cls-3\"\n\t\t\t\td=\"M109,107.63v4A22,22,0,0,1,83.09,88,22,22,0,0,0,109,107.63Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-5\"\n\t\t\t\tfill={\"#d6ac90\"}\n\t\t\t\td=\"M93,30l16,15L65.91,84.9a16,16,0,0,1-21.82,0L1,45,17,30Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-6\"\n\t\t\t\tfill={\"#cba07a\"}\n\t\t\t\td=\"M109,45,65.91,84.9a16,16,0,0,1-21.82,0L1,45l2.68-2.52c43.4,40.19,41.54,39.08,45.46,40.6A16,16,0,0,0,65.91,79.9l40.41-37.42Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-7\"\n\t\t\t\tfill={\"#dde1e8\"}\n\t\t\t\td=\"M93,1V59.82L65.91,84.9a16,16,0,0,1-16.77,3.18C45.42,86.64,47,87.6,17,59.82V1Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-8\"\n\t\t\t\tfill={\"#c7cdd8\"}\n\t\t\t\td=\"M74,56c-3.56-5.94-3-10.65-3-17.55a16.43,16.43,0,0,0-12.34-16,5,5,0,1,0-7.32,0A16,16,0,0,0,39,38c0,7.13.59,12-3,18a3,3,0,0,0,0,6H50.41a5,5,0,1,0,9.18,0H74a3,3,0,0,0,0-6ZM53.2,21.37a3,3,0,1,1,3.6,0,1,1,0,0,0-.42.7,11.48,11.48,0,0,0-2.77,0A1,1,0,0,0,53.2,21.37Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-3\"\n\t\t\t\tfill={\"#f6b756\"}\n\t\t\t\td=\"M46.09,86.73,3,127H1v-1c6-5.62-1.26,1.17,43.7-40.78A1,1,0,0,1,46.09,86.73Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-3\"\n\t\t\t\tfill={\"#f6b756\"}\n\t\t\t\td=\"M109,126v1h-2L63.91,86.73a1,1,0,0,1,1.39-1.49C111,127.85,103.11,120.51,109,126Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-8\"\n\t\t\t\tfill={\"#c7cdd8\"}\n\t\t\t\td=\"M93,54.81v5L65.91,84.9a16,16,0,0,1-16.77,3.18C45.42,86.64,47,87.6,17,59.82v-5L44.09,79.9a16,16,0,0,0,21.82,0Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-9\"\n\t\t\t\tfill={\"#fff\"}\n\t\t\t\td=\"M101,95c-.59,0-.08.34-8.72-8.3a1,1,0,0,1,1.44-1.44L101,92.56l15.28-15.28a1,1,0,0,1,1.44,1.44C100.21,96.23,101.6,95,101,95Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-3\"\n\t\t\t\tfill={\"#f6b756\"}\n\t\t\t\td=\"M56.8,18.38a3,3,0,1,0-3.6,0A1,1,0,0,1,52,20,5,5,0,1,1,58,20,1,1,0,0,1,56.8,18.38Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-1\"\n\t\t\t\tfill={\"#fbcc88\"}\n\t\t\t\td=\"M71,42.17V35.45c0-8.61-6.62-16-15.23-16.43A16,16,0,0,0,39,35c0,7.33.58,12-3,18H74A21.06,21.06,0,0,1,71,42.17Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-3\"\n\t\t\t\tfill={\"#f6b756\"}\n\t\t\t\td=\"M74,53H36a21.36,21.36,0,0,0,1.86-4H72.14A21.36,21.36,0,0,0,74,53Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-3\"\n\t\t\t\tfill={\"#f6b756\"}\n\t\t\t\td=\"M59.59,59a5,5,0,1,1-9.18,0\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tclassName=\"cls-1\"\n\t\t\t\tfill={\"#fbcc88\"}\n\t\t\t\td=\"M74,59H36a3,3,0,0,1,0-6H74a3,3,0,0,1,0,6Z\"\n\t\t\t/>\n\t\t</g>\n\t),\n});\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/home/Footer.tsx",["1150"],"import {\n\tFacebookOutlined,\n\tInstagramOutlined,\n\tTwitterOutlined,\n\tYoutubeOutlined,\n} from \"@ant-design/icons\";\nimport {\n\tBox,\n\tchakra,\n\tContainer,\n\tLink,\n\tStack,\n\tText,\n\tuseColorModeValue,\n\tVisuallyHidden,\n} from \"@chakra-ui/react\";\nimport { ReactNode } from \"react\";\nimport codagenceWordLogo from \"../../assets/logo/Codagence_main_logo.png\";\n\nconst Logo = (props: any) => {\n\treturn (\n\t\t<img\n\t\t\tstyle={{ width: \"130px\", height: \"25px\" }}\n\t\t\tsrc={codagenceWordLogo}\n\t\t\talt=\"Codagence Logo\"\n\t\t/>\n\t);\n};\n\nconst SocialButton = ({\n\tchildren,\n\tlabel,\n\thref,\n}: {\n\tchildren: ReactNode;\n\tlabel: string;\n\thref: string;\n}) => {\n\treturn (\n\t\t<chakra.button\n\t\t\tbg={useColorModeValue(\"blackAlpha.100\", \"whiteAlpha.100\")}\n\t\t\trounded={\"full\"}\n\t\t\tw={8}\n\t\t\th={8}\n\t\t\tcursor={\"pointer\"}\n\t\t\tas={\"a\"}\n\t\t\thref={href}\n\t\t\tdisplay={\"inline-flex\"}\n\t\t\talignItems={\"center\"}\n\t\t\tjustifyContent={\"center\"}\n\t\t\ttransition={\"background 0.3s ease\"}\n\t\t\t_hover={{\n\t\t\t\tbg: useColorModeValue(\"blackAlpha.200\", \"whiteAlpha.200\"),\n\t\t\t}}\n\t\t>\n\t\t\t<VisuallyHidden>{label}</VisuallyHidden>\n\t\t\t{children}\n\t\t</chakra.button>\n\t);\n};\n\nexport default function Footer() {\n\treturn (\n\t\t<Box\n\t\t\tbg={useColorModeValue(\"gray.50\", \"gray.900\")}\n\t\t\tcolor={useColorModeValue(\"gray.700\", \"gray.200\")}\n\t\t>\n\t\t\t<Container\n\t\t\t\tas={Stack}\n\t\t\t\tmaxW={\"6xl\"}\n\t\t\t\tpy={4}\n\t\t\t\tspacing={4}\n\t\t\t\tjustify={\"center\"}\n\t\t\t\talign={\"center\"}\n\t\t\t>\n\t\t\t\t<Logo />\n\t\t\t\t<Stack direction={\"row\"} spacing={6}>\n\t\t\t\t\t<Link href={\"#hero\"} onClick={() => {}}>\n\t\t\t\t\t\tHome\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link\n\t\t\t\t\t\thref={\"mailto:gohsyang@gmail.com\"}\n\t\t\t\t\t\tonClick={() => {}}\n\t\t\t\t\t>\n\t\t\t\t\t\tContact\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link\n\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\"#\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonClick={() => {}}\n\t\t\t\t\t>\n\t\t\t\t\t\tTerms\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link\n\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\"#\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonClick={() => {}}\n\t\t\t\t\t>\n\t\t\t\t\t\tPrivacy\n\t\t\t\t\t</Link>\n\t\t\t\t</Stack>\n\t\t\t</Container>\n\n\t\t\t<Box\n\t\t\t\tborderTopWidth={1}\n\t\t\t\tborderStyle={\"solid\"}\n\t\t\t\tborderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n\t\t\t>\n\t\t\t\t<Container\n\t\t\t\t\tas={Stack}\n\t\t\t\t\tmaxW={\"6xl\"}\n\t\t\t\t\tpy={4}\n\t\t\t\t\tdirection={{ base: \"column\", md: \"row\" }}\n\t\t\t\t\tspacing={4}\n\t\t\t\t\tjustify={{ base: \"center\", md: \"space-between\" }}\n\t\t\t\t\talign={{ base: \"center\", md: \"center\" }}\n\t\t\t\t>\n\t\t\t\t\t<Text>© 2022 Zeus API. All rights reserved</Text>\n\t\t\t\t\t<Stack direction={\"row\"} spacing={6}>\n\t\t\t\t\t\t<SocialButton label={\"Facebook\"} href={\"#\"}>\n\t\t\t\t\t\t\t<FacebookOutlined />\n\t\t\t\t\t\t</SocialButton>\n\t\t\t\t\t\t<SocialButton label={\"Twitter\"} href={\"#\"}>\n\t\t\t\t\t\t\t<TwitterOutlined />\n\t\t\t\t\t\t</SocialButton>\n\t\t\t\t\t\t<SocialButton label={\"Instagram\"} href={\"#\"}>\n\t\t\t\t\t\t\t<InstagramOutlined />\n\t\t\t\t\t\t</SocialButton>\n\t\t\t\t\t</Stack>\n\t\t\t\t</Container>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n}\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/home/Hero.tsx",["1151","1152","1153","1154"],"import {\n\tBox,\n\tHeading,\n\tContainer,\n\tText,\n\tButton,\n\tStack,\n\tIcon,\n\tuseColorModeValue,\n\tcreateIcon,\n} from \"@chakra-ui/react\";\nimport \"@fontsource/caveat\";\nimport { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { RoutePath } from \"../../utils/routePath\";\n\nexport default function Hero() {\n\t// Get current sign in User\n\tconst user = useContext(AuthContext);\n\tlet history = useHistory();\n\treturn (\n\t\t<>\n\t\t\t<Container maxW={\"3xl\"} id=\"hero\">\n\t\t\t\t<Stack\n\t\t\t\t\tas={Box}\n\t\t\t\t\ttextAlign={\"center\"}\n\t\t\t\t\tspacing={{ base: 8, md: 14 }}\n\t\t\t\t\tpy={{ base: 20, md: 36 }}\n\t\t\t\t>\n\t\t\t\t\t<Heading\n\t\t\t\t\t\tfontWeight={600}\n\t\t\t\t\t\tfontSize={{ base: \"2xl\", sm: \"4xl\", md: \"6xl\" }}\n\t\t\t\t\t\tlineHeight={\"110%\"}\n\t\t\t\t\t>\n\t\t\t\t\t\tSimplified Okta\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Text as={\"span\"} color={\"pink.400\"}>\n\t\t\t\t\t\t\tAccess Control Management Tool\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Heading>\n\t\t\t\t\t<Text color={\"gray.500\"}>\n\t\t\t\t\t\tAdd access control features to your program without\n\t\t\t\t\t\thassle. You can restrict the user access by implenting\n\t\t\t\t\t\tthe Zeus API.\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Stack\n\t\t\t\t\t\tdirection={\"column\"}\n\t\t\t\t\t\tspacing={3}\n\t\t\t\t\t\talign={\"center\"}\n\t\t\t\t\t\talignSelf={\"center\"}\n\t\t\t\t\t\tposition={\"relative\"}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolorScheme={\"green\"}\n\t\t\t\t\t\t\tbg={\"blue.400\"}\n\t\t\t\t\t\t\trounded={\"full\"}\n\t\t\t\t\t\t\tpx={6}\n\t\t\t\t\t\t\t_hover={{\n\t\t\t\t\t\t\t\tbg: \"#4654A3\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\tif (user === null) {\n\t\t\t\t\t\t\t\t\t// Proceed to login page\n\t\t\t\t\t\t\t\t\thistory.push(RoutePath.login);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\thistory.push(RoutePath.dashboard);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tGet Started\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Stack>\n\t\t\t\t</Stack>\n\t\t\t</Container>\n\t\t</>\n\t);\n}\n\nconst Arrow = createIcon({\n\tdisplayName: \"Arrow\",\n\tviewBox: \"0 0 72 24\",\n\tpath: (\n\t\t<path\n\t\t\tfillRule=\"evenodd\"\n\t\t\tclipRule=\"evenodd\"\n\t\t\td=\"M0.600904 7.08166C0.764293 6.8879 1.01492 6.79004 1.26654 6.82177C2.83216 7.01918 5.20326 7.24581 7.54543 7.23964C9.92491 7.23338 12.1351 6.98464 13.4704 6.32142C13.84 6.13785 14.2885 6.28805 14.4722 6.65692C14.6559 7.02578 14.5052 7.47362 14.1356 7.6572C12.4625 8.48822 9.94063 8.72541 7.54852 8.7317C5.67514 8.73663 3.79547 8.5985 2.29921 8.44247C2.80955 9.59638 3.50943 10.6396 4.24665 11.7384C4.39435 11.9585 4.54354 12.1809 4.69301 12.4068C5.79543 14.0733 6.88128 15.8995 7.1179 18.2636C7.15893 18.6735 6.85928 19.0393 6.4486 19.0805C6.03792 19.1217 5.67174 18.8227 5.6307 18.4128C5.43271 16.4346 4.52957 14.868 3.4457 13.2296C3.3058 13.0181 3.16221 12.8046 3.01684 12.5885C2.05899 11.1646 1.02372 9.62564 0.457909 7.78069C0.383671 7.53862 0.437515 7.27541 0.600904 7.08166ZM5.52039 10.2248C5.77662 9.90161 6.24663 9.84687 6.57018 10.1025C16.4834 17.9344 29.9158 22.4064 42.0781 21.4773C54.1988 20.5514 65.0339 14.2748 69.9746 0.584299C70.1145 0.196597 70.5427 -0.0046455 70.931 0.134813C71.3193 0.274276 71.5206 0.70162 71.3807 1.08932C66.2105 15.4159 54.8056 22.0014 42.1913 22.965C29.6185 23.9254 15.8207 19.3142 5.64226 11.2727C5.31871 11.0171 5.26415 10.5479 5.52039 10.2248Z\"\n\t\t\tfill=\"currentColor\"\n\t\t/>\n\t),\n});\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/repositories/payment_repo.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/response.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/user_model.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/url_model.tsx",[],["1155","1156"],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/networking.tsx",["1157"],"import axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { Constants } from \"../utils/constants\";\nimport { Response } from \"./response\";\n\nexport class Networking {\n\turl = Constants.urlLocal;\n\tapiVer = Constants.apiver;\n\n\tasync getData(path: string, headers: any): Promise<Response> {\n\t\ttry {\n\t\t\tif (this.url === \"\") {\n\t\t\t\tthis.url = Constants.urlCloud;\n\t\t\t}\n\n\t\t\tlet response = await axios.get(\n\t\t\t\t`${this.url}/${this.apiVer}/${path}`,\n\t\t\t\t{ headers }\n\t\t\t);\n\t\t\tif (response.status === 200) {\n\t\t\t\tlet e = response.data;\n\n\t\t\t\tlet data =\n\t\t\t\t\te instanceof Array\n\t\t\t\t\t\t? e.map((x) => new Map<String, any>(Object.entries(x)))\n\t\t\t\t\t\t: new Map<String, any>(Object.entries(e));\n\n\t\t\t\treturn new Response(true, \"\", data);\n\t\t\t} else if (response.status === 204) {\n\t\t\t\treturn new Response(true, \"No records found\", \"\");\n\t\t\t} else {\n\t\t\t\treturn new Response(false, response.data, response.data);\n\t\t\t}\n\t\t} catch (error: any) {\n\t\t\tif (axios.isAxiosError(error)) {\n\t\t\t\tif (error.response?.status === 401) {\n\t\t\t\t\treturn new Response(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\"Session expired\",\n\t\t\t\t\t\t\"Session expired\"\n\t\t\t\t\t);\n\t\t\t\t} else if (error.response?.status === 402) {\n\t\t\t\t\treturn new Response(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\"Payment Required\",\n\t\t\t\t\t\t\"Make payment first before using the service.\"\n\t\t\t\t\t);\n\t\t\t\t} else if (error.response) {\n\t\t\t\t\t/*\n\t\t\t\t\t * The request was made and the server responded with a\n\t\t\t\t\t * status code that falls out of the range of 2xx\n\t\t\t\t\t */\n\t\t\t\t\treturn new Response(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\terror.response.data.toString(),\n\t\t\t\t\t\terror.response.data.toString()\n\t\t\t\t\t);\n\t\t\t\t} else if (error.request) {\n\t\t\t\t\t/*\n\t\t\t\t\t * The request was made but no response was received, `error.request`\n\t\t\t\t\t * is an instance of XMLHttpRequest in the browser and an instance\n\t\t\t\t\t * of http.ClientRequest in Node.js\n\t\t\t\t\t */\n\t\t\t\t\treturn new Response(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\terror.request.toString(),\n\t\t\t\t\t\terror.request.toString()\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// Something happened in setting up the request and triggered an Error\n\t\t\t\t\treturn new Response(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\terror.message.toString(),\n\t\t\t\t\t\terror.message.toString()\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new Response(false, \"error\", error);\n\t\t}\n\t}\n\n\tasync postData(api: string, body: any, headers: any): Promise<Response> {\n\t\ttry {\n\t\t\tif (this.url === \"\") {\n\t\t\t\tthis.url = Constants.urlCloud;\n\t\t\t}\n\n\t\t\tlet response = await axios.post(\n\t\t\t\t`${this.url}/${this.apiVer}/${api}`,\n\t\t\t\tbody,\n\t\t\t\t{ headers }\n\t\t\t);\n\t\t\tif (response.status === 201 || response.status === 200) {\n\t\t\t\tvar regexFormat = /[{}]/gm;\n\n\t\t\t\t// If the data retrieved is JSON\n\t\t\t\tif (regexFormat.test(JSON.stringify(response.data))) {\n\t\t\t\t\treturn new Response(\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tnew Map(Object.entries(response.data))\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Response(true, \"\", response.data);\n\t\t\t\t}\n\t\t\t} else if (response.status === 204) {\n\t\t\t\treturn new Response(true, \"No records found\", response.data);\n\t\t\t} else {\n\t\t\t\treturn new Response(false, response.data, response.data);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (axios.isAxiosError(error)) {\n\t\t\t\tif (error.response?.status === 401) {\n\t\t\t\t\treturn new Response(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\"Session expired\",\n\t\t\t\t\t\t\"Session expired\"\n\t\t\t\t\t);\n\t\t\t\t} else if (error.response?.status === 402) {\n\t\t\t\t\treturn new Response(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\"Payment Required\",\n\t\t\t\t\t\t\"Make payment first before using the service.\"\n\t\t\t\t\t);\n\t\t\t\t} else if (error.response) {\n\t\t\t\t\t/*\n\t\t\t\t\t * The request was made and the server responded with a\n\t\t\t\t\t * status code that falls out of the range of 2xx\n\t\t\t\t\t */\n\n\t\t\t\t\treturn new Response(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\terror.response.data.toString(),\n\t\t\t\t\t\terror.response.data.toString()\n\t\t\t\t\t);\n\t\t\t\t} else if (error.request) {\n\t\t\t\t\t/*\n\t\t\t\t\t * The request was made but no response was received, `error.request`\n\t\t\t\t\t * is an instance of XMLHttpRequest in the browser and an instance\n\t\t\t\t\t * of http.ClientRequest in Node.js\n\t\t\t\t\t */\n\t\t\t\t\treturn new Response(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\terror.request.toString(),\n\t\t\t\t\t\terror.request.toString()\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// Something happened in setting up the request and triggered an Error\n\t\t\t\t\treturn new Response(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\terror.message.toString(),\n\t\t\t\t\t\terror.message.toString()\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new Response(false, \"error\", error);\n\t\t}\n\t}\n\n\tasync patchData(api: string, body: any, headers: any): Promise<Response> {\n\t\tif (this.url === \"\") {\n\t\t\tthis.url = Constants.urlCloud;\n\t\t}\n\n\t\tlet response = await axios.patch(\n\t\t\t`${this.url}/${this.apiVer}/${api}`,\n\t\t\tbody,\n\t\t\t{ headers }\n\t\t);\n\n\t\treturn new Response(true, response.statusText, response.data);\n\t}\n\n\tasync deleteData(api: string, body: any, headers?: any): Promise<Response> {\n\t\ttry {\n\t\t\tif (this.url === \"\") {\n\t\t\t\tthis.url = Constants.urlCloud;\n\t\t\t}\n\n\t\t\tlet response = await axios.delete(\n\t\t\t\t`${this.url}/${this.apiVer}/${api}`,\n\t\t\t\t{\n\t\t\t\t\theaders,\n\t\t\t\t\tdata: body,\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (response.status === 201 || response.status === 200) {\n\t\t\t\tvar regexFormat = /[{}]/gm;\n\n\t\t\t\t// If the data retrieved is JSON\n\t\t\t\tif (regexFormat.test(JSON.stringify(response.data))) {\n\t\t\t\t\treturn new Response(\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tnew Map(Object.entries(response.data))\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Response(\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tresponse.statusText,\n\t\t\t\t\t\tresponse.data\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else if (response.status === 204) {\n\t\t\t\treturn new Response(true, \"No records found\", response.data);\n\t\t\t} else if (response.status === 401) {\n\t\t\t\treturn new Response(true, \"Session expired\", \"Session expired\");\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (axios.isAxiosError(error)) {\n\t\t\t\tif (error.response?.status === 401) {\n\t\t\t\t\treturn new Response(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\"Session expired\",\n\t\t\t\t\t\t\"Session expired\"\n\t\t\t\t\t);\n\t\t\t\t} else if (error.response?.status === 402) {\n\t\t\t\t\treturn new Response(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\"Payment Required\",\n\t\t\t\t\t\t\"Make payment first before using the service.\"\n\t\t\t\t\t);\n\t\t\t\t} else if (error.response) {\n\t\t\t\t\t/*\n\t\t\t\t\t * The request was made and the server responded with a\n\t\t\t\t\t * status code that falls out of the range of 2xx\n\t\t\t\t\t */\n\n\t\t\t\t\treturn new Response(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\terror.response.data.toString(),\n\t\t\t\t\t\terror.response.data.toString()\n\t\t\t\t\t);\n\t\t\t\t} else if (error.request) {\n\t\t\t\t\t/*\n\t\t\t\t\t * The request was made but no response was received, `error.request`\n\t\t\t\t\t * is an instance of XMLHttpRequest in the browser and an instance\n\t\t\t\t\t * of http.ClientRequest in Node.js\n\t\t\t\t\t */\n\t\t\t\t\treturn new Response(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\terror.request.toString(),\n\t\t\t\t\t\terror.request.toString()\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// Something happened in setting up the request and triggered an Error\n\t\t\t\t\treturn new Response(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\terror.message.toString(),\n\t\t\t\t\t\terror.message.toString()\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new Response(false, \"error\", \"Unknown Error\");\n\t}\n}\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/repositories/newsletter_repo.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/payment_model.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/utils/constants.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/newsletter_model.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/home/Nav.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/file_model.tsx",[],["1158","1159"],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/report_model.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/dashboard/MainDashboard.tsx",["1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport {\n\tButton,\n\tLayout,\n\tRow,\n\tCol,\n\tList,\n\tmessage,\n\tSkeleton,\n\tPopconfirm,\n\tSpin,\n\tTooltip,\n} from \"antd\";\nimport \"./MainDashboard.less\";\nimport codagenceWordLogo from \"../../assets/logo/Codagence_main_logo.png\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { User } from \"../../services/api/models/user_model\";\nimport {\n\tCopyTwoTone,\n\tDeleteOutlined,\n\tEditTwoTone,\n\tEyeInvisibleOutlined,\n\tFundTwoTone,\n\tHeartOutlined,\n\tHomeTwoTone,\n\tPlusCircleOutlined,\n\tReconciliationOutlined,\n\tUserOutlined,\n} from \"@ant-design/icons\";\nimport { UserUrl } from \"../../services/api/models/url_model\";\nimport Nav from \"./Nav\";\nimport mixpanel from \"mixpanel-browser\";\nimport { Link, Button as ChakraButton, Stack } from \"@chakra-ui/react\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport Title from \"antd/lib/typography/Title\";\nimport { ClientRepo } from \"../../services/api/repositories/client_repo\";\nimport { Client } from \"../../services/api/models/client_model\";\nimport { RoleRepo } from \"../../services/api/repositories/role_repo\";\nimport { RelationshipRepo } from \"../../services/api/repositories/relationship_repo\";\n\nexport const MainDashboard: React.FC<any> = () => {\n\tlet clientRepo = new ClientRepo();\n\n\tlet userRepo = new UserRepo();\n\n\tlet roleRepo = new RoleRepo();\n\n\tlet relationshipRepo = new RelationshipRepo();\n\n\tlet history = useHistory();\n\n\t// Get current sign in User\n\tconst user = useContext(AuthContext);\n\n\t// Handle the state of each option in Menu bar\n\n\tconst [_viewTitle, setViewTitle] = useState<string>(\"Clients\");\n\n\tconst [_viewList, setViewList] = useState<Array<any>>([]);\n\n\tconst [_listLoading, setListLoading] = useState<boolean>(true);\n\n\tasync function getClients() {\n\t\tsetViewList([]);\n\n\t\tlet apiResult = await clientRepo.getAllClients({\n\t\t\thistory: history,\n\t\t});\n\n\t\tif (apiResult.isSuccess) {\n\t\t\tif (apiResult.data.length > 0)\n\t\t\t\tapiResult.data.forEach((element: Client) => {\n\t\t\t\t\tsetViewList((prevState) => {\n\t\t\t\t\t\treturn [...prevState, element];\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\n\tasync function getRoles() {\n\t\tsetViewList([]);\n\t\tlet userId = await LocalStorage.getUserID();\n\t\tlet apiResult = await roleRepo.getAllRoles({\n\t\t\thistory: history,\n\t\t});\n\n\t\tif (apiResult.isSuccess) {\n\t\t\tif (apiResult.data.length > 0)\n\t\t\t\tapiResult.data.forEach((element: Client) => {\n\t\t\t\t\tsetViewList((prevState) => {\n\t\t\t\t\t\treturn [...prevState, element];\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\tasync function getRelationships() {\n\t\tsetViewList([]);\n\t\tlet apiResult = await relationshipRepo.getAllRelationship({\n\t\t\thistory: history,\n\t\t});\n\n\t\tif (apiResult.isSuccess) {\n\t\t\tif (apiResult.data.length > 0)\n\t\t\t\tapiResult.data.forEach((element: Client) => {\n\t\t\t\t\tsetViewList((prevState) => {\n\t\t\t\t\t\treturn [...prevState, element];\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\n\tasync function deleteClient(clientId: string) {\n\t\tlet apiResult = await clientRepo.deleteClient({\n\t\t\thistory: history,\n\t\t\tclientId: clientId!,\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tsetListLoading(true);\n\t\t\tgetClients();\n\t\t\tmessage.success(\"Delete client success\");\n\t\t} else {\n\t\t\tmessage.success(\"Delete Fail\");\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\tasync function deleteRole(roleId: string) {\n\t\tlet apiResult = await roleRepo.deleteRole({\n\t\t\thistory: history,\n\t\t\troleId: roleId!,\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tsetListLoading(true);\n\t\t\tgetRoles();\n\t\t\tmessage.success(\"Delete role success\");\n\t\t} else {\n\t\t\tmessage.success(\"Delete Fail\");\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\n\tasync function deleteRelationship(clientRoleRelId: string) {\n\t\tlet apiResult = await relationshipRepo.deleteRelationship({\n\t\t\thistory: history,\n\t\t\tclientRoleRelId: clientRoleRelId!,\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tsetListLoading(true);\n\t\t\tgetRelationships();\n\t\t\tmessage.success(\"Delete relationship success\");\n\t\t} else {\n\t\t\tmessage.success(\"Delete Fail\");\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\n\tuseEffect(() => {\n\t\tasync function initState() {\n\t\t\tlet userId = await LocalStorage.getUserID();\n\t\t\tlet apiResult = await userRepo.getUserById({\n\t\t\t\tuserId: userId!,\n\t\t\t});\n\t\t\tif (apiResult.isSuccess) {\n\t\t\t\tlet usermodel: User = apiResult.data[0];\n\t\t\t\tawait LocalStorage.setEmail(usermodel?.email ?? \"\");\n\t\t\t\tawait LocalStorage.setNickName(usermodel?.username ?? \"\");\n\t\t\t\tawait LocalStorage.setPackagePlan(\n\t\t\t\t\tusermodel?.packagePlan ?? \"free\"\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tinitState();\n\t\tgetClients();\n\n\t\treturn () => {\n\t\t\tsetViewTitle(\"\");\n\t\t\tsetViewList([]);\n\t\t\tsetListLoading(true);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Nav />\n\t\t\t<Layout>\n\t\t\t\t<Row className=\"dashboard_row\">\n\t\t\t\t\t<Col xs={24} xl={6} className=\"dashboard_col\" span={6} />\n\t\t\t\t\t<Col xs={24} xl={12} className=\"dashboard_col\" span={12}>\n\t\t\t\t\t\t<Stack spacing={6}>\n\t\t\t\t\t\t\t<Stack direction=\"row\" spacing={4}>\n\t\t\t\t\t\t\t\t<ChakraButton\n\t\t\t\t\t\t\t\t\tleftIcon={<AddIcon />}\n\t\t\t\t\t\t\t\t\tcolorScheme=\"blue\"\n\t\t\t\t\t\t\t\t\tvariant=\"solid\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\thistory.push(RoutePath.create_client);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd client\n\t\t\t\t\t\t\t\t</ChakraButton>\n\n\t\t\t\t\t\t\t\t<ChakraButton\n\t\t\t\t\t\t\t\t\tleftIcon={<AddIcon />}\n\t\t\t\t\t\t\t\t\tcolorScheme=\"orange\"\n\t\t\t\t\t\t\t\t\tvariant=\"solid\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\thistory.push(RoutePath.create_role);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd Role\n\t\t\t\t\t\t\t\t</ChakraButton>\n\n\t\t\t\t\t\t\t\t<ChakraButton\n\t\t\t\t\t\t\t\t\tleftIcon={<AddIcon />}\n\t\t\t\t\t\t\t\t\tcolorScheme=\"purple\"\n\t\t\t\t\t\t\t\t\tvariant=\"solid\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\thistory.push({\n\t\t\t\t\t\t\t\t\t\t\tpathname:\n\t\t\t\t\t\t\t\t\t\t\t\tRoutePath.create_relationship,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd Relationship\n\t\t\t\t\t\t\t\t</ChakraButton>\n\t\t\t\t\t\t\t</Stack>\n\n\t\t\t\t\t\t\t<Stack direction=\"row\" spacing={4}>\n\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\tplacement=\"topLeft\"\n\t\t\t\t\t\t\t\t\ttitle=\"View clients\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t<UserOutlined\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"#1E90FF\" }}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\t\tsetListLoading(true);\n\t\t\t\t\t\t\t\t\t\t\tsetViewTitle(\"Clients\");\n\t\t\t\t\t\t\t\t\t\t\tgetClients();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Button>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t<Tooltip placement=\"topLeft\" title=\"View Roles\">\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t<ReconciliationOutlined\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"\t#FFA500\" }}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetListLoading(true);\n\t\t\t\t\t\t\t\t\t\t\tsetViewTitle(\"Roles\");\n\t\t\t\t\t\t\t\t\t\t\tgetRoles();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Button>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\tplacement=\"topLeft\"\n\t\t\t\t\t\t\t\t\ttitle=\"View Relationship\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t<HeartOutlined\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"#BA55D3\" }}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetViewTitle(\"Relationships\");\n\t\t\t\t\t\t\t\t\t\t\tgetRelationships();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Button>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\tplacement=\"topLeft\"\n\t\t\t\t\t\t\t\t\ttitle=\"View Access Log\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t<FundTwoTone twoToneColor=\"#DB7093\"/>\n\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\t\thistory.push(RoutePath.access_log_list)\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></Button>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t<Title level={3}>{_viewTitle}</Title>\n\t\t\t\t\t\t</Stack>\n\n\t\t\t\t\t\t<div style={{ height: \"20px\" }}></div>\n\t\t\t\t\t\t<Skeleton active loading={_listLoading}>\n\t\t\t\t\t\t\t<List\n\t\t\t\t\t\t\t\titemLayout=\"horizontal\"\n\t\t\t\t\t\t\t\tdataSource={_viewList}\n\t\t\t\t\t\t\t\trenderItem={(item, index) => (\n\t\t\t\t\t\t\t\t\t<List.Item\n\t\t\t\t\t\t\t\t\t\tactions={[\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"topLeft\"\n\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Edit\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditTwoTone twoToneColor=\"#270949\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={\"large\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tswitch (_viewTitle) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"Clients\":\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRoutePath.create_client,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclientId:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.clientId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"Roles\":\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRoutePath.create_role,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\troleId: item.roleId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"Relationships\":\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRoutePath.create_relationship,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclientRoleRelId:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.clientRoleRelId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>,\n\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure you want to delete?\"\n\t\t\t\t\t\t\t\t\t\t\t\tonCancel={() => {}}\n\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tswitch (_viewTitle) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"Clients\":\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteClient(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.clientId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"Roles\":\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteRole(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.roleId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"Relationships\":\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteRelationship(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.clientRoleRelId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tshape=\"round\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"red\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={\"large\"}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>,\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<List.Item.Meta\n\t\t\t\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tswitch (_viewTitle) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"Clients\":\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRoutePath.client_list,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclientId:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.clientId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: item.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"Roles\":\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRoutePath.role_list,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\troleId: item.roleId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: item.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"Relationships\":\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRoutePath.create_relationship,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclientRoleRelId:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.clientRoleRelId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{_viewTitle ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Relationships\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? `${item.client[0].name} having ${item.permission} permission in ${item.role[0].name}`\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tdescription={`Created on ${new Date(\n\t\t\t\t\t\t\t\t\t\t\t\titem.createdDateTime ?? \"\"\n\t\t\t\t\t\t\t\t\t\t\t).toLocaleString()}`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t\t</Skeleton>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={24} xl={12} className=\"dashboard_col\" span={6} />\n\t\t\t\t</Row>\n\t\t\t</Layout>\n\t\t</>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/dashboard/Nav.tsx",["1172","1173","1174"],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/client/CreateClient.tsx",["1175","1176"],"import React, { useEffect, useState } from \"react\";\nimport { FillForm } from \"../../utils/components\";\nimport { FormLabel, Button as ChakraButton, Text } from \"@chakra-ui/react\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Form, Input, message, Space } from \"antd\";\nimport { ClientRepo } from \"../../services/api/repositories/client_repo\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Client } from \"../../services/api/models/client_model\";\nimport { RoutePath } from \"../../utils/routePath\";\n\nexport const CreateClient: React.FC<any> = () => {\n\tlet location = useLocation();\n\tlet history = useHistory();\n\tconst locationState: any = location.state;\n\tconst [form] = Form.useForm();\n\tconst clientRepo = new ClientRepo();\n\tconst [_clientData, setClientData] = useState<Client>();\n\tconst [_isFormLoading, setFormLoading] = useState<boolean>(true);\n\tconst children = (\n\t\t<>\n\t\t\t<FormLabel>Name</FormLabel>\n\t\t\t<Form.Item\n\t\t\t\tname=\"name\"\n\t\t\t\trules={[\n\t\t\t\t\t{\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"Please input the Client's name\",\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Input placeholder=\"Name\" style={{ width: \"50%\" }} />\n\t\t\t</Form.Item>\n\t\t\t<>\n\t\t\t\t<FormLabel>Attribute</FormLabel>\n\t\t\t\t<Form.List name=\"attribute\">\n\t\t\t\t\t{(fields, { add, remove }) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{fields.map(({ key, name, ...restField }) => (\n\t\t\t\t\t\t\t\t<Space\n\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\tmarginBottom: 8,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\talign=\"baseline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t{...restField}\n\t\t\t\t\t\t\t\t\t\tname={[name, \"key\"]}\n\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Missing attribute key\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input placeholder=\"Attribute Value\" />\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t{...restField}\n\t\t\t\t\t\t\t\t\t\tname={[name, \"value\"]}\n\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Missing attribute value\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input placeholder=\"Attribute value\" />\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t<MinusCircleOutlined\n\t\t\t\t\t\t\t\t\t\tonClick={() => remove(name)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Space>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t<ChakraButton\n\t\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\t\tonClick={() => add()}\n\t\t\t\t\t\t\t\t\tleftIcon={<PlusOutlined color=\"blue.400\" />}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Text color=\"blue.400\">Add Attribute</Text>\n\t\t\t\t\t\t\t\t</ChakraButton>\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Form.List>\n\t\t\t</>\n\t\t</>\n\t);\n\n\tconst onSubmit = async (values: any) => {\n\t\tlet userId = await LocalStorage.getUserID();\n\t\tconsole.log(values[\"attribute\"]);\n\t\tlet apiResult = await clientRepo.saveClient({\n\t\t\thistory:history,\n\t\t\tclientId:\n\t\t\t\tlocationState !== undefined ? locationState.clientId : null,\n\t\t\tcreatedById: userId ?? \"\",\n\t\t\tname: values[\"name\"],\n\t\t\tattribute: values[\"attribute\"],\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tmessage.success(\"Client has saved\");\n\t\t\tlocationState !== undefined\n\t\t\t\t? history.replace(RoutePath.dashboard)\n\t\t\t\t: form.resetFields();\n\t\t} else {\n\t\t\tmessage.error(\"Fail to save\");\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tasync function initState() {\n\t\t\tif (locationState !== undefined) {\n\t\t\t\tlet apiResult = await clientRepo.getClientById({\n\t\t\t\t\thistory:history,\n\t\t\t\t\tclientId: locationState.clientId!,\n\t\t\t\t});\n\t\t\t\tif (apiResult.isSuccess) {\n\t\t\t\t\tsetClientData(\n\t\t\t\t\t\tnew Client({\n\t\t\t\t\t\t\tname: apiResult.data[0].name,\n\t\t\t\t\t\t\tattribute: apiResult.data[0].attribute,\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetFormLoading(false);\n\t\t}\n\n\t\tinitState();\n\n\t\treturn () => {\n\t\t\tsetClientData(new Client({}));\n\t\t};\n\t}, []);\n\n\t// Set Initial Values Using State in antd form\n\tuseEffect(() => {\n\t\tform.resetFields();\n\t}, [_clientData]);\n\n\treturn (\n\t\t<FillForm\n\t\t\tformComponents={children}\n\t\t\ttitle={\"Client's Profile\"}\n\t\t\tsubtitle={\"Please fill in the client's name and attributes\"}\n\t\t\tinitialValue={{\n\t\t\t\tname: _clientData?.name ?? \"\",\n\t\t\t\tattribute: _clientData?.attribute ?? \"\",\n\t\t\t}}\n\t\t\tform={form}\n\t\t\tonSubmit={onSubmit}\n\t\t\tisFormLoading={_isFormLoading}\n\t\t>\n\t\t\t{\" \"}\n\t\t</FillForm>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/repositories/client_repo.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/client_model.tsx",["1177","1178"],"import { GetRelationshipResponse, Relationship } from \"./relationship_model\";\nimport { GetRoleResponse, Role } from \"./role_model\";\n\nexport class Client {\n\tclientId?: string;\n\tname?: string;\n\tcreatedDateTime?: string;\n\tcreatedById?: string;\n\tattribute?: Array<ClientAttribute>;\n\troles?: Array<Relationship>;\n\n\tconstructor(props: {\n\t\tclientId?: string;\n\t\tname?: string;\n\t\tcreatedDateTime?: string;\n\t\tcreatedById?: string;\n\t\tattribute?: Array<ClientAttribute>;\n\t\troles?: Array<Relationship>;\n\t}) {\n\t\tthis.clientId = props.clientId;\n\t\tthis.name = props.name;\n\t\tthis.createdById = props.createdById;\n\t\tthis.createdDateTime = props.createdDateTime;\n\t\tthis.attribute = props.attribute;\n\t\tthis.roles = props.roles;\n\t}\n\n\t// Convert the map into the User object\n\tfromJson(json: Map<String, any>) {\n\n\t\tthis.clientId = json.get(\"client_id\");\n\t\tthis.name = json.get(\"name\");\n\t\tthis.createdById = json.get(\"created_by_id\");\n\t\tthis.createdDateTime = json.get(\"created_date_time\");\n\t\tlet attributeMap = new Map<String, any>().set(\n\t\t\t\"attribute\",\n\t\t\tjson.get(\"attribute\")\n\t\t);\n\t\tthis.attribute = new GetClientAttributeResponse().fromJson(\n\t\t\tattributeMap\n\t\t);\n\t\tlet relationshipMap = new Map<String, any>().set(\n\t\t\t\"Relationship\",\n\t\t\tjson.get(\"relationship\")\n\t\t);\n\n\t\tthis.roles = new GetRelationshipResponse().fromJson(relationshipMap);\n\t\t\n\t\treturn this;\n\t}\n\n\t// Convert User Object into map\n\ttoJson() {\n\t\tlet data = new Map<String, any>();\n\t\tdata.set(\"clientId\", this.clientId);\n\t\tdata.set(\"name\", this.name);\n\t\tdata.set(\"createdById\", this.createdById);\n\t\tdata.set(\"createdDateTime\", this.createdDateTime);\n\t\tdata.set(\"attribute\", this.attribute);\n\n\t\treturn data;\n\t}\n}\n\nexport class GetClientResponse {\n\tclient?: Array<Client>;\n\n\tconstructor(client?: Array<Client>) {\n\t\tthis.client = client;\n\t}\n\n\t// Convert JSON (containing list of data) to array\n\tfromJson(json: Map<String, any>) {\n\t\tif (json.get(\"Client\") != null) {\n\t\t\tthis.client = [];\n\t\t\tjson.get(\"Client\").forEach((v: Map<String, any>) => {\n\t\t\t\tthis.client?.push(\n\t\t\t\t\tnew Client({}).fromJson(new Map(Object.entries(v)))\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\treturn this.client;\n\t}\n}\n\nexport class ClientAttribute {\n\tattributeId?: string;\n\tkey?: string;\n\tvalue?: string;\n\n\tconstructor(props: { attributeId?: string; key?: string; value?: string }) {\n\t\tthis.attributeId = props.attributeId;\n\t\tthis.key = props.key;\n\t\tthis.value = props.value;\n\t}\n\n\t// Convert the map into the User object\n\tfromJson(json: Map<String, any>) {\n\t\tthis.attributeId = json.get(\"client_attr_id\");\n\t\tthis.key = json.get(\"key\");\n\t\tthis.value = json.get(\"value\");\n\n\t\treturn this;\n\t}\n\n\t// Convert User Object into map\n\ttoJson() {\n\t\tlet data = new Map<String, any>();\n\t\tdata.set(\"client_attr_id\", this.attributeId);\n\t\tdata.set(\"key\", this.key);\n\t\tdata.set(\"value\", this.value);\n\n\t\treturn data;\n\t}\n}\n\nexport class GetClientAttributeResponse {\n\tattribute?: Array<ClientAttribute>;\n\n\tconstructor(attribute?: Array<ClientAttribute>) {\n\t\tthis.attribute = attribute;\n\t}\n\n\t// Convert JSON (containing list of data) to array\n\tfromJson(json: Map<String, any>) {\n\t\tif (json.get(\"attribute\") != null) {\n\t\t\tthis.attribute = [];\n\t\t\tjson.get(\"attribute\").forEach((v: Map<String, any>) => {\n\t\t\t\tthis.attribute?.push(\n\t\t\t\t\tnew ClientAttribute({}).fromJson(new Map(Object.entries(v)))\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\treturn this.attribute;\n\t}\n}\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/role/CreateRole.tsx",["1179","1180","1181"],"import React, { useEffect, useState } from \"react\";\nimport { FillForm } from \"../../utils/components\";\nimport { FormLabel, Button as ChakraButton, Text } from \"@chakra-ui/react\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Form, Input, message, Space } from \"antd\";\nimport { ClientRepo } from \"../../services/api/repositories/client_repo\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { RoleRepo } from \"../../services/api/repositories/role_repo\";\nimport { Role } from \"../../services/api/models/role_model\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RoutePath } from \"../../utils/routePath\";\n\nexport const CreateRole: React.FC<any> = () => {\n\tlet location = useLocation();\n\tlet history = useHistory();\n\n\tconst locationState: any = location.state;\n\tconst [form] = Form.useForm();\n\tconst roleRepo = new RoleRepo();\n\tconst [_roleData, setRoleData] = useState<Role>();\n\tconst [_isFormLoading, setFormLoading] = useState<boolean>(true);\n\tconst children = (\n\t\t<>\n\t\t\t<FormLabel>Name</FormLabel>\n\t\t\t<Form.Item\n\t\t\t\tname=\"name\"\n\t\t\t\trules={[\n\t\t\t\t\t{\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"Please input the name of the role\",\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Input placeholder=\"Name\" style={{ width: \"50%\" }} />\n\t\t\t</Form.Item>\n\t\t\t<>\n\t\t\t\t<FormLabel>Attribute</FormLabel>\n\t\t\t\t<Form.List name=\"attribute\">\n\t\t\t\t\t{(fields, { add, remove }) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{fields.map(({ key, name, ...restField }) => (\n\t\t\t\t\t\t\t\t<Space\n\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\tmarginBottom: 8,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\talign=\"baseline\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t{...restField}\n\t\t\t\t\t\t\t\t\t\tname={[name, \"key\"]}\n\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Missing attribute key\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input placeholder=\"Attribute Value\" />\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t{...restField}\n\t\t\t\t\t\t\t\t\t\tname={[name, \"value\"]}\n\t\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Missing attribute value\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Input placeholder=\"Attribute value\" />\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t<MinusCircleOutlined\n\t\t\t\t\t\t\t\t\t\tonClick={() => remove(name)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Space>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t<ChakraButton\n\t\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\t\tonClick={() => add()}\n\t\t\t\t\t\t\t\t\tleftIcon={<PlusOutlined color=\"blue.400\" />}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Text color=\"blue.400\">Add Attribute</Text>\n\t\t\t\t\t\t\t\t</ChakraButton>\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Form.List>\n\t\t\t</>\n\t\t</>\n\t);\n\n\tconst onSubmit = async (values: any) => {\n\t\tlet userId = await LocalStorage.getUserID();\n\t\tlet apiResult = await roleRepo.saveRole({\n\t\t\thistory: history,\n\t\t\troleId: locationState !== undefined ? locationState.roleId : null,\n\t\t\tcreatedById: userId ?? \"\",\n\t\t\tname: values[\"name\"],\n\t\t\tattribute: values[\"attribute\"],\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tmessage.success(\"Role has created\");\n\t\t\tlocationState !== undefined\n\t\t\t\t? history.replace(RoutePath.dashboard)\n\t\t\t\t: form.resetFields();\n\t\t} else {\n\t\t\tmessage.error(\"Fail to save\");\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tasync function initState() {\n\t\t\tif (locationState !== undefined) {\n\t\t\t\tlet apiResult = await roleRepo.getRoleById({\n\t\t\t\t\thistory: history,\n\t\t\t\t\troleId: locationState.roleId!,\n\t\t\t\t});\n\t\t\t\tif (apiResult.isSuccess) {\n\t\t\t\t\tsetRoleData(\n\t\t\t\t\t\tnew Role({\n\t\t\t\t\t\t\tname: apiResult.data[0].name,\n\t\t\t\t\t\t\tattribute: apiResult.data[0].attribute,\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetFormLoading(false);\n\t\t}\n\n\t\tinitState();\n\n\t\treturn () => {\n\t\t\tsetRoleData(new Role({}));\n\t\t};\n\t}, []);\n\n\t// Set Initial Values Using State in antd form\n\tuseEffect(() => {\n\t\tform.resetFields();\n\t}, [_roleData]);\n\n\treturn (\n\t\t<FillForm\n\t\t\tformComponents={children}\n\t\t\ttitle={\"Role Details\"}\n\t\t\tsubtitle={\"Please fill in the name of the role\"}\n\t\t\tinitialValue={{\n\t\t\t\tname: _roleData?.name,\n\t\t\t\tattribute: _roleData?.attribute,\n\t\t\t}}\n\t\t\tform={form}\n\t\t\tonSubmit={onSubmit}\n\t\t\tisFormLoading={_isFormLoading}\n\t\t>\n\t\t\t{\" \"}\n\t\t</FillForm>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/repositories/role_repo.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/role_model.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/relationship/CreateRelationship.tsx",["1182","1183","1184","1185","1186","1187","1188"],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/repositories/relationship_repo.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/relationship_model.tsx",["1189","1190"],"import { Client, GetClientResponse } from \"./client_model\";\nimport { GetRoleResponse, Role } from \"./role_model\";\n\nexport class Relationship {\n\tclientRoleRelId?: string;\n\tpermission?: string;\n\tcreatedDateTime?: string;\n\tcreatedById?: string;\n\tclient?: any;\n\trole?: any;\n\n\tconstructor(props: {\n\t\tclientRoleRelId?: string;\n\t\tpermission?: string;\n\t\tcreatedDateTime?: string;\n\t\tcreatedById?: string;\n\t\tclient?: any;\n\t\trole?: any;\n\t}) {\n\t\tthis.clientRoleRelId = props.clientRoleRelId;\n\t\tthis.permission = props.permission;\n\t\tthis.createdDateTime = props.createdDateTime;\n\t\tthis.createdById = props.createdById;\n\t\tthis.client = props.client;\n\t\tthis.role = props.role;\n\t}\n\n\t// Convert the map into the User object\n\tfromJson(json: Map<String, any>) {\n\t\tthis.clientRoleRelId = json.get(\"client_role_rel_id\");\n\t\tthis.permission = json.get(\"permission\");\n\t\tthis.createdById = json.get(\"created_by_id\");\n\t\tthis.createdDateTime = json.get(\"added_date_time\");\n\n\t\tlet clientMap = new Map<String, any>().set(\n\t\t\t\"Client\",\n\t\t\tnew Array<any>(json.get(\"client\"))\n\t\t);\n\n\n\t\tthis.client = new GetClientResponse().fromJson(clientMap);\n\n\n\t\tlet roleMap = new Map<String, any>().set(\n\t\t\t\"Role\",\n\t\t\tnew Array<any>(json.get(\"role\"))\n\t\t);\n\t\tthis.role = new GetRoleResponse().fromJson(roleMap);\n\n\t\treturn this;\n\t}\n\n\t// Convert User Object into map\n\ttoJson() {\n\t\tlet data = new Map<String, any>();\n\t\tdata.set(\"clientRoleRelId\", this.clientRoleRelId);\n\t\tdata.set(\"permission\", this.permission);\n\t\tdata.set(\"createdById\", this.createdById);\n\t\tdata.set(\"added_date_time\", this.createdDateTime);\n\t\tdata.set(\"role\", this.role);\n\t\tdata.set(\"client\", this.client);\n\n\t\treturn data;\n\t}\n}\n\nexport class GetRelationshipResponse {\n\trelationship?: Array<Relationship>;\n\n\tconstructor(relationship?: Array<Relationship>) {\n\t\tthis.relationship = relationship;\n\t}\n\n\t// Convert JSON (containing list of data) to array\n\tfromJson(json: Map<String, any>) {\n\t\tif (json.get(\"Relationship\") != null) {\n\t\t\tthis.relationship = [];\n\t\t\tjson.get(\"Relationship\").forEach((v: Map<String, any>) => {\n\t\t\t\tthis.relationship?.push(\n\t\t\t\t\tnew Relationship({}).fromJson(new Map(Object.entries(v)))\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\treturn this.relationship;\n\t}\n}\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/client/ClientList.tsx",["1191","1192","1193","1194","1195","1196","1197","1198","1199","1200"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Space, message, Skeleton, Table } from \"antd\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { User } from \"../../services/api/models/user_model\";\nimport { ClientRepo } from \"../../services/api/repositories/client_repo\";\nimport { Client } from \"../../services/api/models/client_model\";\nimport { RoleRepo } from \"../../services/api/repositories/role_repo\";\nimport { RelationshipRepo } from \"../../services/api/repositories/relationship_repo\";\nimport { Role } from \"../../services/api/models/role_model\";\nimport { Relationship } from \"../../services/api/models/relationship_model\";\nimport { Box, Button, Flex, Spacer, Stack } from \"@chakra-ui/react\";\nimport Title from \"antd/lib/typography/Title\";\nimport { RoutePath } from \"../../utils/routePath\";\n\nexport const ClientList: React.FC<any> = () => {\n\tlet clientRepo = new ClientRepo();\n\n\tlet relationshipRepo = new RelationshipRepo();\n\n\tlet location = useLocation();\n\tlet history = useHistory();\n\tconst locationState: any = location.state;\n\n\t// Get current sign in User\n\tconst user = useContext(AuthContext);\n\n\t// Handle the state of each option in Menu bar\n\n\tconst [_viewTitle, setViewTitle] = useState<string>(\"Clients\");\n\n\tconst [_viewList, setViewList] = useState<Array<Relationship>>([]);\n\n\tconst [_listLoading, setListLoading] = useState<boolean>(true);\n\n\tasync function getClient() {\n\t\tsetViewList([]);\n\n\t\tlet apiResult = await clientRepo.getClientById({\n\t\t\thistory: history,\n\t\t\tclientId: locationState.clientId!,\n\t\t});\n\n\t\tif (apiResult.isSuccess) {\n\t\t\tif (apiResult.data[0].roles !== undefined) {\n\t\t\t\tsetViewList(\n\t\t\t\t\tapiResult.data[0].roles.map(\n\t\t\t\t\t\t(item: Relationship, index: number) => {\n\t\t\t\t\t\t\tconsole.log(index);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tindex: index + 1,\n\t\t\t\t\t\t\t\tkey: item.clientRoleRelId,\n\t\t\t\t\t\t\t\tclientRoleRelId: item.clientRoleRelId,\n\t\t\t\t\t\t\t\tname: item.role![0].name,\n\t\t\t\t\t\t\t\tpermission: item.permission,\n\t\t\t\t\t\t\t\tcreatedDateTime: new Date(\n\t\t\t\t\t\t\t\t\titem.createdDateTime ?? \"\"\n\t\t\t\t\t\t\t\t).toLocaleString(),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\n\tasync function deleteClient(clientId: string) {\n\t\tlet apiResult = await clientRepo.deleteClient({\n\t\t\thistory: history,\n\t\t\tclientId: clientId!,\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tsetListLoading(true);\n\t\t\thistory.replace(RoutePath.dashboard);\n\t\t\tmessage.success(\"Delete client success\");\n\t\t} else {\n\t\t\tmessage.success(\"Delete Fail\");\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\n\tasync function deleteRelationship(clientRoleRelId: string) {\n\t\tlet apiResult = await relationshipRepo.deleteRelationship({\n\t\t\thistory: history,\n\t\t\tclientRoleRelId: clientRoleRelId!,\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tsetListLoading(true);\n\t\t\tgetClient();\n\t\t\tmessage.success(\"Delete relationship success\");\n\t\t} else {\n\t\t\tmessage.success(\"Delete Fail\");\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\n\tuseEffect(() => {\n\t\tgetClient();\n\n\t\treturn () => {\n\t\t\tsetViewTitle(\"\");\n\t\t\tsetViewList([]);\n\t\t\tsetListLoading(true);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Layout>\n\t\t\t\t<Row className=\"dashboard_row\">\n\t\t\t\t\t<Col xs={24} xl={6} className=\"dashboard_col\" span={6} />\n\t\t\t\t\t<Col xs={24} xl={12} className=\"dashboard_col\" span={12}>\n\t\t\t\t\t\t<Stack spacing={4}>\n\t\t\t\t\t\t\t<Flex>\n\t\t\t\t\t\t\t\t<Box p=\"4\">\n\t\t\t\t\t\t\t\t\t<Title level={4}>\n\t\t\t\t\t\t\t\t\t\t{`${locationState.name}'s roles`}\n\t\t\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t\t\t<Box p={4}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tbackgroundColor={\"red.400\"}\n\t\t\t\t\t\t\t\t\t\tcolor={\"white\"}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tdeleteClient(\n\t\t\t\t\t\t\t\t\t\t\t\tlocationState.clientId\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tDelete {locationState.name}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t<Skeleton active loading={_listLoading}>\n\t\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\t\tdataSource={_viewList}\n\t\t\t\t\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Index\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"index\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"index\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Role Name\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"name\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"name\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Permission\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"permission\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"permission\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Created Date\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"createdDateTime\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"createdDateTime\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Action\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"action\",\n\t\t\t\t\t\t\t\t\t\t\trender: (text, record) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Space size=\"middle\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"orange\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={\"white\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(record);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteRelationship(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecord.clientRoleRelId ??\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</Space>\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Skeleton>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={24} xl={12} className=\"dashboard_col\" span={6} />\n\t\t\t\t</Row>\n\t\t\t</Layout>\n\t\t</>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/role/RoleList.tsx",["1201","1202","1203","1204","1205","1206","1207","1208","1209"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Space, message, Skeleton, Table } from \"antd\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { User } from \"../../services/api/models/user_model\";\nimport { ClientRepo } from \"../../services/api/repositories/client_repo\";\nimport { Client } from \"../../services/api/models/client_model\";\nimport { RoleRepo } from \"../../services/api/repositories/role_repo\";\nimport { RelationshipRepo } from \"../../services/api/repositories/relationship_repo\";\nimport { Role } from \"../../services/api/models/role_model\";\nimport { Relationship } from \"../../services/api/models/relationship_model\";\nimport { Box, Button, Flex, Spacer, Stack } from \"@chakra-ui/react\";\nimport Title from \"antd/lib/typography/Title\";\nimport { RoutePath } from \"../../utils/routePath\";\n\nexport const RoleList: React.FC<any> = () => {\n\tlet roleRepo = new RoleRepo();\n\n\tlet relationshipRepo = new RelationshipRepo();\n\n\tlet location = useLocation();\n\tlet history = useHistory();\n\tconst locationState: any = location.state;\n\n\t// Get current sign in User\n\tconst user = useContext(AuthContext);\n\n\t// Handle the state of each option in Menu bar\n\n\tconst [_viewList, setViewList] = useState<Array<Relationship>>([]);\n\n\tconst [_listLoading, setListLoading] = useState<boolean>(true);\n\n\tasync function getRole() {\n\t\tsetViewList([]);\n\n\t\tlet apiResult = await roleRepo.getRoleById({\n\t\t\thistory:history,\n\t\t\troleId: locationState.roleId!,\n\t\t});\n\n\t\tif (apiResult.isSuccess) {\n\t\t\tconsole.log(apiResult.data[0]);\n\t\t\tif (apiResult.data[0].clients !== undefined) {\n\t\t\t\tsetViewList(await mapData(apiResult.data[0].clients));\n\t\t\t}\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\n\tasync function mapData(roleData: any) {\n\t\treturn roleData.map((item: Relationship, index: number) => {\n\t\t\treturn {\n\t\t\t\tindex: index + 1,\n\t\t\t\tkey: item.clientRoleRelId,\n\t\t\t\tclientRoleRelId: item.clientRoleRelId,\n\t\t\t\tname: item.client![0].name,\n\t\t\t\tpermission: item.permission,\n\t\t\t\tcreatedDateTime: new Date(\n\t\t\t\t\titem.createdDateTime ?? \"\"\n\t\t\t\t).toLocaleString(),\n\t\t\t};\n\t\t});\n\t}\n\n\tasync function deleteRole(roleId: string) {\n\t\tlet apiResult = await roleRepo.deleteRole({\n\t\t\thistory:history,\n\t\t\troleId: roleId!,\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tsetListLoading(true);\n\t\t\thistory.replace(RoutePath.dashboard);\n\t\t\tmessage.success(\"Delete role success\");\n\t\t} else {\n\t\t\tmessage.success(\"Delete Fail\");\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\n\tasync function deleteRelationship(clientRoleRelId: string) {\n\t\tlet apiResult = await relationshipRepo.deleteRelationship({\n\t\t\thistory:history,\n\t\t\tclientRoleRelId: clientRoleRelId!,\n\t\t});\n\t\tif (apiResult.isSuccess) {\n\t\t\tsetListLoading(true);\n\t\t\tgetRole();\n\t\t\tmessage.success(\"Delete relationship success\");\n\t\t} else {\n\t\t\tmessage.success(\"Delete Fail\");\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\n\tuseEffect(() => {\n\t\tgetRole();\n\n\t\treturn () => {\n\t\t\tsetViewList([]);\n\t\t\tsetListLoading(true);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Layout>\n\t\t\t\t<Row className=\"dashboard_row\">\n\t\t\t\t\t<Col xs={24} xl={6} className=\"dashboard_col\" span={6} />\n\t\t\t\t\t<Col xs={24} xl={12} className=\"dashboard_col\" span={12}>\n\t\t\t\t\t\t<Stack spacing={4}>\n\t\t\t\t\t\t\t<Flex>\n\t\t\t\t\t\t\t\t<Box p=\"4\">\n\t\t\t\t\t\t\t\t\t<Title level={4}>\n\t\t\t\t\t\t\t\t\t\tClients of {`${locationState.name}`}\n\t\t\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t\t\t<Box p={4}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tbackgroundColor={\"red.400\"}\n\t\t\t\t\t\t\t\t\t\tcolor={\"white\"}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tdeleteRole(locationState.roleId);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tDelete {locationState.name}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t<Skeleton active loading={_listLoading}>\n\t\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\t\tdataSource={_viewList}\n\t\t\t\t\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Index\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"index\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"index\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Client Name\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"name\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"name\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Permission\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"permission\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"permission\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Created Date\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"createdDateTime\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"createdDateTime\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Action\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"action\",\n\t\t\t\t\t\t\t\t\t\t\trender: (text, record) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Space size=\"middle\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"orange\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={\"white\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(record);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteRelationship(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecord.clientRoleRelId ??\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</Space>\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Skeleton>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={24} xl={12} className=\"dashboard_col\" span={6} />\n\t\t\t\t</Row>\n\t\t\t</Layout>\n\t\t</>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/pages/accesslog/AccessLogList.tsx",["1210","1211","1212","1213","1214","1215","1216","1217","1218","1219","1220","1221","1222","1223","1224","1225"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport { Layout, Row, Col, Space, message, Skeleton, Table } from \"antd\";\nimport { AuthContext } from \"../../utils/AuthContext\";\nimport { LocalStorage } from \"../../utils/localStorage\";\nimport { UserRepo } from \"../../services/api/repositories/user_repo\";\nimport { User } from \"../../services/api/models/user_model\";\nimport { ClientRepo } from \"../../services/api/repositories/client_repo\";\nimport { Client } from \"../../services/api/models/client_model\";\nimport { RoleRepo } from \"../../services/api/repositories/role_repo\";\nimport { RelationshipRepo } from \"../../services/api/repositories/relationship_repo\";\nimport { Role } from \"../../services/api/models/role_model\";\nimport { Relationship } from \"../../services/api/models/relationship_model\";\nimport { Box, Text, Flex, Link, Spacer, Stack } from \"@chakra-ui/react\";\nimport Title from \"antd/lib/typography/Title\";\nimport { RoutePath } from \"../../utils/routePath\";\nimport { AccessLogRepo } from \"../../services/api/repositories/accesslog_repo\";\nimport { AccessLog } from \"../../services/api/models/accesslog_model\";\n\nexport const AccessLogList: React.FC<any> = () => {\n\tlet accessLogRepo = new AccessLogRepo();\n\n\tlet location = useLocation();\n\tlet history = useHistory();\n\tconst locationState: any = location.state;\n\n\t// Handle the state of each option in Menu bar\n\n\tconst [_viewTitle, setViewTitle] = useState<string>(\"Clients\");\n\n\tconst [_viewList, setViewList] = useState<Array<AccessLog>>([]);\n\n\tconst [_listLoading, setListLoading] = useState<boolean>(true);\n\n\tasync function getClient() {\n\t\tsetViewList([]);\n\t\tlet apiResult = await accessLogRepo.getAccessLog({\n\t\t\thistory: history,\n\t\t});\n\n\t\tif (apiResult.isSuccess) {\n\t\t\tif (apiResult.data[0] !== undefined) {\n\t\t\t\tsetViewList(\n\t\t\t\t\tapiResult.data.map((item: AccessLog, index: number) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tindex: index + 1,\n\t\t\t\t\t\t\tkey: item.requestId,\n\t\t\t\t\t\t\tclient: item.client,\n\t\t\t\t\t\t\trole: item.role,\n\t\t\t\t\t\t\trelationship:\n\t\t\t\t\t\t\t\titem.relationship === null\n\t\t\t\t\t\t\t\t\t? \"N/A\"\n\t\t\t\t\t\t\t\t\t: item.relationship,\n\t\t\t\t\t\t\tapi: item.api,\n\t\t\t\t\t\t\tcreatedDateTime: new Date(\n\t\t\t\t\t\t\t\titem.createdDateTime ?? \"\"\n\t\t\t\t\t\t\t).toLocaleString(),\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tsetListLoading(false);\n\t}\n\tuseEffect(() => {\n\t\tgetClient();\n\n\t\treturn () => {\n\t\t\tsetViewTitle(\"\");\n\t\t\tsetViewList([]);\n\t\t\tsetListLoading(true);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Layout>\n\t\t\t\t<Row className=\"dashboard_row\">\n\t\t\t\t\t<Col xs={24} xl={6} className=\"dashboard_col\" span={6} />\n\t\t\t\t\t<Col xs={24} xl={12} className=\"dashboard_col\" span={12}>\n\t\t\t\t\t\t<Stack spacing={4}>\n\t\t\t\t\t\t\t<Flex>\n\t\t\t\t\t\t\t\t<Box p=\"4\">\n\t\t\t\t\t\t\t\t\t<Title level={4}>Access Log</Title>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t<Skeleton active loading={_listLoading}>\n\t\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\t\tdataSource={_viewList}\n\t\t\t\t\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Index\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"index\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"index\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Client ID\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"client\",\n\t\t\t\t\t\t\t\t\t\t\trender: (text, record) =>\n\t\t\t\t\t\t\t\t\t\t\t\trecord.client !== null ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Space size=\"middle\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"blue.400\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRoutePath.create_client,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclientId:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecord.client,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{record.client}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Space>\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Text>N/A</Text>\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Role ID\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"role\",\n\t\t\t\t\t\t\t\t\t\t\trender: (text, record) =>\n\t\t\t\t\t\t\t\t\t\t\t\trecord.role !== null ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Space size=\"middle\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"blue.400\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRoutePath.create_role,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\troleId: record.role,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{record.role}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Space>\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Text>N/A</Text>\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Relationship ID\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"relationship\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"relationship\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"API name\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"api\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"api\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: \"Created Date\",\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: \"createdDateTime\",\n\t\t\t\t\t\t\t\t\t\t\tkey: \"createdDateTime\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Skeleton>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={24} xl={12} className=\"dashboard_col\" span={6} />\n\t\t\t\t</Row>\n\t\t\t</Layout>\n\t\t</>\n\t);\n};\n","/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/repositories/accesslog_repo.tsx",[],"/Users/gohshengyang/Documents/GitHub/zeusapi-web/src/services/api/models/accesslog_model.tsx",[],{"ruleId":"1226","replacedBy":"1227"},{"ruleId":"1228","replacedBy":"1229"},{"ruleId":"1230","severity":1,"message":"1231","line":6,"column":2,"nodeType":"1232","messageId":"1233","endLine":6,"endColumn":12},{"ruleId":"1230","severity":1,"message":"1234","line":7,"column":2,"nodeType":"1232","messageId":"1233","endLine":7,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1235","line":17,"column":10,"nodeType":"1232","messageId":"1233","endLine":17,"endColumn":17},{"ruleId":"1230","severity":1,"message":"1236","line":26,"column":10,"nodeType":"1232","messageId":"1233","endLine":26,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1237","line":26,"column":22,"nodeType":"1232","messageId":"1233","endLine":26,"endColumn":31},{"ruleId":"1230","severity":1,"message":"1238","line":26,"column":33,"nodeType":"1232","messageId":"1233","endLine":26,"endColumn":41},{"ruleId":"1230","severity":1,"message":"1239","line":28,"column":10,"nodeType":"1232","messageId":"1233","endLine":28,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1240","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1242","line":21,"column":8,"nodeType":"1232","messageId":"1233","endLine":21,"endColumn":18},{"ruleId":"1230","severity":1,"message":"1240","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1243","line":9,"column":2,"nodeType":"1232","messageId":"1233","endLine":9,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1244","line":12,"column":2,"nodeType":"1232","messageId":"1233","endLine":12,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1245","line":13,"column":2,"nodeType":"1232","messageId":"1233","endLine":13,"endColumn":7},{"ruleId":"1230","severity":1,"message":"1246","line":18,"column":22,"nodeType":"1232","messageId":"1233","endLine":18,"endColumn":32},{"ruleId":"1230","severity":1,"message":"1247","line":19,"column":10,"nodeType":"1232","messageId":"1233","endLine":19,"endColumn":26},{"ruleId":"1230","severity":1,"message":"1248","line":23,"column":10,"nodeType":"1232","messageId":"1233","endLine":23,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1249","line":24,"column":16,"nodeType":"1232","messageId":"1233","endLine":24,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1250","line":25,"column":8,"nodeType":"1232","messageId":"1233","endLine":25,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1251","line":28,"column":10,"nodeType":"1232","messageId":"1233","endLine":28,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1252","line":30,"column":2,"nodeType":"1232","messageId":"1233","endLine":30,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1253","line":31,"column":2,"nodeType":"1232","messageId":"1233","endLine":31,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1254","line":32,"column":2,"nodeType":"1232","messageId":"1233","endLine":32,"endColumn":14},{"ruleId":"1255","severity":1,"message":"1256","line":129,"column":5,"nodeType":"1257","endLine":129,"endColumn":7,"suggestions":"1258"},{"ruleId":"1255","severity":1,"message":"1259","line":131,"column":38,"nodeType":"1257","endLine":131,"endColumn":44,"suggestions":"1260"},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1261","severity":1,"message":"1262","line":13,"column":65,"nodeType":"1263","messageId":"1264","endLine":13,"endColumn":67},{"ruleId":"1230","severity":1,"message":"1265","line":20,"column":8,"nodeType":"1232","messageId":"1233","endLine":20,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1266","line":29,"column":9,"nodeType":"1232","messageId":"1233","endLine":29,"endColumn":18},{"ruleId":"1255","severity":1,"message":"1267","line":35,"column":5,"nodeType":"1257","endLine":35,"endColumn":7,"suggestions":"1268"},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1269","line":4,"column":2,"nodeType":"1232","messageId":"1233","endLine":4,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1270","line":39,"column":20,"nodeType":"1232","messageId":"1233","endLine":39,"endColumn":30},{"ruleId":"1255","severity":1,"message":"1271","line":76,"column":5,"nodeType":"1257","endLine":76,"endColumn":7,"suggestions":"1272"},{"ruleId":"1255","severity":1,"message":"1259","line":77,"column":38,"nodeType":"1257","endLine":77,"endColumn":44,"suggestions":"1273"},{"ruleId":"1230","severity":1,"message":"1238","line":1,"column":40,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":48},{"ruleId":"1230","severity":1,"message":"1231","line":2,"column":10,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1241","line":3,"column":8,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1244","line":5,"column":2,"nodeType":"1232","messageId":"1233","endLine":5,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1269","line":6,"column":2,"nodeType":"1232","messageId":"1233","endLine":6,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1274","line":7,"column":2,"nodeType":"1232","messageId":"1233","endLine":7,"endColumn":6},{"ruleId":"1230","severity":1,"message":"1275","line":8,"column":2,"nodeType":"1232","messageId":"1233","endLine":8,"endColumn":12},{"ruleId":"1230","severity":1,"message":"1276","line":11,"column":2,"nodeType":"1232","messageId":"1233","endLine":11,"endColumn":7},{"ruleId":"1230","severity":1,"message":"1277","line":12,"column":2,"nodeType":"1232","messageId":"1233","endLine":12,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1278","line":16,"column":8,"nodeType":"1232","messageId":"1233","endLine":16,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1279","line":21,"column":10,"nodeType":"1232","messageId":"1233","endLine":21,"endColumn":19},{"ruleId":"1230","severity":1,"message":"1247","line":24,"column":10,"nodeType":"1232","messageId":"1233","endLine":24,"endColumn":26},{"ruleId":"1230","severity":1,"message":"1280","line":25,"column":10,"nodeType":"1232","messageId":"1233","endLine":25,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1281","line":26,"column":10,"nodeType":"1232","messageId":"1233","endLine":26,"endColumn":21},{"ruleId":"1255","severity":1,"message":"1282","line":66,"column":5,"nodeType":"1257","endLine":66,"endColumn":7,"suggestions":"1283"},{"ruleId":"1255","severity":1,"message":"1284","line":104,"column":5,"nodeType":"1257","endLine":104,"endColumn":7,"suggestions":"1285"},{"ruleId":"1230","severity":1,"message":"1236","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":27},{"ruleId":"1230","severity":1,"message":"1237","line":1,"column":29,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":38},{"ruleId":"1230","severity":1,"message":"1238","line":1,"column":40,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":48},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1255","severity":1,"message":"1286","line":40,"column":6,"nodeType":"1257","endLine":40,"endColumn":8,"suggestions":"1287"},{"ruleId":"1230","severity":1,"message":"1288","line":47,"column":13,"nodeType":"1232","messageId":"1233","endLine":47,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1241","line":3,"column":8,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1276","line":11,"column":2,"nodeType":"1232","messageId":"1233","endLine":11,"endColumn":7},{"ruleId":"1230","severity":1,"message":"1277","line":12,"column":2,"nodeType":"1232","messageId":"1233","endLine":12,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1289","line":13,"column":2,"nodeType":"1232","messageId":"1233","endLine":13,"endColumn":6},{"ruleId":"1230","severity":1,"message":"1290","line":19,"column":2,"nodeType":"1232","messageId":"1233","endLine":19,"endColumn":6},{"ruleId":"1230","severity":1,"message":"1291","line":23,"column":8,"nodeType":"1232","messageId":"1233","endLine":23,"endColumn":25},{"ruleId":"1230","severity":1,"message":"1247","line":27,"column":10,"nodeType":"1232","messageId":"1233","endLine":27,"endColumn":26},{"ruleId":"1230","severity":1,"message":"1280","line":28,"column":10,"nodeType":"1232","messageId":"1233","endLine":28,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1281","line":29,"column":10,"nodeType":"1232","messageId":"1233","endLine":29,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1292","line":32,"column":8,"nodeType":"1232","messageId":"1233","endLine":32,"endColumn":12},{"ruleId":"1230","severity":1,"message":"1252","line":34,"column":2,"nodeType":"1232","messageId":"1233","endLine":34,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1293","line":37,"column":2,"nodeType":"1232","messageId":"1233","endLine":37,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1294","line":46,"column":9,"nodeType":"1232","messageId":"1233","endLine":46,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1295","line":47,"column":9,"nodeType":"1232","messageId":"1233","endLine":47,"endColumn":15},{"ruleId":"1230","severity":1,"message":"1296","line":48,"column":9,"nodeType":"1232","messageId":"1233","endLine":48,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1297","line":58,"column":8,"nodeType":"1232","messageId":"1233","endLine":58,"endColumn":12},{"ruleId":"1255","severity":1,"message":"1298","line":110,"column":5,"nodeType":"1257","endLine":110,"endColumn":7,"suggestions":"1299"},{"ruleId":"1230","severity":1,"message":"1240","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1276","line":11,"column":2,"nodeType":"1232","messageId":"1233","endLine":11,"endColumn":7},{"ruleId":"1230","severity":1,"message":"1244","line":12,"column":2,"nodeType":"1232","messageId":"1233","endLine":12,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1245","line":13,"column":2,"nodeType":"1232","messageId":"1233","endLine":13,"endColumn":7},{"ruleId":"1230","severity":1,"message":"1246","line":18,"column":22,"nodeType":"1232","messageId":"1233","endLine":18,"endColumn":32},{"ruleId":"1230","severity":1,"message":"1247","line":19,"column":10,"nodeType":"1232","messageId":"1233","endLine":19,"endColumn":26},{"ruleId":"1230","severity":1,"message":"1249","line":24,"column":16,"nodeType":"1232","messageId":"1233","endLine":24,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1250","line":25,"column":8,"nodeType":"1232","messageId":"1233","endLine":25,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1251","line":26,"column":10,"nodeType":"1232","messageId":"1233","endLine":26,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1252","line":28,"column":2,"nodeType":"1232","messageId":"1233","endLine":28,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1253","line":30,"column":2,"nodeType":"1232","messageId":"1233","endLine":30,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1254","line":31,"column":2,"nodeType":"1232","messageId":"1233","endLine":31,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1300","line":33,"column":10,"nodeType":"1232","messageId":"1233","endLine":33,"endColumn":19},{"ruleId":"1230","severity":1,"message":"1301","line":34,"column":10,"nodeType":"1232","messageId":"1233","endLine":34,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1302","line":35,"column":23,"nodeType":"1232","messageId":"1233","endLine":35,"endColumn":30},{"ruleId":"1255","severity":1,"message":"1303","line":133,"column":5,"nodeType":"1257","endLine":133,"endColumn":7,"suggestions":"1304"},{"ruleId":"1255","severity":1,"message":"1259","line":138,"column":5,"nodeType":"1257","endLine":138,"endColumn":13,"suggestions":"1305"},{"ruleId":"1230","severity":1,"message":"1240","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1246","line":5,"column":22,"nodeType":"1232","messageId":"1233","endLine":5,"endColumn":32},{"ruleId":"1230","severity":1,"message":"1240","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1275","line":8,"column":2,"nodeType":"1232","messageId":"1233","endLine":8,"endColumn":12},{"ruleId":"1230","severity":1,"message":"1306","line":23,"column":2,"nodeType":"1232","messageId":"1233","endLine":23,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1307","line":25,"column":2,"nodeType":"1232","messageId":"1233","endLine":25,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1308","line":32,"column":15,"nodeType":"1232","messageId":"1233","endLine":32,"endColumn":25},{"ruleId":"1230","severity":1,"message":"1309","line":32,"column":27,"nodeType":"1232","messageId":"1233","endLine":32,"endColumn":40},{"ruleId":"1230","severity":1,"message":"1310","line":35,"column":10,"nodeType":"1232","messageId":"1233","endLine":35,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1311","line":37,"column":8,"nodeType":"1232","messageId":"1233","endLine":37,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1248","line":44,"column":10,"nodeType":"1232","messageId":"1233","endLine":44,"endColumn":22},{"ruleId":"1255","severity":1,"message":"1271","line":233,"column":5,"nodeType":"1257","endLine":233,"endColumn":7,"suggestions":"1312"},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1297","line":49,"column":11,"nodeType":"1232","messageId":"1233","endLine":49,"endColumn":15},{"ruleId":"1313","severity":1,"message":"1314","line":148,"column":41,"nodeType":"1315","endLine":155,"endColumn":42},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1316","line":14,"column":7,"nodeType":"1232","messageId":"1233","endLine":14,"endColumn":25},{"ruleId":"1226","replacedBy":"1317"},{"ruleId":"1228","replacedBy":"1318"},{"ruleId":"1230","severity":1,"message":"1319","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":27},{"ruleId":"1230","severity":1,"message":"1320","line":1,"column":29,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":40},{"ruleId":"1230","severity":1,"message":"1321","line":23,"column":10,"nodeType":"1232","messageId":"1233","endLine":23,"endColumn":18},{"ruleId":"1261","severity":1,"message":"1262","line":49,"column":54,"nodeType":"1263","messageId":"1264","endLine":49,"endColumn":56},{"ruleId":"1261","severity":1,"message":"1262","line":103,"column":64,"nodeType":"1263","messageId":"1264","endLine":103,"endColumn":66},{"ruleId":"1230","severity":1,"message":"1240","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1269","line":3,"column":10,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1308","line":4,"column":15,"nodeType":"1232","messageId":"1233","endLine":4,"endColumn":25},{"ruleId":"1230","severity":1,"message":"1309","line":4,"column":27,"nodeType":"1232","messageId":"1233","endLine":4,"endColumn":40},{"ruleId":"1230","severity":1,"message":"1322","line":8,"column":10,"nodeType":"1232","messageId":"1233","endLine":8,"endColumn":17},{"ruleId":"1230","severity":1,"message":"1323","line":10,"column":10,"nodeType":"1232","messageId":"1233","endLine":10,"endColumn":21},{"ruleId":"1255","severity":1,"message":"1324","line":46,"column":5,"nodeType":"1257","endLine":46,"endColumn":7,"suggestions":"1325"},{"ruleId":"1230","severity":1,"message":"1326","line":2,"column":10,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1240","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1327","line":3,"column":2,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":6},{"ruleId":"1230","severity":1,"message":"1276","line":8,"column":2,"nodeType":"1232","messageId":"1233","endLine":8,"endColumn":7},{"ruleId":"1230","severity":1,"message":"1289","line":9,"column":2,"nodeType":"1232","messageId":"1233","endLine":9,"endColumn":6},{"ruleId":"1230","severity":1,"message":"1243","line":12,"column":2,"nodeType":"1232","messageId":"1233","endLine":12,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1328","line":19,"column":10,"nodeType":"1232","messageId":"1233","endLine":19,"endColumn":18},{"ruleId":"1230","severity":1,"message":"1329","line":21,"column":10,"nodeType":"1232","messageId":"1233","endLine":21,"endColumn":15},{"ruleId":"1230","severity":1,"message":"1311","line":22,"column":8,"nodeType":"1232","messageId":"1233","endLine":22,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1330","line":23,"column":10,"nodeType":"1232","messageId":"1233","endLine":23,"endColumn":15},{"ruleId":"1230","severity":1,"message":"1331","line":27,"column":10,"nodeType":"1232","messageId":"1233","endLine":27,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1332","line":31,"column":16,"nodeType":"1232","messageId":"1233","endLine":31,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1333","line":62,"column":9,"nodeType":"1232","messageId":"1233","endLine":62,"endColumn":24},{"ruleId":"1230","severity":1,"message":"1334","line":62,"column":26,"nodeType":"1232","messageId":"1233","endLine":62,"endColumn":44},{"ruleId":"1230","severity":1,"message":"1335","line":64,"column":9,"nodeType":"1232","messageId":"1233","endLine":64,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1336","line":64,"column":24,"nodeType":"1232","messageId":"1233","endLine":64,"endColumn":40},{"ruleId":"1255","severity":1,"message":"1259","line":162,"column":38,"nodeType":"1257","endLine":162,"endColumn":53,"suggestions":"1337"},{"ruleId":"1230","severity":1,"message":"1251","line":1,"column":10,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1240","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1308","line":4,"column":15,"nodeType":"1232","messageId":"1233","endLine":4,"endColumn":25},{"ruleId":"1230","severity":1,"message":"1309","line":4,"column":27,"nodeType":"1232","messageId":"1233","endLine":4,"endColumn":40},{"ruleId":"1230","severity":1,"message":"1323","line":10,"column":10,"nodeType":"1232","messageId":"1233","endLine":10,"endColumn":21},{"ruleId":"1255","severity":1,"message":"1338","line":51,"column":5,"nodeType":"1257","endLine":51,"endColumn":7,"suggestions":"1339"},{"ruleId":"1230","severity":1,"message":"1248","line":17,"column":10,"nodeType":"1232","messageId":"1233","endLine":17,"endColumn":22},{"ruleId":"1340","severity":1,"message":"1341","line":81,"column":7,"nodeType":"1315","endLine":87,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1342","line":5,"column":2,"nodeType":"1232","messageId":"1233","endLine":5,"endColumn":17},{"ruleId":"1230","severity":1,"message":"1343","line":8,"column":2,"nodeType":"1232","messageId":"1233","endLine":8,"endColumn":10},{"ruleId":"1230","severity":1,"message":"1344","line":15,"column":2,"nodeType":"1232","messageId":"1233","endLine":15,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1345","line":21,"column":2,"nodeType":"1232","messageId":"1233","endLine":21,"endColumn":17},{"ruleId":"1230","severity":1,"message":"1346","line":20,"column":7,"nodeType":"1232","messageId":"1233","endLine":20,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1347","line":13,"column":10,"nodeType":"1232","messageId":"1233","endLine":13,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1248","line":1,"column":10,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1348","line":5,"column":10,"nodeType":"1232","messageId":"1233","endLine":5,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1349","line":5,"column":31,"nodeType":"1232","messageId":"1233","endLine":5,"endColumn":35},{"ruleId":"1230","severity":1,"message":"1244","line":2,"column":2,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1344","line":8,"column":2,"nodeType":"1232","messageId":"1233","endLine":8,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1350","line":14,"column":10,"nodeType":"1232","messageId":"1233","endLine":14,"endColumn":18},{"ruleId":"1230","severity":1,"message":"1231","line":6,"column":2,"nodeType":"1232","messageId":"1233","endLine":6,"endColumn":12},{"ruleId":"1230","severity":1,"message":"1234","line":7,"column":2,"nodeType":"1232","messageId":"1233","endLine":7,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1235","line":17,"column":10,"nodeType":"1232","messageId":"1233","endLine":17,"endColumn":17},{"ruleId":"1230","severity":1,"message":"1236","line":26,"column":10,"nodeType":"1232","messageId":"1233","endLine":26,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1237","line":26,"column":22,"nodeType":"1232","messageId":"1233","endLine":26,"endColumn":31},{"ruleId":"1230","severity":1,"message":"1238","line":26,"column":33,"nodeType":"1232","messageId":"1233","endLine":26,"endColumn":41},{"ruleId":"1230","severity":1,"message":"1239","line":28,"column":10,"nodeType":"1232","messageId":"1233","endLine":28,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1346","line":20,"column":7,"nodeType":"1232","messageId":"1233","endLine":20,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1238","line":1,"column":40,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":48},{"ruleId":"1230","severity":1,"message":"1231","line":2,"column":10,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1241","line":3,"column":8,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1244","line":5,"column":2,"nodeType":"1232","messageId":"1233","endLine":5,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1269","line":6,"column":2,"nodeType":"1232","messageId":"1233","endLine":6,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1274","line":7,"column":2,"nodeType":"1232","messageId":"1233","endLine":7,"endColumn":6},{"ruleId":"1230","severity":1,"message":"1275","line":8,"column":2,"nodeType":"1232","messageId":"1233","endLine":8,"endColumn":12},{"ruleId":"1230","severity":1,"message":"1276","line":11,"column":2,"nodeType":"1232","messageId":"1233","endLine":11,"endColumn":7},{"ruleId":"1230","severity":1,"message":"1277","line":12,"column":2,"nodeType":"1232","messageId":"1233","endLine":12,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1278","line":16,"column":8,"nodeType":"1232","messageId":"1233","endLine":16,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1279","line":21,"column":10,"nodeType":"1232","messageId":"1233","endLine":21,"endColumn":19},{"ruleId":"1230","severity":1,"message":"1247","line":24,"column":10,"nodeType":"1232","messageId":"1233","endLine":24,"endColumn":26},{"ruleId":"1230","severity":1,"message":"1280","line":25,"column":10,"nodeType":"1232","messageId":"1233","endLine":25,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1281","line":26,"column":10,"nodeType":"1232","messageId":"1233","endLine":26,"endColumn":21},{"ruleId":"1255","severity":1,"message":"1282","line":66,"column":5,"nodeType":"1257","endLine":66,"endColumn":7,"suggestions":"1351"},{"ruleId":"1230","severity":1,"message":"1240","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1297","line":49,"column":11,"nodeType":"1232","messageId":"1233","endLine":49,"endColumn":15},{"ruleId":"1313","severity":1,"message":"1314","line":148,"column":41,"nodeType":"1315","endLine":155,"endColumn":42},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1240","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1246","line":5,"column":22,"nodeType":"1232","messageId":"1233","endLine":5,"endColumn":32},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1269","line":4,"column":2,"nodeType":"1232","messageId":"1233","endLine":4,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1270","line":39,"column":20,"nodeType":"1232","messageId":"1233","endLine":39,"endColumn":30},{"ruleId":"1255","severity":1,"message":"1271","line":76,"column":5,"nodeType":"1257","endLine":76,"endColumn":7,"suggestions":"1352"},{"ruleId":"1255","severity":1,"message":"1259","line":77,"column":38,"nodeType":"1257","endLine":77,"endColumn":44,"suggestions":"1353"},{"ruleId":"1230","severity":1,"message":"1240","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1243","line":9,"column":2,"nodeType":"1232","messageId":"1233","endLine":9,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1244","line":12,"column":2,"nodeType":"1232","messageId":"1233","endLine":12,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1245","line":13,"column":2,"nodeType":"1232","messageId":"1233","endLine":13,"endColumn":7},{"ruleId":"1230","severity":1,"message":"1246","line":18,"column":22,"nodeType":"1232","messageId":"1233","endLine":18,"endColumn":32},{"ruleId":"1230","severity":1,"message":"1247","line":19,"column":10,"nodeType":"1232","messageId":"1233","endLine":19,"endColumn":26},{"ruleId":"1230","severity":1,"message":"1248","line":23,"column":10,"nodeType":"1232","messageId":"1233","endLine":23,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1249","line":24,"column":16,"nodeType":"1232","messageId":"1233","endLine":24,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1250","line":25,"column":8,"nodeType":"1232","messageId":"1233","endLine":25,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1251","line":28,"column":10,"nodeType":"1232","messageId":"1233","endLine":28,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1252","line":30,"column":2,"nodeType":"1232","messageId":"1233","endLine":30,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1253","line":31,"column":2,"nodeType":"1232","messageId":"1233","endLine":31,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1254","line":32,"column":2,"nodeType":"1232","messageId":"1233","endLine":32,"endColumn":14},{"ruleId":"1255","severity":1,"message":"1256","line":129,"column":5,"nodeType":"1257","endLine":129,"endColumn":7,"suggestions":"1354"},{"ruleId":"1255","severity":1,"message":"1259","line":131,"column":38,"nodeType":"1257","endLine":131,"endColumn":44,"suggestions":"1355"},{"ruleId":"1230","severity":1,"message":"1240","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1276","line":11,"column":2,"nodeType":"1232","messageId":"1233","endLine":11,"endColumn":7},{"ruleId":"1230","severity":1,"message":"1244","line":12,"column":2,"nodeType":"1232","messageId":"1233","endLine":12,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1245","line":13,"column":2,"nodeType":"1232","messageId":"1233","endLine":13,"endColumn":7},{"ruleId":"1230","severity":1,"message":"1246","line":18,"column":22,"nodeType":"1232","messageId":"1233","endLine":18,"endColumn":32},{"ruleId":"1230","severity":1,"message":"1247","line":19,"column":10,"nodeType":"1232","messageId":"1233","endLine":19,"endColumn":26},{"ruleId":"1230","severity":1,"message":"1249","line":24,"column":16,"nodeType":"1232","messageId":"1233","endLine":24,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1250","line":25,"column":8,"nodeType":"1232","messageId":"1233","endLine":25,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1251","line":26,"column":10,"nodeType":"1232","messageId":"1233","endLine":26,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1252","line":28,"column":2,"nodeType":"1232","messageId":"1233","endLine":28,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1253","line":30,"column":2,"nodeType":"1232","messageId":"1233","endLine":30,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1254","line":31,"column":2,"nodeType":"1232","messageId":"1233","endLine":31,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1300","line":33,"column":10,"nodeType":"1232","messageId":"1233","endLine":33,"endColumn":19},{"ruleId":"1230","severity":1,"message":"1301","line":34,"column":10,"nodeType":"1232","messageId":"1233","endLine":34,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1302","line":35,"column":23,"nodeType":"1232","messageId":"1233","endLine":35,"endColumn":30},{"ruleId":"1255","severity":1,"message":"1303","line":133,"column":5,"nodeType":"1257","endLine":133,"endColumn":7,"suggestions":"1356"},{"ruleId":"1255","severity":1,"message":"1259","line":138,"column":5,"nodeType":"1257","endLine":138,"endColumn":13,"suggestions":"1357"},{"ruleId":"1230","severity":1,"message":"1241","line":3,"column":8,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1276","line":11,"column":2,"nodeType":"1232","messageId":"1233","endLine":11,"endColumn":7},{"ruleId":"1230","severity":1,"message":"1277","line":12,"column":2,"nodeType":"1232","messageId":"1233","endLine":12,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1289","line":13,"column":2,"nodeType":"1232","messageId":"1233","endLine":13,"endColumn":6},{"ruleId":"1230","severity":1,"message":"1290","line":19,"column":2,"nodeType":"1232","messageId":"1233","endLine":19,"endColumn":6},{"ruleId":"1230","severity":1,"message":"1291","line":23,"column":8,"nodeType":"1232","messageId":"1233","endLine":23,"endColumn":25},{"ruleId":"1230","severity":1,"message":"1247","line":27,"column":10,"nodeType":"1232","messageId":"1233","endLine":27,"endColumn":26},{"ruleId":"1230","severity":1,"message":"1280","line":28,"column":10,"nodeType":"1232","messageId":"1233","endLine":28,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1281","line":29,"column":10,"nodeType":"1232","messageId":"1233","endLine":29,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1292","line":32,"column":8,"nodeType":"1232","messageId":"1233","endLine":32,"endColumn":12},{"ruleId":"1230","severity":1,"message":"1252","line":34,"column":2,"nodeType":"1232","messageId":"1233","endLine":34,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1293","line":37,"column":2,"nodeType":"1232","messageId":"1233","endLine":37,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1294","line":46,"column":9,"nodeType":"1232","messageId":"1233","endLine":46,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1295","line":47,"column":9,"nodeType":"1232","messageId":"1233","endLine":47,"endColumn":15},{"ruleId":"1230","severity":1,"message":"1296","line":48,"column":9,"nodeType":"1232","messageId":"1233","endLine":48,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1297","line":58,"column":8,"nodeType":"1232","messageId":"1233","endLine":58,"endColumn":12},{"ruleId":"1255","severity":1,"message":"1298","line":110,"column":5,"nodeType":"1257","endLine":110,"endColumn":7,"suggestions":"1358"},{"ruleId":"1255","severity":1,"message":"1286","line":40,"column":6,"nodeType":"1257","endLine":40,"endColumn":8,"suggestions":"1359"},{"ruleId":"1230","severity":1,"message":"1288","line":47,"column":13,"nodeType":"1232","messageId":"1233","endLine":47,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1240","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1308","line":4,"column":15,"nodeType":"1232","messageId":"1233","endLine":4,"endColumn":25},{"ruleId":"1230","severity":1,"message":"1309","line":4,"column":27,"nodeType":"1232","messageId":"1233","endLine":4,"endColumn":40},{"ruleId":"1230","severity":1,"message":"1323","line":10,"column":10,"nodeType":"1232","messageId":"1233","endLine":10,"endColumn":21},{"ruleId":"1255","severity":1,"message":"1338","line":51,"column":5,"nodeType":"1257","endLine":51,"endColumn":7,"suggestions":"1360"},{"ruleId":"1230","severity":1,"message":"1240","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1275","line":8,"column":2,"nodeType":"1232","messageId":"1233","endLine":8,"endColumn":12},{"ruleId":"1230","severity":1,"message":"1306","line":23,"column":2,"nodeType":"1232","messageId":"1233","endLine":23,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1307","line":25,"column":2,"nodeType":"1232","messageId":"1233","endLine":25,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1308","line":32,"column":15,"nodeType":"1232","messageId":"1233","endLine":32,"endColumn":25},{"ruleId":"1230","severity":1,"message":"1309","line":32,"column":27,"nodeType":"1232","messageId":"1233","endLine":32,"endColumn":40},{"ruleId":"1230","severity":1,"message":"1310","line":35,"column":10,"nodeType":"1232","messageId":"1233","endLine":35,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1311","line":37,"column":8,"nodeType":"1232","messageId":"1233","endLine":37,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1248","line":44,"column":10,"nodeType":"1232","messageId":"1233","endLine":44,"endColumn":22},{"ruleId":"1255","severity":1,"message":"1271","line":233,"column":5,"nodeType":"1257","endLine":233,"endColumn":7,"suggestions":"1361"},{"ruleId":"1255","severity":1,"message":"1284","line":104,"column":5,"nodeType":"1257","endLine":104,"endColumn":7,"suggestions":"1362"},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1242","line":21,"column":8,"nodeType":"1232","messageId":"1233","endLine":21,"endColumn":18},{"ruleId":"1230","severity":1,"message":"1236","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":27},{"ruleId":"1230","severity":1,"message":"1237","line":1,"column":29,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":38},{"ruleId":"1230","severity":1,"message":"1238","line":1,"column":40,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":48},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1261","severity":1,"message":"1262","line":13,"column":65,"nodeType":"1263","messageId":"1264","endLine":13,"endColumn":67},{"ruleId":"1230","severity":1,"message":"1265","line":20,"column":8,"nodeType":"1232","messageId":"1233","endLine":20,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1266","line":29,"column":9,"nodeType":"1232","messageId":"1233","endLine":29,"endColumn":18},{"ruleId":"1255","severity":1,"message":"1267","line":35,"column":5,"nodeType":"1257","endLine":35,"endColumn":7,"suggestions":"1363"},{"ruleId":"1230","severity":1,"message":"1244","line":2,"column":2,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1344","line":8,"column":2,"nodeType":"1232","messageId":"1233","endLine":8,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1350","line":14,"column":10,"nodeType":"1232","messageId":"1233","endLine":14,"endColumn":18},{"ruleId":"1230","severity":1,"message":"1342","line":5,"column":2,"nodeType":"1232","messageId":"1233","endLine":5,"endColumn":17},{"ruleId":"1230","severity":1,"message":"1248","line":17,"column":10,"nodeType":"1232","messageId":"1233","endLine":17,"endColumn":22},{"ruleId":"1340","severity":1,"message":"1341","line":81,"column":7,"nodeType":"1315","endLine":87,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1347","line":13,"column":10,"nodeType":"1232","messageId":"1233","endLine":13,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1319","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":27},{"ruleId":"1230","severity":1,"message":"1320","line":1,"column":29,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":40},{"ruleId":"1230","severity":1,"message":"1321","line":23,"column":10,"nodeType":"1232","messageId":"1233","endLine":23,"endColumn":18},{"ruleId":"1261","severity":1,"message":"1262","line":49,"column":54,"nodeType":"1263","messageId":"1264","endLine":49,"endColumn":56},{"ruleId":"1261","severity":1,"message":"1262","line":103,"column":64,"nodeType":"1263","messageId":"1264","endLine":103,"endColumn":66},{"ruleId":"1230","severity":1,"message":"1240","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1269","line":3,"column":10,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1308","line":4,"column":15,"nodeType":"1232","messageId":"1233","endLine":4,"endColumn":25},{"ruleId":"1230","severity":1,"message":"1309","line":4,"column":27,"nodeType":"1232","messageId":"1233","endLine":4,"endColumn":40},{"ruleId":"1230","severity":1,"message":"1322","line":8,"column":10,"nodeType":"1232","messageId":"1233","endLine":8,"endColumn":17},{"ruleId":"1230","severity":1,"message":"1323","line":10,"column":10,"nodeType":"1232","messageId":"1233","endLine":10,"endColumn":21},{"ruleId":"1255","severity":1,"message":"1324","line":46,"column":5,"nodeType":"1257","endLine":46,"endColumn":7,"suggestions":"1364"},{"ruleId":"1230","severity":1,"message":"1251","line":1,"column":10,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1240","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1327","line":3,"column":2,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":6},{"ruleId":"1230","severity":1,"message":"1276","line":8,"column":2,"nodeType":"1232","messageId":"1233","endLine":8,"endColumn":7},{"ruleId":"1230","severity":1,"message":"1289","line":9,"column":2,"nodeType":"1232","messageId":"1233","endLine":9,"endColumn":6},{"ruleId":"1230","severity":1,"message":"1243","line":12,"column":2,"nodeType":"1232","messageId":"1233","endLine":12,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1328","line":19,"column":10,"nodeType":"1232","messageId":"1233","endLine":19,"endColumn":18},{"ruleId":"1230","severity":1,"message":"1329","line":21,"column":10,"nodeType":"1232","messageId":"1233","endLine":21,"endColumn":15},{"ruleId":"1230","severity":1,"message":"1311","line":22,"column":8,"nodeType":"1232","messageId":"1233","endLine":22,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1330","line":23,"column":10,"nodeType":"1232","messageId":"1233","endLine":23,"endColumn":15},{"ruleId":"1230","severity":1,"message":"1331","line":27,"column":10,"nodeType":"1232","messageId":"1233","endLine":27,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1332","line":31,"column":16,"nodeType":"1232","messageId":"1233","endLine":31,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1333","line":62,"column":9,"nodeType":"1232","messageId":"1233","endLine":62,"endColumn":24},{"ruleId":"1230","severity":1,"message":"1334","line":62,"column":26,"nodeType":"1232","messageId":"1233","endLine":62,"endColumn":44},{"ruleId":"1230","severity":1,"message":"1335","line":64,"column":9,"nodeType":"1232","messageId":"1233","endLine":64,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1336","line":64,"column":24,"nodeType":"1232","messageId":"1233","endLine":64,"endColumn":40},{"ruleId":"1255","severity":1,"message":"1259","line":162,"column":38,"nodeType":"1257","endLine":162,"endColumn":53,"suggestions":"1365"},{"ruleId":"1230","severity":1,"message":"1326","line":2,"column":10,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1248","line":1,"column":10,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1348","line":5,"column":10,"nodeType":"1232","messageId":"1233","endLine":5,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1349","line":5,"column":31,"nodeType":"1232","messageId":"1233","endLine":5,"endColumn":35},{"ruleId":"1230","severity":1,"message":"1343","line":8,"column":2,"nodeType":"1232","messageId":"1233","endLine":8,"endColumn":10},{"ruleId":"1230","severity":1,"message":"1344","line":15,"column":2,"nodeType":"1232","messageId":"1233","endLine":15,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1345","line":21,"column":2,"nodeType":"1232","messageId":"1233","endLine":21,"endColumn":17},{"ruleId":"1226","replacedBy":"1366"},{"ruleId":"1228","replacedBy":"1367"},{"ruleId":"1230","severity":1,"message":"1346","line":19,"column":7,"nodeType":"1232","messageId":"1233","endLine":19,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1269","line":3,"column":10,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1368","line":3,"column":18,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1369","line":3,"column":23,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":26},{"ruleId":"1230","severity":1,"message":"1289","line":3,"column":44,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":48},{"ruleId":"1230","severity":1,"message":"1310","line":9,"column":2,"nodeType":"1232","messageId":"1233","endLine":9,"endColumn":12},{"ruleId":"1230","severity":1,"message":"1370","line":20,"column":2,"nodeType":"1232","messageId":"1233","endLine":20,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1371","line":21,"column":2,"nodeType":"1232","messageId":"1233","endLine":21,"endColumn":11},{"ruleId":"1230","severity":1,"message":"1372","line":22,"column":2,"nodeType":"1232","messageId":"1233","endLine":22,"endColumn":7},{"ruleId":"1230","severity":1,"message":"1244","line":25,"column":2,"nodeType":"1232","messageId":"1233","endLine":25,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1373","line":31,"column":7,"nodeType":"1232","messageId":"1233","endLine":31,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1297","line":61,"column":8,"nodeType":"1232","messageId":"1233","endLine":61,"endColumn":12},{"ruleId":"1230","severity":1,"message":"1236","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":27},{"ruleId":"1230","severity":1,"message":"1237","line":1,"column":29,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":38},{"ruleId":"1230","severity":1,"message":"1238","line":1,"column":40,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":48},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1261","severity":1,"message":"1262","line":12,"column":65,"nodeType":"1263","messageId":"1264","endLine":12,"endColumn":67},{"ruleId":"1230","severity":1,"message":"1265","line":19,"column":8,"nodeType":"1232","messageId":"1233","endLine":19,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1266","line":28,"column":9,"nodeType":"1232","messageId":"1233","endLine":28,"endColumn":18},{"ruleId":"1255","severity":1,"message":"1267","line":34,"column":5,"nodeType":"1257","endLine":34,"endColumn":7,"suggestions":"1374"},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1269","line":3,"column":10,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1368","line":3,"column":18,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1369","line":3,"column":23,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":26},{"ruleId":"1230","severity":1,"message":"1289","line":3,"column":51,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":55},{"ruleId":"1230","severity":1,"message":"1310","line":12,"column":2,"nodeType":"1232","messageId":"1233","endLine":12,"endColumn":12},{"ruleId":"1230","severity":1,"message":"1242","line":21,"column":8,"nodeType":"1232","messageId":"1233","endLine":21,"endColumn":18},{"ruleId":"1230","severity":1,"message":"1370","line":25,"column":2,"nodeType":"1232","messageId":"1233","endLine":25,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1375","line":27,"column":2,"nodeType":"1232","messageId":"1233","endLine":27,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1376","line":28,"column":2,"nodeType":"1232","messageId":"1233","endLine":28,"endColumn":19},{"ruleId":"1230","severity":1,"message":"1244","line":30,"column":2,"nodeType":"1232","messageId":"1233","endLine":30,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1377","line":36,"column":10,"nodeType":"1232","messageId":"1233","endLine":36,"endColumn":18},{"ruleId":"1230","severity":1,"message":"1378","line":36,"column":20,"nodeType":"1232","messageId":"1233","endLine":36,"endColumn":31},{"ruleId":"1230","severity":1,"message":"1373","line":38,"column":7,"nodeType":"1232","messageId":"1233","endLine":38,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1316","line":48,"column":7,"nodeType":"1232","messageId":"1233","endLine":48,"endColumn":25},{"ruleId":"1230","severity":1,"message":"1240","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1269","line":3,"column":10,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1368","line":3,"column":18,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1369","line":3,"column":23,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":26},{"ruleId":"1230","severity":1,"message":"1289","line":3,"column":34,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":38},{"ruleId":"1230","severity":1,"message":"1310","line":5,"column":10,"nodeType":"1232","messageId":"1233","endLine":5,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1246","line":5,"column":22,"nodeType":"1232","messageId":"1233","endLine":5,"endColumn":32},{"ruleId":"1230","severity":1,"message":"1240","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1269","line":3,"column":10,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1368","line":3,"column":18,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1369","line":3,"column":23,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":26},{"ruleId":"1230","severity":1,"message":"1289","line":3,"column":34,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":38},{"ruleId":"1230","severity":1,"message":"1310","line":5,"column":10,"nodeType":"1232","messageId":"1233","endLine":5,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1244","line":10,"column":2,"nodeType":"1232","messageId":"1233","endLine":10,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1370","line":11,"column":2,"nodeType":"1232","messageId":"1233","endLine":11,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1372","line":14,"column":2,"nodeType":"1232","messageId":"1233","endLine":14,"endColumn":7},{"ruleId":"1230","severity":1,"message":"1238","line":1,"column":40,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":48},{"ruleId":"1230","severity":1,"message":"1231","line":2,"column":10,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1241","line":3,"column":8,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1244","line":5,"column":2,"nodeType":"1232","messageId":"1233","endLine":5,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1269","line":6,"column":2,"nodeType":"1232","messageId":"1233","endLine":6,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1274","line":7,"column":2,"nodeType":"1232","messageId":"1233","endLine":7,"endColumn":6},{"ruleId":"1230","severity":1,"message":"1275","line":8,"column":2,"nodeType":"1232","messageId":"1233","endLine":8,"endColumn":12},{"ruleId":"1230","severity":1,"message":"1276","line":11,"column":2,"nodeType":"1232","messageId":"1233","endLine":11,"endColumn":7},{"ruleId":"1230","severity":1,"message":"1277","line":12,"column":2,"nodeType":"1232","messageId":"1233","endLine":12,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1278","line":16,"column":8,"nodeType":"1232","messageId":"1233","endLine":16,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1279","line":21,"column":10,"nodeType":"1232","messageId":"1233","endLine":21,"endColumn":19},{"ruleId":"1230","severity":1,"message":"1247","line":24,"column":10,"nodeType":"1232","messageId":"1233","endLine":24,"endColumn":26},{"ruleId":"1230","severity":1,"message":"1280","line":25,"column":10,"nodeType":"1232","messageId":"1233","endLine":25,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1281","line":26,"column":10,"nodeType":"1232","messageId":"1233","endLine":26,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1379","line":36,"column":8,"nodeType":"1232","messageId":"1233","endLine":36,"endColumn":16},{"ruleId":"1255","severity":1,"message":"1282","line":62,"column":5,"nodeType":"1257","endLine":62,"endColumn":7,"suggestions":"1380"},{"ruleId":"1230","severity":1,"message":"1289","line":1,"column":10,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1369","line":1,"column":16,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":19},{"ruleId":"1230","severity":1,"message":"1269","line":1,"column":34,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":40},{"ruleId":"1230","severity":1,"message":"1368","line":1,"column":49,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":52},{"ruleId":"1230","severity":1,"message":"1381","line":2,"column":10,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":24},{"ruleId":"1230","severity":1,"message":"1382","line":7,"column":8,"nodeType":"1232","messageId":"1233","endLine":7,"endColumn":10},{"ruleId":"1230","severity":1,"message":"1310","line":10,"column":10,"nodeType":"1232","messageId":"1233","endLine":10,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1244","line":15,"column":2,"nodeType":"1232","messageId":"1233","endLine":15,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1373","line":23,"column":7,"nodeType":"1232","messageId":"1233","endLine":23,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1316","line":33,"column":7,"nodeType":"1232","messageId":"1233","endLine":33,"endColumn":25},{"ruleId":"1230","severity":1,"message":"1383","line":55,"column":9,"nodeType":"1232","messageId":"1233","endLine":55,"endColumn":22},{"ruleId":"1255","severity":1,"message":"1284","line":102,"column":5,"nodeType":"1257","endLine":102,"endColumn":7,"suggestions":"1384"},{"ruleId":"1255","severity":1,"message":"1259","line":106,"column":5,"nodeType":"1257","endLine":106,"endColumn":15,"suggestions":"1385"},{"ruleId":"1230","severity":1,"message":"1241","line":2,"column":8,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1269","line":3,"column":10,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1368","line":3,"column":18,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1369","line":3,"column":23,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":26},{"ruleId":"1230","severity":1,"message":"1289","line":3,"column":28,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":32},{"ruleId":"1230","severity":1,"message":"1310","line":6,"column":10,"nodeType":"1232","messageId":"1233","endLine":6,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1250","line":7,"column":8,"nodeType":"1232","messageId":"1233","endLine":7,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1319","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":27},{"ruleId":"1230","severity":1,"message":"1320","line":1,"column":29,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":40},{"ruleId":"1230","severity":1,"message":"1321","line":24,"column":10,"nodeType":"1232","messageId":"1233","endLine":24,"endColumn":18},{"ruleId":"1230","severity":1,"message":"1386","line":34,"column":12,"nodeType":"1232","messageId":"1233","endLine":34,"endColumn":24},{"ruleId":"1230","severity":1,"message":"1253","line":38,"column":10,"nodeType":"1232","messageId":"1233","endLine":38,"endColumn":29},{"ruleId":"1230","severity":1,"message":"1254","line":38,"column":31,"nodeType":"1232","messageId":"1233","endLine":38,"endColumn":43},{"ruleId":"1261","severity":1,"message":"1262","line":62,"column":54,"nodeType":"1263","messageId":"1264","endLine":62,"endColumn":56},{"ruleId":"1261","severity":1,"message":"1262","line":120,"column":64,"nodeType":"1263","messageId":"1264","endLine":120,"endColumn":66},{"ruleId":"1230","severity":1,"message":"1244","line":2,"column":2,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1344","line":8,"column":2,"nodeType":"1232","messageId":"1233","endLine":8,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1350","line":14,"column":10,"nodeType":"1232","messageId":"1233","endLine":14,"endColumn":18},{"ruleId":"1226","replacedBy":"1387"},{"ruleId":"1228","replacedBy":"1388"},{"ruleId":"1230","severity":1,"message":"1347","line":13,"column":10,"nodeType":"1232","messageId":"1233","endLine":13,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1342","line":5,"column":2,"nodeType":"1232","messageId":"1233","endLine":5,"endColumn":17},{"ruleId":"1230","severity":1,"message":"1389","line":8,"column":2,"nodeType":"1232","messageId":"1233","endLine":8,"endColumn":6},{"ruleId":"1230","severity":1,"message":"1390","line":9,"column":2,"nodeType":"1232","messageId":"1233","endLine":9,"endColumn":19},{"ruleId":"1230","severity":1,"message":"1248","line":16,"column":10,"nodeType":"1232","messageId":"1233","endLine":16,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1391","line":81,"column":7,"nodeType":"1232","messageId":"1233","endLine":81,"endColumn":12},{"ruleId":"1226","replacedBy":"1392"},{"ruleId":"1228","replacedBy":"1393"},{"ruleId":"1230","severity":1,"message":"1231","line":2,"column":10,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":20},{"ruleId":"1226","replacedBy":"1394"},{"ruleId":"1228","replacedBy":"1395"},{"ruleId":"1230","severity":1,"message":"1241","line":3,"column":8,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1290","line":13,"column":2,"nodeType":"1232","messageId":"1233","endLine":13,"endColumn":6},{"ruleId":"1230","severity":1,"message":"1291","line":17,"column":8,"nodeType":"1232","messageId":"1233","endLine":17,"endColumn":25},{"ruleId":"1230","severity":1,"message":"1396","line":24,"column":2,"nodeType":"1232","messageId":"1233","endLine":24,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1293","line":27,"column":2,"nodeType":"1232","messageId":"1233","endLine":27,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1397","line":30,"column":2,"nodeType":"1232","messageId":"1233","endLine":30,"endColumn":13},{"ruleId":"1230","severity":1,"message":"1398","line":31,"column":2,"nodeType":"1232","messageId":"1233","endLine":31,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1302","line":35,"column":10,"nodeType":"1232","messageId":"1233","endLine":35,"endColumn":17},{"ruleId":"1230","severity":1,"message":"1399","line":37,"column":8,"nodeType":"1232","messageId":"1233","endLine":37,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1297","line":58,"column":8,"nodeType":"1232","messageId":"1233","endLine":58,"endColumn":12},{"ruleId":"1230","severity":1,"message":"1400","line":88,"column":7,"nodeType":"1232","messageId":"1233","endLine":88,"endColumn":13},{"ruleId":"1255","severity":1,"message":"1401","line":188,"column":5,"nodeType":"1257","endLine":188,"endColumn":7,"suggestions":"1402"},{"ruleId":"1230","severity":1,"message":"1343","line":8,"column":2,"nodeType":"1232","messageId":"1233","endLine":8,"endColumn":10},{"ruleId":"1230","severity":1,"message":"1344","line":15,"column":2,"nodeType":"1232","messageId":"1233","endLine":15,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1345","line":21,"column":2,"nodeType":"1232","messageId":"1233","endLine":21,"endColumn":17},{"ruleId":"1255","severity":1,"message":"1403","line":140,"column":5,"nodeType":"1257","endLine":140,"endColumn":7,"suggestions":"1404"},{"ruleId":"1255","severity":1,"message":"1259","line":145,"column":5,"nodeType":"1257","endLine":145,"endColumn":18,"suggestions":"1405"},{"ruleId":"1230","severity":1,"message":"1406","line":2,"column":10,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":25},{"ruleId":"1230","severity":1,"message":"1407","line":2,"column":27,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":31},{"ruleId":"1230","severity":1,"message":"1408","line":6,"column":10,"nodeType":"1232","messageId":"1233","endLine":6,"endColumn":20},{"ruleId":"1255","severity":1,"message":"1409","line":140,"column":5,"nodeType":"1257","endLine":140,"endColumn":7,"suggestions":"1410"},{"ruleId":"1255","severity":1,"message":"1259","line":145,"column":5,"nodeType":"1257","endLine":145,"endColumn":16,"suggestions":"1411"},{"ruleId":"1230","severity":1,"message":"1386","line":5,"column":12,"nodeType":"1232","messageId":"1233","endLine":5,"endColumn":24},{"ruleId":"1230","severity":1,"message":"1244","line":9,"column":2,"nodeType":"1232","messageId":"1233","endLine":9,"endColumn":8},{"ruleId":"1230","severity":1,"message":"1412","line":10,"column":2,"nodeType":"1232","messageId":"1233","endLine":10,"endColumn":6},{"ruleId":"1230","severity":1,"message":"1372","line":12,"column":16,"nodeType":"1232","messageId":"1233","endLine":12,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1413","line":18,"column":10,"nodeType":"1232","messageId":"1233","endLine":18,"endColumn":18},{"ruleId":"1255","severity":1,"message":"1414","line":224,"column":5,"nodeType":"1257","endLine":224,"endColumn":7,"suggestions":"1415"},{"ruleId":"1255","severity":1,"message":"1259","line":229,"column":5,"nodeType":"1257","endLine":229,"endColumn":44,"suggestions":"1416"},{"ruleId":"1230","severity":1,"message":"1417","line":1,"column":10,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1407","line":2,"column":27,"nodeType":"1232","messageId":"1233","endLine":2,"endColumn":31},{"ruleId":"1230","severity":1,"message":"1241","line":3,"column":8,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1248","line":6,"column":10,"nodeType":"1232","messageId":"1233","endLine":6,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1413","line":7,"column":10,"nodeType":"1232","messageId":"1233","endLine":7,"endColumn":18},{"ruleId":"1230","severity":1,"message":"1349","line":8,"column":10,"nodeType":"1232","messageId":"1233","endLine":8,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1417","line":10,"column":10,"nodeType":"1232","messageId":"1233","endLine":10,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1418","line":11,"column":10,"nodeType":"1232","messageId":"1233","endLine":11,"endColumn":18},{"ruleId":"1230","severity":1,"message":"1407","line":13,"column":10,"nodeType":"1232","messageId":"1233","endLine":13,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1297","line":29,"column":8,"nodeType":"1232","messageId":"1233","endLine":29,"endColumn":12},{"ruleId":"1230","severity":1,"message":"1419","line":33,"column":9,"nodeType":"1232","messageId":"1233","endLine":33,"endColumn":19},{"ruleId":"1255","severity":1,"message":"1420","line":110,"column":5,"nodeType":"1257","endLine":110,"endColumn":7,"suggestions":"1421"},{"ruleId":"1230","severity":1,"message":"1241","line":3,"column":8,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1248","line":6,"column":10,"nodeType":"1232","messageId":"1233","endLine":6,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1413","line":7,"column":10,"nodeType":"1232","messageId":"1233","endLine":7,"endColumn":18},{"ruleId":"1230","severity":1,"message":"1349","line":8,"column":10,"nodeType":"1232","messageId":"1233","endLine":8,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1408","line":9,"column":10,"nodeType":"1232","messageId":"1233","endLine":9,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1417","line":10,"column":10,"nodeType":"1232","messageId":"1233","endLine":10,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1407","line":13,"column":10,"nodeType":"1232","messageId":"1233","endLine":13,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1297","line":29,"column":8,"nodeType":"1232","messageId":"1233","endLine":29,"endColumn":12},{"ruleId":"1255","severity":1,"message":"1422","line":106,"column":5,"nodeType":"1257","endLine":106,"endColumn":7,"suggestions":"1423"},{"ruleId":"1230","severity":1,"message":"1236","line":1,"column":17,"nodeType":"1232","messageId":"1233","endLine":1,"endColumn":27},{"ruleId":"1230","severity":1,"message":"1241","line":3,"column":8,"nodeType":"1232","messageId":"1233","endLine":3,"endColumn":9},{"ruleId":"1230","severity":1,"message":"1243","line":4,"column":35,"nodeType":"1232","messageId":"1233","endLine":4,"endColumn":42},{"ruleId":"1230","severity":1,"message":"1239","line":5,"column":10,"nodeType":"1232","messageId":"1233","endLine":5,"endColumn":21},{"ruleId":"1230","severity":1,"message":"1248","line":6,"column":10,"nodeType":"1232","messageId":"1233","endLine":6,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1413","line":7,"column":10,"nodeType":"1232","messageId":"1233","endLine":7,"endColumn":18},{"ruleId":"1230","severity":1,"message":"1349","line":8,"column":10,"nodeType":"1232","messageId":"1233","endLine":8,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1408","line":9,"column":10,"nodeType":"1232","messageId":"1233","endLine":9,"endColumn":20},{"ruleId":"1230","severity":1,"message":"1417","line":10,"column":10,"nodeType":"1232","messageId":"1233","endLine":10,"endColumn":16},{"ruleId":"1230","severity":1,"message":"1418","line":11,"column":10,"nodeType":"1232","messageId":"1233","endLine":11,"endColumn":18},{"ruleId":"1230","severity":1,"message":"1424","line":12,"column":10,"nodeType":"1232","messageId":"1233","endLine":12,"endColumn":26},{"ruleId":"1230","severity":1,"message":"1407","line":13,"column":10,"nodeType":"1232","messageId":"1233","endLine":13,"endColumn":14},{"ruleId":"1230","severity":1,"message":"1425","line":14,"column":10,"nodeType":"1232","messageId":"1233","endLine":14,"endColumn":22},{"ruleId":"1230","severity":1,"message":"1426","line":26,"column":8,"nodeType":"1232","messageId":"1233","endLine":26,"endColumn":26},{"ruleId":"1230","severity":1,"message":"1419","line":30,"column":9,"nodeType":"1232","messageId":"1233","endLine":30,"endColumn":19},{"ruleId":"1255","severity":1,"message":"1420","line":74,"column":5,"nodeType":"1257","endLine":74,"endColumn":7,"suggestions":"1427"},"no-native-reassign",["1428"],"no-negated-in-lhs",["1429"],"@typescript-eslint/no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'Contact' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'AuthContext' is defined but never used.","'ReactElement' is defined but never used.","'_' is defined but never used.","'PhoneInput' is defined but never used.","'message' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'EmailField' is defined but never used.","'FirebaseServices' is defined but never used.","'LocalStorage' is defined but never used.","'uuidv4' is defined but never used.","'Title' is defined but never used.","'url' is defined but never used.","'CopyOutlined' is defined but never used.","'MinusCircleOutlined' is defined but never used.","'PlusOutlined' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_url', 'locationState.apiKey', and 'urlRepo'. Either include them or remove the dependency array.","ArrayExpression",["1430"],"React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["1431"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'onFinish' is assigned a value but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.search'. Either include it or remove the dependency array.",["1432"],"'Layout' is defined but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'locationState.apiKey' and 'urlRepo'. Either include them or remove the dependency array.",["1433"],["1434"],"'Menu' is defined but never used.","'Typography' is defined but never used.","'Space' is defined but never used.","'Divider' is defined but never used.","'homeHeaderImg' is defined but never used.","'RoutePath' is defined but never used.","'PricingCards' is defined but never used.","'PaymentRepo' is defined but never used.","React Hook useEffect has missing dependencies: 'user?.emailVerified' and 'userRepo'. Either include them or remove the dependency array.",["1435"],"React Hook useEffect has a missing dependency: 'userRepo'. Either include it or remove the dependency array.",["1436"],"React Hook useEffect has missing dependencies: 'params.id' and 'reportRepo'. Either include them or remove the dependency array.",["1437"],"'response' is assigned a value but never used.","'Card' is defined but never used.","'Spin' is defined but never used.","'codagenceWordLogo' is defined but never used.","'Meta' is defined but never used.","'EyeInvisibleOutlined' is defined but never used.","'SubMenu' is assigned a value but never used.","'Header' is assigned a value but never used.","'Title' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUrls' and 'userRepo'. Either include them or remove the dependency array.",["1438"],"'stringify' is defined but never used.","'ObjectType' is defined but never used.","'UserUrl' is defined but never used.","React Hook useEffect has a missing dependency: 'initState'. Either include it or remove the dependency array.",["1439"],["1440"],"'LeftSquareOutlined' is defined but never used.","'MenuOutlined' is defined but never used.","'Responsive' is defined but never used.","'WidthProvider' is defined but never used.","'BackHeader' is defined but never used.","'faker' is defined but never used.",["1441"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'tailFormItemLayout' is assigned a value but never used.",["1428"],["1429"],"'forwardRef' is defined but never used.","'useCallback' is defined but never used.","'Response' is defined but never used.","'Content' is defined but never used.","'ConfigParam' is defined but never used.","React Hook useEffect has missing dependencies: 'apiKey' and 'urlRepo'. Either include them or remove the dependency array.",["1442"],"'Bar' is defined but never used.","'Tabs' is defined but never used.","'SizeType' is defined but never used.","'Chart' is defined but never used.","'MyBar' is defined but never used.","'Item' is defined but never used.","'Text' is assigned a value but never used.","'dimensionValues' is assigned a value but never used.","'setDimensionValues' is assigned a value but never used.","'metricsValues' is assigned a value but never used.","'setMetricsValues' is assigned a value but never used.",["1443"],"React Hook useEffect has missing dependencies: 'param' and 'urlRepo'. Either include them or remove the dependency array.",["1444"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'YoutubeOutlined' is defined but never used.","'Collapse' is defined but never used.","'useBreakpointValue' is defined but never used.","'ChevronDownIcon' is defined but never used.","'analytics' is assigned a value but never used.","'useRef' is defined but never used.","'GetUserByIdResponse' is defined but never used.","'User' is defined but never used.","'SubTitle' is defined but never used.",["1445"],["1446"],["1447"],["1448"],["1449"],["1450"],["1451"],["1452"],["1453"],["1454"],["1455"],["1456"],["1457"],["1458"],["1459"],["1428"],["1429"],"'Row' is defined but never used.","'Col' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'Input' is defined but never used.","'formItemLayout' is assigned a value but never used.",["1460"],"'HStack' is defined but never used.","'InputRightElement' is defined but never used.","'ViewIcon' is defined but never used.","'ViewOffIcon' is defined but never used.","'Features' is defined but never used.",["1461"],"'ConfigProvider' is defined but never used.","'en' is defined but never used.","'isCardLoading' is assigned a value but never used.",["1462"],["1463"],"'ChakraButton' is defined but never used.",["1428"],["1429"],"'Icon' is defined but never used.","'useColorModeValue' is defined but never used.","'Arrow' is assigned a value but never used.",["1428"],["1429"],["1428"],["1429"],"'CopyTwoTone' is defined but never used.","'HomeTwoTone' is defined but never used.","'PlusCircleOutlined' is defined but never used.","'mixpanel' is defined but never used.","'userId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getClients' and 'userRepo'. Either include them or remove the dependency array.",["1464"],"React Hook useEffect has missing dependencies: 'clientRepo', 'history', and 'locationState'. Either include them or remove the dependency array.",["1465"],["1466"],"'GetRoleResponse' is defined but never used.","'Role' is defined but never used.","'ClientRepo' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'locationState', and 'roleRepo'. Either include them or remove the dependency array.",["1467"],["1468"],"'Link' is defined but never used.","'UserRepo' is defined but never used.","React Hook useEffect has missing dependencies: 'getClients', 'getRoles', 'history', 'locationState', and 'relationshipRepo'. Either include them or remove the dependency array.",["1469"],["1470"],"'Client' is defined but never used.","'RoleRepo' is defined but never used.","'_viewTitle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getClient'. Either include it or remove the dependency array.",["1471"],"React Hook useEffect has a missing dependency: 'getRole'. Either include it or remove the dependency array.",["1472"],"'RelationshipRepo' is defined but never used.","'Relationship' is defined but never used.","'locationState' is assigned a value but never used.",["1473"],"no-global-assign","no-unsafe-negation",{"desc":"1474","fix":"1475"},{"desc":"1476","fix":"1477"},{"desc":"1478","fix":"1479"},{"desc":"1480","fix":"1481"},{"desc":"1476","fix":"1482"},{"desc":"1483","fix":"1484"},{"desc":"1485","fix":"1486"},{"desc":"1487","fix":"1488"},{"desc":"1489","fix":"1490"},{"desc":"1491","fix":"1492"},{"desc":"1493","fix":"1494"},{"desc":"1480","fix":"1495"},{"desc":"1496","fix":"1497"},{"desc":"1498","fix":"1499"},{"desc":"1500","fix":"1501"},{"desc":"1483","fix":"1502"},{"desc":"1480","fix":"1503"},{"desc":"1476","fix":"1504"},{"desc":"1474","fix":"1505"},{"desc":"1476","fix":"1506"},{"desc":"1491","fix":"1507"},{"desc":"1493","fix":"1508"},{"desc":"1489","fix":"1509"},{"desc":"1487","fix":"1510"},{"desc":"1500","fix":"1511"},{"desc":"1480","fix":"1512"},{"desc":"1485","fix":"1513"},{"desc":"1478","fix":"1514"},{"desc":"1496","fix":"1515"},{"desc":"1498","fix":"1516"},{"desc":"1478","fix":"1517"},{"desc":"1483","fix":"1518"},{"desc":"1485","fix":"1519"},{"desc":"1520","fix":"1521"},{"desc":"1522","fix":"1523"},{"desc":"1524","fix":"1525"},{"desc":"1526","fix":"1527"},{"desc":"1528","fix":"1529"},{"desc":"1530","fix":"1531"},{"desc":"1532","fix":"1533"},{"desc":"1534","fix":"1535"},{"desc":"1536","fix":"1537"},{"desc":"1538","fix":"1539"},{"desc":"1536","fix":"1540"},"Update the dependencies array to be: [_url, locationState.apiKey, urlRepo]",{"range":"1541","text":"1542"},"Update the dependencies array to be: [_url, form]",{"range":"1543","text":"1544"},"Update the dependencies array to be: [location.search]",{"range":"1545","text":"1546"},"Update the dependencies array to be: [locationState.apiKey, urlRepo]",{"range":"1547","text":"1548"},{"range":"1549","text":"1544"},"Update the dependencies array to be: [user?.emailVerified, userRepo]",{"range":"1550","text":"1551"},"Update the dependencies array to be: [userRepo]",{"range":"1552","text":"1553"},"Update the dependencies array to be: [params.id, reportRepo]",{"range":"1554","text":"1555"},"Update the dependencies array to be: [getUrls, userRepo]",{"range":"1556","text":"1557"},"Update the dependencies array to be: [initState]",{"range":"1558","text":"1559"},"Update the dependencies array to be: [form, schema]",{"range":"1560","text":"1561"},{"range":"1562","text":"1548"},"Update the dependencies array to be: [apiKey, urlRepo]",{"range":"1563","text":"1564"},"Update the dependencies array to be: [form, selectedGraph]",{"range":"1565","text":"1566"},"Update the dependencies array to be: [param, urlRepo]",{"range":"1567","text":"1568"},{"range":"1569","text":"1551"},{"range":"1570","text":"1548"},{"range":"1571","text":"1544"},{"range":"1572","text":"1542"},{"range":"1573","text":"1544"},{"range":"1574","text":"1559"},{"range":"1575","text":"1561"},{"range":"1576","text":"1557"},{"range":"1577","text":"1555"},{"range":"1578","text":"1568"},{"range":"1579","text":"1548"},{"range":"1580","text":"1553"},{"range":"1581","text":"1546"},{"range":"1582","text":"1564"},{"range":"1583","text":"1566"},{"range":"1584","text":"1546"},{"range":"1585","text":"1551"},{"range":"1586","text":"1553"},"Update the dependencies array to be: [form, userData]",{"range":"1587","text":"1588"},"Update the dependencies array to be: [getClients, userRepo]",{"range":"1589","text":"1590"},"Update the dependencies array to be: [clientRepo, history, locationState]",{"range":"1591","text":"1592"},"Update the dependencies array to be: [_clientData, form]",{"range":"1593","text":"1594"},"Update the dependencies array to be: [history, locationState, roleRepo]",{"range":"1595","text":"1596"},"Update the dependencies array to be: [_roleData, form]",{"range":"1597","text":"1598"},"Update the dependencies array to be: [getClients, getRoles, history, locationState, relationshipRepo]",{"range":"1599","text":"1600"},"Update the dependencies array to be: [_clientList, _roleList, _relationship, form]",{"range":"1601","text":"1602"},"Update the dependencies array to be: [getClient]",{"range":"1603","text":"1604"},"Update the dependencies array to be: [getRole]",{"range":"1605","text":"1606"},{"range":"1607","text":"1604"},[3254,3256],"[_url, locationState.apiKey, urlRepo]",[3297,3303],"[_url, form]",[984,986],"[location.search]",[1933,1935],"[locationState.apiKey, urlRepo]",[1975,1981],[2269,2271],"[user?.emailVerified, userRepo]",[2761,2763],"[userRepo]",[1507,1509],"[params.id, reportRepo]",[2870,2872],"[getUrls, userRepo]",[3253,3255],"[initState]",[3352,3360],"[form, schema]",[5841,5843],[1448,1450],"[apiKey, urlRepo]",[3875,3890],"[form, selectedGraph]",[1618,1620],"[param, urlRepo]",[2269,2271],[1933,1935],[1975,1981],[3254,3256],[3297,3303],[3253,3255],[3352,3360],[2870,2872],[1507,1509],[1618,1620],[5841,5843],[2761,2763],[984,986],[1448,1450],[3875,3890],[943,945],[2092,2094],[2515,2517],[2566,2576],"[form, userData]",[4796,4798],"[getClients, userRepo]",[3688,3690],"[clientRepo, history, locationState]",[3787,3800],"[_clientData, form]",[3684,3686],"[history, locationState, roleRepo]",[3783,3794],"[_roleData, form]",[5880,5882],"[getClients, getRoles, history, locationState, relationshipRepo]",[5979,6018],"[_clientList, _roleList, _relationship, form]",[3245,3247],"[getClient]",[3145,3147],"[getRole]",[2478,2480]]